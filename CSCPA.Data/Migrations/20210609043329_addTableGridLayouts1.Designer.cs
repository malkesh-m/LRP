// <auto-generated />
using System;
using CSCPA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSCPA.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210609043329_addTableGridLayouts1")]
    partial class addTableGridLayouts1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSCPA.Data.Entities.ApplicationLog", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ClientAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("PrimaryKeyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PrimaryKeyID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("ApplicationLog");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Attachment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.AttachmentType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("AttachmentType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.AttachmentTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("AttachmentTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BdgaccountGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupTypeID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([name])", false);

                    b.Property<string>("EditPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInactive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Linenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextyearProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroupID");

                    b.Property<decimal>("ProposedBudgetFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValueSql("((100))");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShowPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TwoMoreyearsProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupTypeId");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("ParentBdgaccountGroupId");

                    b.ToTable("BDGAccountGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupGrid", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("EditPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GroupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Parent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ShowPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("BDGAccountGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("ParentBdgaccountGroupSubGroupId");

                    b.ToTable("BDGAccountGroup_SubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupGrid", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParentSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGAccountGroup_SubGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("ParentBdgaccountGroupSubGroupSubGroupId");

                    b.ToTable("BDGAccountGroup_SubGroup_SubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupGrid", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParentBdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroup_SubGroup");

                    b.ToView("BDGAccountGroup_SubGroup_SubGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupId");

                    b.HasIndex("ParentBdgaccountGroupSubGroupSubGroupSubGroupId");

                    b.ToTable("BDGAccountGroup_SubGroup_SubGroup_SubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroupGrid", b =>
                {
                    b.Property<Guid>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Parent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGAccountGroup_SubGroup_SubGroup_SubGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupTempTjt", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToTable("BDGAccountGroup_temp_tjt");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID")
                        .HasDefaultValueSql("('ce61b2c7-8923-45b5-ba73-21aad1a58f52')");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGAccountGroupType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGAccountGroupTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudetinfoDetailDelete", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("bdgbudetinfo_detail_delete");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudetinfoDetailZero", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("bdgbudetinfo_detail_zero");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetCopyOption", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("BDGBudgetCopyOption");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetCopyOptionGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGBudgetCopyOptionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetGroupType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGBudgetGroupType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetGroupTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGBudgetGroupTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfo", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("CssStatusid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CSS_STATUSID");

                    b.Property<decimal?>("CurrentAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentMonth")
                        .HasColumnType("money")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetBDGAccountGroupName]([BDGAccountGroupID]))", false);

                    b.Property<decimal?>("DollarIncrease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("PreviousBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_BDGBudgetInfoID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ProposedBudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("ProposedBudgetAmountPDiff");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgreportTypeId");

                    b.HasIndex("PreviousBdgbudgetInfoId");

                    b.HasIndex(new[] { "YearSetupId" }, "FK_YearSetupID")
                        .HasFillFactor(90);

                    b.ToTable("BDGBudgetInfo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoActualsGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<decimal?>("CurrentMonthAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("StatusValue")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Status Value");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VarStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<decimal?>("VarianceBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("VarianceCurrentMonthBudget")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal?>("VarianceNextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("VarianceTwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("VarianceYtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("VarianceYTDBudgetAmount");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualsAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualsAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGBudgetInfoActualsGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([BudgetAmount]+[DetailAmount])", false);

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.HasKey("ObjectUid");

                    b.HasIndex("AnticipatedStartingMonthId");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupSubGroupId");

                    b.HasIndex("BdgbudgetGroupTypeId");

                    b.HasIndex("BdgcommitteeTypeId");

                    b.HasIndex("BdgemployeeCategoryId");

                    b.HasIndex("BdgemployeeId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeTypeId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.HasIndex("BdgemployeeUnitPositionId");

                    b.HasIndex("BdgemployeeUnitPositionStepId");

                    b.HasIndex("BdgmeetingStatusId");

                    b.HasIndex("BdgpositionTypeId");

                    b.HasIndex("BdgprojectTypeId");

                    b.HasIndex("FringeBdgbudgetInfoDetailId");

                    b.HasIndex("OldBdgbudgetInfoId");

                    b.HasIndex("WillBeUsingTaskForcesYesNoId");

                    b.HasIndex(new[] { "BdgbudgetInfoId" }, "FK_BDGBudgetInfo")
                        .HasFillFactor(90);

                    b.ToTable("BDGBudgetInfo_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailChange", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdateDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToTable("BDGBudgetInfo_Detail_change");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid>("BdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_DetailID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([BudgetAmount]+[DetailAmount])", false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgbudgetInfoDetailId");

                    b.ToTable("BDGBudgetInfo_Detail_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_DetailID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComputedColumnSql("([dbo].[GetGroupSubGroupName]([BDGAccountGroupID],[BDGAccountGroup_SubGroupID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([BudgetAmount]+[DetailAmount])", false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgbudgetInfoDetailDetailId");

                    b.HasIndex("BdgemployeeId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeTypeId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGBudgetInfo_Detail_Detail_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_Detail_DetailID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComputedColumnSql("([dbo].[GetGroupSubGroupName]([BDGAccountGroupID],[BDGAccountGroup_SubGroupID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([BudgetAmount]+[DetailAmount])", false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgbudgetInfoDetailDetailDetailId");

                    b.HasIndex("BdgemployeeId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeTypeId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGBudgetInfo_Detail_Detail_Detail_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetailDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_Detail_Detail_DetailID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComputedColumnSql("([dbo].[GetGroupSubGroupName]([BDGAccountGroupID],[BDGAccountGroup_SubGroupID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([BudgetAmount]+[DetailAmount])", false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgbudgetInfoDetailDetailDetailDetailId");

                    b.HasIndex("BdgemployeeId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeTypeId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetailDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_Detail_Detail_DetailID");

                    b.Property<string>("Bdgemployee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployee");

                    b.Property<string>("BdgemployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeePosition");

                    b.Property<string>("BdgemployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeStatus");

                    b.Property<string>("BdgemployeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeType");

                    b.Property<string>("BdgemployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeUnit");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.ToView("BDGBudgetInfo_Detail_Detail_Detail_Detail_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_Detail_DetailID");

                    b.Property<string>("Bdgemployee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployee");

                    b.Property<string>("BdgemployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeePosition");

                    b.Property<string>("BdgemployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeStatus");

                    b.Property<string>("BdgemployeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeType");

                    b.Property<string>("BdgemployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeUnit");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.ToView("BDGBudgetInfo_Detail_Detail_Detail_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<Guid>("BdgbudgetInfoDetailDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_Detail_DetailID");

                    b.Property<string>("Bdgemployee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployee");

                    b.Property<string>("BdgemployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeePosition");

                    b.Property<string>("BdgemployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeStatus");

                    b.Property<string>("BdgemployeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeType");

                    b.Property<string>("BdgemployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeUnit");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.ToView("BDGBudgetInfo_Detail_Detail_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<Guid>("BdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_DetailID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.ToView("BDGBudgetInfo_Detail_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CurrentMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FringeBdgbudgetInfoDetail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Fringe_BDGBudgetInfo_Detail");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreyears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("OldBdgbudgetInfo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Old_BDGBudgetInfo");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("Originialbudgetamount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("originialbudgetamount");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit")
                        .HasColumnName("override2");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailLog", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToTable("BDGBudgetInfo_Detail_log");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailLog2", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Processdate")
                        .HasColumnType("datetime")
                        .HasColumnName("processdate");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("BDGBudgetInfo_Detail_log2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailSum", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP1");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP10");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP11");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP12");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP2");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP3");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP4");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP5");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP6");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP7");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP8");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmountP9");

                    b.ToView("BDGbudgetInfo_Detail_SUM");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailTemp", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToTable("BDGBudgetInfo_Detail_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailView", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGBudgetInfo_Detail_VIEW");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailview1", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToView("BDGBudgetInfo_Detailview");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoGrid", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ActualApr")
                        .HasColumnType("money")
                        .HasColumnName("Actual Apr");

                    b.Property<decimal?>("ActualAug")
                        .HasColumnType("money")
                        .HasColumnName("Actual Aug");

                    b.Property<decimal?>("ActualDec")
                        .HasColumnType("money")
                        .HasColumnName("Actual Dec");

                    b.Property<decimal?>("ActualFeb")
                        .HasColumnType("money")
                        .HasColumnName("Actual Feb");

                    b.Property<decimal?>("ActualJan")
                        .HasColumnType("money")
                        .HasColumnName("Actual Jan");

                    b.Property<decimal?>("ActualJuly")
                        .HasColumnType("money")
                        .HasColumnName("Actual July");

                    b.Property<decimal?>("ActualJune")
                        .HasColumnType("money")
                        .HasColumnName("Actual June");

                    b.Property<decimal?>("ActualMar")
                        .HasColumnType("money")
                        .HasColumnName("Actual Mar");

                    b.Property<decimal?>("ActualMay")
                        .HasColumnType("money")
                        .HasColumnName("Actual May");

                    b.Property<decimal?>("ActualNov")
                        .HasColumnType("money")
                        .HasColumnName("Actual Nov");

                    b.Property<decimal?>("ActualOct")
                        .HasColumnType("money")
                        .HasColumnName("Actual Oct");

                    b.Property<decimal?>("ActualSept")
                        .HasColumnType("money")
                        .HasColumnName("Actual Sept");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<decimal?>("BudgetApr")
                        .HasColumnType("money")
                        .HasColumnName("Budget Apr");

                    b.Property<decimal?>("BudgetAug")
                        .HasColumnType("money")
                        .HasColumnName("Budget Aug");

                    b.Property<decimal?>("BudgetDec")
                        .HasColumnType("money")
                        .HasColumnName("Budget Dec");

                    b.Property<decimal?>("BudgetFeb")
                        .HasColumnType("money")
                        .HasColumnName("Budget Feb");

                    b.Property<decimal?>("BudgetJan")
                        .HasColumnType("money")
                        .HasColumnName("Budget Jan");

                    b.Property<decimal?>("BudgetJuly")
                        .HasColumnType("money")
                        .HasColumnName("Budget July");

                    b.Property<decimal?>("BudgetJune")
                        .HasColumnType("money")
                        .HasColumnName("Budget June");

                    b.Property<decimal?>("BudgetMar")
                        .HasColumnType("money")
                        .HasColumnName("Budget Mar");

                    b.Property<decimal?>("BudgetMay")
                        .HasColumnType("money")
                        .HasColumnName("Budget May");

                    b.Property<decimal?>("BudgetNov")
                        .HasColumnType("money")
                        .HasColumnName("Budget Nov");

                    b.Property<decimal?>("BudgetOct")
                        .HasColumnType("money")
                        .HasColumnName("Budget Oct");

                    b.Property<decimal?>("BudgetSept")
                        .HasColumnType("money")
                        .HasColumnName("Budget Sept");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Main")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("main");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("OrderNew")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGBudgetInfoGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoLog", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CssStatusid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CSS_STATUSID");

                    b.Property<decimal?>("CurrentAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentMonth")
                        .HasColumnType("money")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PreviousBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_BDGBudgetInfoID");

                    b.Property<DateTime>("Processdate")
                        .HasColumnType("datetime")
                        .HasColumnName("processdate");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("ProposedBudgetAmountPDiff");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("BDGBudgetInfo_log");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoTemp", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PreviousBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_BDGBudgetInfoID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("BDGBudgetInfo_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoToBeAdded", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToTable("BDGBudgetInfo_To_Be_Added");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoView", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CssStatusid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CSS_STATUSID");

                    b.Property<decimal?>("CurrentAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentMonth")
                        .HasColumnType("money")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PreviousBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_BDGBudgetInfoID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("ProposedBudgetAmountPDiff");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGBudgetInfo_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoChange", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DollarIncrease")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PercentIncrease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("PreviousBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_BDGBudgetInfoID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToTable("bdgbudgetinfo_change");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoCurrentyearamountTemp", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("acct");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_currentyearamount_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoCurrentyearamountTemponemonth", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_currentyearamount_temponemonth");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoDetailCombineAll", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Account Group");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_Sub_Sub_subGroup");

                    b.Property<string>("AccountgroupSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Accountgroup_Sub_SubGroup");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("bdgbudgetinfo_detail_combineAll");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoDetailCurrentyearamountTemp", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupid");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_subgroup");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupid");

                    b.Property<Guid?>("BdgaccountGroupSubGroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupid");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("BdgbudgetinfoDetailid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfo_detailid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_detail_currentyearamount_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoDetaill", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToTable("bdgbudgetinfo_detaill");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth01", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month01");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth02", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month02");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth03", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month03");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth04", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month04");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth05", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month05");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth06", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month06");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth07", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month07");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth08", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month08");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth09", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month09");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth10", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month10");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth11", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month11");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetinfoMonth12", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Bdgaccountgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroup");

                    b.Property<Guid?>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid?>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("bdgbudgetinfo_month12");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgcommitteeType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGCommitteeType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgcommitteeTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGCommitteeTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgcompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGCompanyID");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("ParentBdgcompanyId");

                    b.ToTable("BDGCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgcompanyGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParentCompany")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgdepartment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid?>("BdgdepartmentGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("BdgdepartmentGroupId");

                    b.ToTable("BDGDepartment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentBdgaccountGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupTypeID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)")
                        .HasComputedColumnSql("(([dbo].[GetBDGDepartmentname]([BDGDepartmentID])+'-')+[dbo].[GetBDGAccountGroupName]([BDGAccountGroupID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgreportGroupTypeId");

                    b.ToTable("BDGDepartment_BDGAccountGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentBdgaccountGroupGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGDepartment_BDGAccountGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("DepartmentGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGDepartmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGDepartmentGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentGroupGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGDepartmentGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentHistoricDataGrid", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgbudgetGroupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGBudgetGroupType");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("BdgreportGroupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGReportGroupType");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BDGDepartment_HistoricDataGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentHistoricDatum", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgreportGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgbudgetGroupTypeId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgreportGroupTypeId");

                    b.HasIndex("YearSetupId");

                    b.ToTable("BDGDepartment_HistoricData");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgemployee", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("(N'name')");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGEmployee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeCategory", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGEmployeeCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeCategoryGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.ToView("BDGEmployeeCategoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeEmployeeHistory", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgemployeeId");

                    b.HasIndex("BdgemployeePositionId");

                    b.HasIndex("BdgemployeeStatusId");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGEmployee_EmployeeHistory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeEmployeeHistoryGrid", b =>
                {
                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money")
                        .HasColumnName("Annual Salary($)");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployee_EmployeeHistoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeGrid", b =>
                {
                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money")
                        .HasColumnName("Annual Salary($)");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployeeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeMissingBdgbdugetinfoDetailTemp", b =>
                {
                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid?>("Test")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("test");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("BDGEmployee_missing_bdgbdugetinfo_detail_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeePosition", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGEmployeePosition");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeePositionGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployeePositionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGEmployeeStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeStatusGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployeeStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeTemp", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money");

                    b.Property<string>("Bdgcompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGCompany");

                    b.Property<Guid?>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("BdgemployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeePosition");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<string>("BdgemployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeStatus");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<string>("BdgemployeeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeUnit");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InitialBudgetYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UploadFileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UploadFileID");

                    b.HasKey("ObjectUid");

                    b.ToTable("BDGEmployeeTemp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("AdditiveFactor")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("MultiplicativeFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(11,2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGEmployeeType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeTypeGrid", b =>
                {
                    b.Property<decimal>("AdditiveFactor")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("MultiplicativeFactor")
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployeeTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnit", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid?>("EffectiveSalaryMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EffectiveSalary_MonthID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("ProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("EffectiveSalaryMonthId");

                    b.ToTable("BDGEmployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("EffectiveSalaryMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EffectiveSalary_Month");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("ProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.ToView("BDGEmployeeUnitGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPosition", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgemployeeUnitId");

                    b.ToTable("BDGEmployeeUnit_Position");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionGrid", b =>
                {
                    b.Property<Guid>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGEmployeeUnit_PositionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionStep", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("CurrentYearSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("PreviousYearSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgemployeeUnitPositionId");

                    b.HasIndex("BdgpositionTypeId");

                    b.ToTable("BDGEmployeeUnit_Position_Step");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionStepEditableGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<decimal?>("CurrentYearSalary")
                        .HasColumnType("money");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PreviousYearSalary")
                        .HasColumnType("money");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGEmployeeUnit_Position_StepEditableGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionStepGrid", b =>
                {
                    b.Property<Guid>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<decimal?>("CurrentYearSalary")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Salary($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PositionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PreviousYearSalary")
                        .HasColumnType("money")
                        .HasColumnName("Previous Year Salary($)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.ToView("BDGEmployeeUnit_Position_StepGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgglaccountMapping", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MaskedAccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex(new[] { "MaskedAccountNo" }, "IDX_MaskedAccountNo")
                        .HasFillFactor(90);

                    b.ToTable("BDGGLAccountMapping");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdggltransaction", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ApplyFromDocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApplyToDocmentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgcompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID")
                        .HasDefaultValueSql("('ce61b2c7-8923-45b5-ba73-21aad1a58f52')");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreditAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JournalEntry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("SourceDocument")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TransactionMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VendorID");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex(new[] { "TransactionAccount" }, "IDX_TransactionAccount")
                        .HasFillFactor(90);

                    b.ToTable("BDGGLTransaction");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdggltransactionGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("TransactionAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TransactionAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToView("BDGGLTransactionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgmeetingStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGMeetingStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgmeetingStatusGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGMeetingStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgpositionType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGPositionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgpositionTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGPositionTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgprojectType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGProjectType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgprojectTypeGrid", b =>
                {
                    b.Property<string>("Bdgcompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGCompany");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGProjectTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PortalID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowInCrystalViewer")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("PortalId");

                    b.ToTable("BDGReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGrid", b =>
                {
                    b.Property<string>("Bdgcompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGCompany");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowInCrystalViewer")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ShowAccountsWithZeroAmount")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGReportGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgglaccountMapping", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([AccountNo])", false);

                    b.Property<bool>("DoNotShowInReport")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MaskedAccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupSubGroupId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("BdgreportGroupId");

                    b.HasIndex(new[] { "MaskedAccountNo" }, "IDXMaskedAccountNumber")
                        .HasFillFactor(90);

                    b.ToTable("BDGReportGroup_BDGGLAccountMapping");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgglaccountMappingGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGReportGroup_BDGGLAccountMappingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<Guid>("BdgreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgreportGroupId");

                    b.HasIndex("BdgreportId");

                    b.ToTable("BDGReportGroup_BDGReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgreportGrid", b =>
                {
                    b.Property<string>("Bdgreport")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGReport");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGReportGroup_BDGReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupDuplicateMasking", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([AccountNo])", true);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgreportGroupId");

                    b.ToTable("BDGReportGroup_DuplicateMasking");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupDuplicateMaskingGrid", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGReportGroup_DuplicateMaskingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGReportGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupMissingMasking", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([AccountNo])", true);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("SumAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgreportGroupId");

                    b.ToTable("BDGReportGroup_MissingMasking");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupMissingMaskingGrid", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.ToView("BDGReportGroup_MissingMaskingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGReportGroupType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGReportGroupTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameter", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AllowMultipleValue")
                        .HasColumnType("bit");

                    b.Property<Guid>("BdgreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportID");

                    b.Property<Guid>("BdgreportParameterTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportParameterTypeID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([ParameterDisplayName])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRangeValue")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("ParameterDatabaseFieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ParameterDefaultEndValue")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ParameterDefaultStartValue")
                        .HasColumnType("datetime");

                    b.Property<string>("ParameterDefaultValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParameterDisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgreportId");

                    b.HasIndex("BdgreportParameterTypeId");

                    b.ToTable("BDGReport_Parameter");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameterGrid", b =>
                {
                    b.Property<Guid>("BdgreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportID");

                    b.Property<string>("BdgreportParameterType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGReportParameterType");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParameterDatabaseFieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ParameterDefaultEndValue")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ParameterDefaultStartValue")
                        .HasColumnType("datetime");

                    b.Property<string>("ParameterDefaultValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParameterDisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BDGReport_ParameterGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameterType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("BDGReportParameterType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameterTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("BDGReportParameterTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsAdminReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ShowInBudget")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.ToTable("BDGReportType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportTypeGrid", b =>
                {
                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<bool>("IsAdminReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("BDGReportTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportUserAccountGrid", b =>
                {
                    b.Property<Guid>("BdgreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("UserAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("BDGReport_UserAccountGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetAmountTemp", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("Recordid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Sortorder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupId");

                    b.HasIndex("BdgaccountGroupSubGroupSubGroupSubGroupId");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("YearSetupId");

                    b.ToTable("BudgetAmountTemp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetAmountTempBackup", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("Recordid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Sortorder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToTable("BudgetAmountTemp_backup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetAmountTempGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("BudgetAmountTempGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetAmountTempHistory", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<DateTime>("CopyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("COPY_DATE");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("Recordid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Sortorder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToTable("BudgetAmountTemp_HISTORY");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoExpenditureReport", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<string>("ReportName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RevisedAccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RevisedAccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoExpenditureReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoMpcdetailReport", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid?>("BdgreportGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupTypeID");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("HistoricBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("HistoricYtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("HistoricYTDActualAmount");

                    b.Property<decimal?>("HistoricYtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("HistoricYTDProjectedAmount");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<decimal?>("PydetailBudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("PYDetailBUdgetamount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoMPCDetailReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoMpcsummaryReport", b =>
                {
                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("BudgetGroupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<decimal>("PyprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYProjectedAmount");

                    b.Property<string>("ReportGroupType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ReportGroupTypeSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("BudgetInfoMPCSummaryReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoReport", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)");

                    b.Property<string>("AccountGroup2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BdgbudgetInfoDetailRecordId")
                        .HasColumnType("int")
                        .HasColumnName("BDGBudgetInfo_Detail_RecordID");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CurrentAmountP1")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP1");

                    b.Property<decimal?>("CurrentAmountP10")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP10");

                    b.Property<decimal?>("CurrentAmountP11")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP11");

                    b.Property<decimal?>("CurrentAmountP12")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP12");

                    b.Property<decimal?>("CurrentAmountP2")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP2");

                    b.Property<decimal?>("CurrentAmountP3")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP3");

                    b.Property<decimal?>("CurrentAmountP4")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP4");

                    b.Property<decimal?>("CurrentAmountP5")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP5");

                    b.Property<decimal?>("CurrentAmountP6")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP6");

                    b.Property<decimal?>("CurrentAmountP7")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP7");

                    b.Property<decimal?>("CurrentAmountP8")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP8");

                    b.Property<decimal?>("CurrentAmountP9")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP9");

                    b.Property<decimal?>("CurrentMonth")
                        .HasColumnType("money")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("money");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("LydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("LYDetailBudgetAmount");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ProposedBudgetAmountp1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountp9")
                        .HasColumnType("money");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoReportPermonth", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BdgbudgetInfoDetailRecordId")
                        .HasColumnType("int")
                        .HasColumnName("BDGBudgetInfo_Detail_RecordID");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("LydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("LYDetailBudgetAmount");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoReport_PERMONTH");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoReportapwuhp", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BdgbudgetInfoDetailRecordId")
                        .HasColumnType("int")
                        .HasColumnName("BDGBudgetInfo_Detail_RecordID");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CurrentAmountP1")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP1");

                    b.Property<decimal?>("CurrentAmountP10")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP10");

                    b.Property<decimal?>("CurrentAmountP11")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP11");

                    b.Property<decimal?>("CurrentAmountP12")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP12");

                    b.Property<decimal?>("CurrentAmountP2")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP2");

                    b.Property<decimal?>("CurrentAmountP3")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP3");

                    b.Property<decimal?>("CurrentAmountP4")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP4");

                    b.Property<decimal?>("CurrentAmountP5")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP5");

                    b.Property<decimal?>("CurrentAmountP6")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP6");

                    b.Property<decimal?>("CurrentAmountP7")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP7");

                    b.Property<decimal?>("CurrentAmountP8")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP8");

                    b.Property<decimal?>("CurrentAmountP9")
                        .HasColumnType("money")
                        .HasColumnName("currentAmountP9");

                    b.Property<decimal?>("CurrentMonth")
                        .HasColumnType("money")
                        .HasColumnName("currentMonth");

                    b.Property<decimal?>("CurrentMonthBudget")
                        .HasColumnType("money");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("LydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("LYDetailBudgetAmount");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoReportapwuhp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoReportsp", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BdgbudgetInfoDetailRecordId")
                        .HasColumnType("int")
                        .HasColumnName("BDGBudgetInfo_Detail_RecordID");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("Cybudgetamountdp")
                        .HasColumnType("money")
                        .HasColumnName("cybudgetamountdp");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<Guid>("DepartmentIdsub")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentIDsub");

                    b.Property<string>("Departmentgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Departmentgroupid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Departmentsub")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("LydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("LYDetailBudgetAmount");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("Nybudgetamountdp")
                        .HasColumnType("money")
                        .HasColumnName("nybudgetamountdp");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<decimal?>("Pybudgetamountdp")
                        .HasColumnType("money")
                        .HasColumnName("pybudgetamountdp");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("Ytdactualamountdp")
                        .HasColumnType("money")
                        .HasColumnName("ytdactualamountdp");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.Property<decimal?>("Ytdprojectedamountdp")
                        .HasColumnType("money")
                        .HasColumnName("ytdprojectedamountdp");

                    b.ToView("BudgetInfoReportsp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoReportv2", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BdgbudgetInfoDetailRecordId")
                        .HasColumnType("int")
                        .HasColumnName("BDGBudgetInfo_Detail_RecordID");

                    b.Property<string>("BudgetInfoDetailLine")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<decimal?>("CydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYDetailBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("LydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("LYDetailBudgetAmount");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<decimal?>("NydetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYDetailBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoReportv2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoRollupReport", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoRollupReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetInfoRollupReportBdgbudgetInfoV2", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AccountGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("CYBudgetAmount");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IsParent")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("NextYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("NYBudgetAmount");

                    b.Property<DateTime?>("PreviousActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PreviousStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PreviousYearSetup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ProposedBudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("PybudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("PYBudgetAmount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("BudgetInfoRollupReportBDGbudgetInfo_V2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CommitteeBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroupSubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<string>("CommitteeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WillBeUsingTaskForces")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals($)");

                    b.ToView("CommitteeBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Country", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CountryGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("CountryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CountryState", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.ToTable("Country_State");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CountryStateGrid", b =>
                {
                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("Country_StateGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsActualsPerMonthPerAcct", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("acct");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Date1")
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("DATE1");

                    b.Property<int?>("Month1")
                        .HasColumnType("int")
                        .HasColumnName("MONTH1");

                    b.ToView("CS_ACTUALS_PER_MONTH_PER_ACCT");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsActualslinkGp", b =>
                {
                    b.Property<string>("Tests")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tests");

                    b.ToView("cs_actualslink_gp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsAllocationPerMonth", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal?>("Period1")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period10")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period11")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period12")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period2")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period3")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period4")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period5")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period6")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period7")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period8")
                        .HasColumnType("numeric(18,6)");

                    b.Property<decimal?>("Period9")
                        .HasColumnType("numeric(18,6)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("YearSetupid")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("CS_allocation_per_month");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgaccountgroupSubgroupAccountcode", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("cs_bdgaccountgroup_subgroup_accountcode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetCount", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("cs_bdgbudget_count");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetInfoGrantotalUpdateView", b =>
                {
                    b.Property<Guid>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<decimal?>("Currentmonth")
                        .HasColumnType("money")
                        .HasColumnName("currentmonth");

                    b.Property<decimal?>("Currentmonthbudget")
                        .HasColumnType("money")
                        .HasColumnName("currentmonthbudget");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.ToView("cs_BDGBudgetInfo_grantotal_update_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetInfoSum", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.ToView("cs_BDGBudgetInfo_sum");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetSumdetail", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<decimal?>("DetailBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("detailBudgetAmount");

                    b.Property<decimal?>("Detailcurrentyearbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("detailcurrentyearbudgetamount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Yearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearname");

                    b.ToView("cs_bdgbudget_sumdetail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoCompareBdgbudgetinfozDetail", b =>
                {
                    b.Property<string>("Accountcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountcode");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("Count3")
                        .HasColumnType("int")
                        .HasColumnName("count3");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("Maxrecordid")
                        .HasColumnType("int")
                        .HasColumnName("maxrecordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("cs_bdgbudgetinfo_compare_bdgbudgetinfoz_detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoDetailMonthlyProof", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoid");

                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Monthamount")
                        .HasColumnType("money")
                        .HasColumnName("monthamount");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("cs_bdgbudgetinfo_detail_monthly_proof");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoDetailSummary", b =>
                {
                    b.Property<Guid>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.ToView("cs_bdgbudgetinfo_detail_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoDetailView", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllocationType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<string>("Bpl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BPL");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountPdiff")
                        .HasColumnType("money")
                        .HasColumnName("BudgetAmountPDiff");

                    b.Property<decimal?>("BudgetPercentageIncrease")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Currentmonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currentmonth");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Exclusion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMembers")
                        .HasColumnType("int")
                        .HasColumnName("NUmberOfMembers");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInTwoMoreYears")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<bool?>("Override2")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("SlotId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SlotID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(18,3)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDBudgetAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("cs_bdgbudgetinfo_detail_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoTotalsUpdate", b =>
                {
                    b.Property<Guid?>("A01objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("a01objectuid");

                    b.Property<Guid?>("Ao02objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ao02objectuid");

                    b.Property<string>("Bag01name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bag01name");

                    b.Property<string>("Bag02name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bag02name");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NUMBER");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(38,3)")
                        .HasColumnName("originalNextYearBudgetAmount");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.ToView("cs_bdgbudgetinfo_totals_Update");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoTotalsUpdateLevel2", b =>
                {
                    b.Property<string>("Bag01name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bag01name");

                    b.Property<Guid?>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(38,3)")
                        .HasColumnName("originalNextYearBudgetAmount");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.ToView("cs_bdgbudgetinfo_totals_Update_level2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBdgbudgetinfoTotalsUpdateLevel3", b =>
                {
                    b.Property<string>("Bag02name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bag02name");

                    b.Property<Guid?>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("OriginalNextYearBudgetAmount")
                        .HasColumnType("numeric(38,3)")
                        .HasColumnName("originalNextYearBudgetAmount");

                    b.Property<decimal?>("OriginialBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("OriginialTwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.Property<decimal?>("TwoMoreYearsBudgetAmount")
                        .HasColumnType("numeric(38,3)");

                    b.ToView("cs_bdgbudgetinfo_totals_Update_level3");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetInfoReportsp", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgdepartmentGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentGroupID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("cs_BudgetInfoReportsp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetInfoReportspDept", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("cs_BudgetInfoReportsp_dept");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetInfoReview", b =>
                {
                    b.Property<string>("Accountcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountcode");

                    b.Property<string>("Acctgroupname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroupname");

                    b.Property<string>("Deptname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptname");

                    b.Property<string>("Deptno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptno");

                    b.Property<decimal?>("DtBudgetamountLy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamountLY");

                    b.Property<decimal?>("DtBudgetamountNy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamount_NY");

                    b.Property<decimal?>("DtBudgetamoutCy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamout_CY");

                    b.Property<decimal?>("HdBudgetamountLy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamountLY");

                    b.Property<decimal?>("HdBudgetamountNy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamount_NY");

                    b.Property<decimal?>("HdBudgetamoutCy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamout_CY");

                    b.Property<decimal?>("HdYtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("hd_YTDActualAmount");

                    b.Property<decimal?>("HdYtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("hdYTDProjectedAmount");

                    b.Property<int>("Headerrecordid")
                        .HasColumnType("int")
                        .HasColumnName("headerrecordid");

                    b.Property<string>("LineName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lineName");

                    b.Property<string>("Linedescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("linedescription");

                    b.Property<int?>("Linerecordid")
                        .HasColumnType("int")
                        .HasColumnName("linerecordid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Yearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearname");

                    b.ToView("cs_budget_info_review");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetInfoReviewChange", b =>
                {
                    b.Property<string>("Accountcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountcode");

                    b.Property<string>("Acctgroupname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroupname");

                    b.Property<string>("Deptname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptname");

                    b.Property<string>("Deptno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptno");

                    b.Property<decimal?>("DtBudgetamountLy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamountLY");

                    b.Property<decimal?>("DtBudgetamountNy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamount_NY");

                    b.Property<decimal?>("DtBudgetamoutCy")
                        .HasColumnType("money")
                        .HasColumnName("dt_budgetamout_CY");

                    b.Property<decimal?>("HdBudgetamountLy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamountLY");

                    b.Property<decimal?>("HdBudgetamountNy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamount_NY");

                    b.Property<decimal?>("HdBudgetamoutCy")
                        .HasColumnType("money")
                        .HasColumnName("hd_budgetamout_CY");

                    b.Property<decimal?>("HdYtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("hd_YTDActualAmount");

                    b.Property<decimal?>("HdYtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("hdYTDProjectedAmount");

                    b.Property<string>("LineName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lineName");

                    b.Property<string>("Linedescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("linedescription");

                    b.Property<int>("Linerecordid")
                        .HasColumnType("int")
                        .HasColumnName("linerecordid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Processdatedetail")
                        .HasColumnType("datetime")
                        .HasColumnName("processdatedetail");

                    b.Property<DateTime>("Processdatehd")
                        .HasColumnType("datetime")
                        .HasColumnName("processdatehd");

                    b.Property<string>("Yearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearname");

                    b.ToView("cs_budget_info_review_change");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetPerMonth", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budget_per_month");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetall", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Acctgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid>("BdgbudgetinfoDetailid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfo_detailid");

                    b.Property<string>("Bdgdetailname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("bdgdetailname");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("BudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<string>("Budgetname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("budgetname");

                    b.Property<string>("Departmentname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("departmentname");

                    b.Property<string>("Deptnumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptnumber");

                    b.Property<decimal?>("DetailBudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("detail_budgetamount");

                    b.Property<decimal?>("DetailCurrentamount")
                        .HasColumnType("money")
                        .HasColumnName("detail_currentamount");

                    b.Property<string>("DetailName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("DetailNextyear")
                        .HasColumnType("money")
                        .HasColumnName("detail_nextyear");

                    b.Property<string>("Detaildescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("detaildescription");

                    b.Property<int?>("Detailoldrecorno")
                        .HasColumnType("int")
                        .HasColumnName("detailoldrecorno");

                    b.Property<int>("Detailrecorid")
                        .HasColumnType("int")
                        .HasColumnName("detailrecorid");

                    b.Property<string>("Employeeno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeeno");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP1")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP10")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP11")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP12")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP2")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP3")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP4")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP5")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP6")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP7")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP8")
                        .HasColumnType("money");

                    b.Property<decimal?>("ProposedBudgetAmountP9")
                        .HasColumnType("money");

                    b.Property<int>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.Property<string>("Yearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearname");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.ToView("cs_budgetall");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetallHeader", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Acctgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroup");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Budgetname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("budgetname");

                    b.Property<string>("Departmentname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("departmentname");

                    b.Property<string>("Deptnumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptnumber");

                    b.Property<decimal?>("EstimatedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Grouptype")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("grouptype");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.Property<string>("Yearname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearname");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.ToView("cs_budgetall_HEADER");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetlinkGp", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budgetlink_gp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetlinkProjectedGp", b =>
                {
                    b.Property<string>("Test2")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test2");

                    b.ToView("cs_budgetlink_projected_gp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetsummary", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budgetsummary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetsummaryMonth", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budgetsummary_month");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetsummaryYtd", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budgetsummary_ytd");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsBudgetupdate", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_budgetupdate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsDuplicateEmployee", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("cs_duplicate_employee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsDuplicateEmployee2", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_duplicate_employee_2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGlAccount", b =>
                {
                    b.Property<string>("Account")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountCategory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AccountType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CashFlowsType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClearBalance")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("date");

                    b.Property<string>("MainAccountCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RawAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RollupCode1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RollupCode2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RollupCode3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RollupCode4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeCreated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeUpdated")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserCreatedKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserUpdatedKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("cs_gl_account");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGlBalance", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_gl_balances");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGpBudgetSummary", b =>
                {
                    b.Property<string>("Test2")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test2");

                    b.ToView("cs_gp_budget_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGpYtdSummary", b =>
                {
                    b.Property<string>("Test1")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("test1");

                    b.ToView("cs_gp_ytd_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGrandtotalFix", b =>
                {
                    b.Property<Guid>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<int?>("Maxrecordid")
                        .HasColumnType("int")
                        .HasColumnName("maxrecordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("cs_grandtotal_fix");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsGrandtotalFix2", b =>
                {
                    b.Property<Guid>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<int?>("Maxrecordid")
                        .HasColumnType("int")
                        .HasColumnName("maxrecordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("cs_grandtotal_fix2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsLrpgltransaction", b =>
                {
                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<int?>("Maxrecordid")
                        .HasColumnType("int")
                        .HasColumnName("maxrecordid");

                    b.ToView("cs_lrpgltransaction");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsLrpgltransactionTemp", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<int>("BdgaccountgroupSortorder")
                        .HasColumnType("int")
                        .HasColumnName("bdgaccountgroup_sortorder");

                    b.Property<Guid>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid>("Bdgdeaprtmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgdeaprtmentid");

                    b.Property<string>("Bdgdepartmentname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgdepartmentname");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("TranDate")
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)");

                    b.ToTable("cs_lrpgltransaction_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsLrpgltransactionTempStep2", b =>
                {
                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<Guid>("Bdgaccountgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid");

                    b.Property<Guid>("Bdgdeaprtmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgdeaprtmentid");

                    b.Property<string>("Bdgdepartmentname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgdepartmentname");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.ToTable("cs_lrpgltransaction_temp_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsSalaryFringeStep1", b =>
                {
                    b.Property<string>("Bagsname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bagsname");

                    b.Property<string>("Bbidname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("bbidname");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Fringeacct")
                        .HasMaxLength(58)
                        .HasColumnType("nvarchar(58)")
                        .HasColumnName("fringeacct");

                    b.Property<string>("Linenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("cs_salary_fringe_step1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsSalaryFringeStep2", b =>
                {
                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("cs_salary_fringe_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsSummaryMonthlybudgetActual", b =>
                {
                    b.Property<Guid>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgdepartmentid");

                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Currentamountp1")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp1");

                    b.Property<decimal?>("Currentamountp10")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp10");

                    b.Property<decimal?>("Currentamountp11")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp11");

                    b.Property<decimal?>("Currentamountp12")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp12");

                    b.Property<decimal?>("Currentamountp2")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp2");

                    b.Property<decimal?>("Currentamountp3")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp3");

                    b.Property<decimal?>("Currentamountp4")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp4");

                    b.Property<decimal?>("Currentamountp5")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp5");

                    b.Property<decimal?>("Currentamountp6")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp6");

                    b.Property<decimal?>("Currentamountp7")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp7");

                    b.Property<decimal?>("Currentamountp8")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp8");

                    b.Property<decimal?>("Currentamountp9")
                        .HasColumnType("money")
                        .HasColumnName("currentamountp9");

                    b.Property<decimal?>("Currentmonth")
                        .HasColumnType("money")
                        .HasColumnName("currentmonth");

                    b.Property<decimal?>("Currentmonthbudget")
                        .HasColumnType("money")
                        .HasColumnName("currentmonthbudget");

                    b.Property<decimal?>("Proposedbudgetamountp1")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp1");

                    b.Property<decimal?>("Proposedbudgetamountp10")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp10");

                    b.Property<decimal?>("Proposedbudgetamountp11")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp11");

                    b.Property<decimal?>("Proposedbudgetamountp12")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp12");

                    b.Property<decimal?>("Proposedbudgetamountp2")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp2");

                    b.Property<decimal?>("Proposedbudgetamountp3")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp3");

                    b.Property<decimal?>("Proposedbudgetamountp4")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp4");

                    b.Property<decimal?>("Proposedbudgetamountp5")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp5");

                    b.Property<decimal?>("Proposedbudgetamountp6")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp6");

                    b.Property<decimal?>("Proposedbudgetamountp7")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp7");

                    b.Property<decimal?>("Proposedbudgetamountp8")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp8");

                    b.Property<decimal?>("Proposedbudgetamountp9")
                        .HasColumnType("money")
                        .HasColumnName("proposedbudgetamountp9");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdbudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDBudgetAmount");

                    b.ToView("cs_summary_monthlybudget_actual");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsTotalBudgetamountByBudgetinfoid", b =>
                {
                    b.Property<Guid>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.ToView("cs_total_budgetamount_by_budgetinfoid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099Amount", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("css_1099_amount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099AmountDetail", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("css_1099_amount_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStep1a", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("CSS_1099_TEMP_STEP1a");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStep1aTemp", b =>
                {
                    b.Property<string>("Acnmvndr")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ACNMVNDR")
                        .IsFixedLength(true);

                    b.Property<int?>("Acpuridx")
                        .HasColumnType("int")
                        .HasColumnName("ACPURIDX");

                    b.Property<string>("Address1")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength(true);

                    b.Property<string>("Address2")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS2")
                        .IsFixedLength(true);

                    b.Property<string>("Address3")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS3")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Brthdate")
                        .HasColumnType("datetime")
                        .HasColumnName("BRTHDATE");

                    b.Property<byte?>("Cbvat")
                        .HasColumnType("tinyint")
                        .HasColumnName("CBVAT");

                    b.Property<string>("Ccode")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CCode")
                        .IsFixedLength(true);

                    b.Property<string>("Checkno")
                        .IsRequired()
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("checkno");

                    b.Property<string>("Chekbkid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CHEKBKID")
                        .IsFixedLength(true);

                    b.Property<string>("City")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("char(35)")
                        .HasColumnName("CITY")
                        .IsFixedLength(true);

                    b.Property<string>("Comment1")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("COMMENT1")
                        .IsFixedLength(true);

                    b.Property<string>("Comment2")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("COMMENT2")
                        .IsFixedLength(true);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("COUNTRY")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Creatddt")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATDDT");

                    b.Property<short?>("Credtlmt")
                        .HasColumnType("smallint")
                        .HasColumnName("CREDTLMT");

                    b.Property<decimal?>("Crlmtdlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("CRLMTDLR");

                    b.Property<DateTime?>("Crtcomdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTCOMDT");

                    b.Property<DateTime?>("Crtexpdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTEXPDT");

                    b.Property<string>("Curncyid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CURNCYID")
                        .IsFixedLength(true);

                    b.Property<string>("Declid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("DECLID")
                        .IsFixedLength(true);

                    b.Property<int?>("DexRowId")
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID");

                    b.Property<DateTime?>("DexRowTs")
                        .HasColumnType("datetime")
                        .HasColumnName("DEX_ROW_TS");

                    b.Property<short?>("Disgrper")
                        .HasColumnType("smallint")
                        .HasColumnName("DISGRPER");

                    b.Property<string>("Docfmtid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("DOCFMTID")
                        .IsFixedLength(true);

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("Duegrper")
                        .HasColumnType("smallint")
                        .HasColumnName("DUEGRPER");

                    b.Property<string>("Dxvarnum")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("char(25)")
                        .HasColumnName("DXVARNUM")
                        .IsFixedLength(true);

                    b.Property<string>("Faxnumbr")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("FAXNUMBR")
                        .IsFixedLength(true);

                    b.Property<short?>("Freeonboard")
                        .HasColumnType("smallint")
                        .HasColumnName("FREEONBOARD");

                    b.Property<string>("Govcrpid")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("GOVCRPID")
                        .IsFixedLength(true);

                    b.Property<string>("Govindid")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("GOVINDID")
                        .IsFixedLength(true);

                    b.Property<byte?>("Hold")
                        .HasColumnType("tinyint")
                        .HasColumnName("HOLD");

                    b.Property<byte?>("Kgldsths")
                        .HasColumnType("tinyint")
                        .HasColumnName("KGLDSTHS");

                    b.Property<byte?>("Kpcalhst")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPCALHST");

                    b.Property<byte?>("Kperhist")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPERHIST");

                    b.Property<byte?>("Kptrxhst")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPTRXHST");

                    b.Property<short?>("LaborPmtType")
                        .HasColumnType("smallint");

                    b.Property<string>("Lrpcompanyname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lrpcompanyname");

                    b.Property<Guid?>("Lrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoID");

                    b.Property<Guid?>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<Guid>("LrpvendorVoucherid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendor_voucherid");

                    b.Property<Guid>("Lrpvendorid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendorid");

                    b.Property<decimal?>("Maxindlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MAXINDLR");

                    b.Property<decimal?>("Minorder")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MINORDER");

                    b.Property<decimal?>("Minpydlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MINPYDLR");

                    b.Property<short?>("Minpypct")
                        .HasColumnType("smallint")
                        .HasColumnName("MINPYPCT");

                    b.Property<short?>("Minpytyp")
                        .HasColumnType("smallint")
                        .HasColumnName("MINPYTYP");

                    b.Property<DateTime?>("Modifdt")
                        .HasColumnType("datetime")
                        .HasColumnName("MODIFDT");

                    b.Property<short?>("Mxiafvnd")
                        .HasColumnType("smallint")
                        .HasColumnName("MXIAFVND");

                    b.Property<decimal?>("Mxwofamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MXWOFAMT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Noteindx")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("NOTEINDX");

                    b.Property<string>("Parvenid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("PARVENID")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Paymentdate")
                        .HasColumnType("datetime")
                        .HasColumnName("paymentdate");

                    b.Property<string>("Phnumbr1")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHNUMBR1")
                        .IsFixedLength(true);

                    b.Property<string>("Phnumbr2")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHNUMBR2")
                        .IsFixedLength(true);

                    b.Property<string>("Phone3")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHONE3")
                        .IsFixedLength(true);

                    b.Property<int?>("Pmapindx")
                        .HasColumnType("int")
                        .HasColumnName("PMAPINDX");

                    b.Property<int?>("Pmcshidx")
                        .HasColumnType("int")
                        .HasColumnName("PMCSHIDX");

                    b.Property<int?>("Pmdavidx")
                        .HasColumnType("int")
                        .HasColumnName("PMDAVIDX");

                    b.Property<int?>("Pmdtkidx")
                        .HasColumnType("int")
                        .HasColumnName("PMDTKIDX");

                    b.Property<int?>("Pmfinidx")
                        .HasColumnType("int")
                        .HasColumnName("PMFINIDX");

                    b.Property<int?>("Pmfrtidx")
                        .HasColumnType("int")
                        .HasColumnName("PMFRTIDX");

                    b.Property<int?>("Pmmschix")
                        .HasColumnType("int")
                        .HasColumnName("PMMSCHIX");

                    b.Property<int?>("Pmprchix")
                        .HasColumnType("int")
                        .HasColumnName("PMPRCHIX");

                    b.Property<int?>("Pmrtngix")
                        .HasColumnType("int")
                        .HasColumnName("PMRTNGIX");

                    b.Property<int?>("Pmtaxidx")
                        .HasColumnType("int")
                        .HasColumnName("PMTAXIDX");

                    b.Property<int?>("Pmtdscix")
                        .HasColumnType("int")
                        .HasColumnName("PMTDSCIX");

                    b.Property<int?>("Pmwrtidx")
                        .HasColumnType("int")
                        .HasColumnName("PMWRTIDX");

                    b.Property<short?>("PostResultsTo")
                        .HasColumnType("smallint")
                        .HasColumnName("Post_Results_To");

                    b.Property<short?>("Ppstaxrt")
                        .HasColumnType("smallint")
                        .HasColumnName("PPSTAXRT");

                    b.Property<byte?>("Prspayee")
                        .HasColumnType("tinyint")
                        .HasColumnName("PRSPAYEE");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PSTGDate");

                    b.Property<short?>("Ptcshacf")
                        .HasColumnType("smallint")
                        .HasColumnName("PTCSHACF");

                    b.Property<int?>("Purpvidx")
                        .HasColumnType("int")
                        .HasColumnName("PURPVIDX");

                    b.Property<string>("Pymntpri")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("PYMNTPRI")
                        .IsFixedLength(true);

                    b.Property<string>("Pymtrmid")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PYMTRMID")
                        .IsFixedLength(true);

                    b.Property<string>("Ratetpid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("RATETPID")
                        .IsFixedLength(true);

                    b.Property<byte?>("RevalueVendor")
                        .HasColumnType("tinyint")
                        .HasColumnName("Revalue_Vendor");

                    b.Property<byte?>("Rtobutkn")
                        .HasColumnType("tinyint")
                        .HasColumnName("RTOBUTKN");

                    b.Property<byte?>("Sbppsded")
                        .HasColumnType("tinyint")
                        .HasColumnName("SBPPSDED");

                    b.Property<string>("Shipmthd")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("SHIPMTHD")
                        .IsFixedLength(true);

                    b.Property<string>("State")
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("char(29)")
                        .HasColumnName("STATE")
                        .IsFixedLength(true);

                    b.Property<short?>("TaxFileNumMode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("TaxInvRecvd")
                        .HasColumnType("tinyint");

                    b.Property<string>("Taxschid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("TAXSCHID")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<decimal?>("Ten99amnt1")
                        .HasColumnType("numeric(38,5)")
                        .HasColumnName("TEN99AMNT1");

                    b.Property<string>("Ten99boxno")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("ten99boxno");

                    b.Property<short?>("Ten99boxnumber")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99BOXNUMBER");

                    b.Property<string>("Ten99taxtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten99taxtype");

                    b.Property<short?>("Ten99type")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99TYPE");

                    b.Property<short?>("Trddisct")
                        .HasColumnType("smallint")
                        .HasColumnName("TRDDISCT");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Txidnmbr")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("TXIDNMBR")
                        .IsFixedLength(true);

                    b.Property<string>("Txrgnnum")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("char(25)")
                        .HasColumnName("TXRGNNUM")
                        .IsFixedLength(true);

                    b.Property<string>("Upszone")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("UPSZONE")
                        .IsFixedLength(true);

                    b.Property<string>("Userdef1")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("USERDEF1")
                        .IsFixedLength(true);

                    b.Property<string>("Userdef2")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("USERDEF2")
                        .IsFixedLength(true);

                    b.Property<short?>("Userlang")
                        .HasColumnType("smallint")
                        .HasColumnName("USERLANG");

                    b.Property<string>("Vadcdpad")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDPAD")
                        .IsFixedLength(true);

                    b.Property<string>("Vadcdsfr")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDSFR")
                        .IsFixedLength(true);

                    b.Property<string>("Vadcdtro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDTRO")
                        .IsFixedLength(true);

                    b.Property<string>("Vaddcdpr")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADDCDPR")
                        .IsFixedLength(true);

                    b.Property<int?>("ValueGp")
                        .HasColumnType("int")
                        .HasColumnName("Value_gp");

                    b.Property<string>("Vendname")
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VENDNAME")
                        .IsFixedLength(true);

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vendorid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDORID")
                        .IsFixedLength(true);

                    b.Property<string>("Vendorid1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDORID1")
                        .IsFixedLength(true);

                    b.Property<string>("Vendshnm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDSHNM")
                        .IsFixedLength(true);

                    b.Property<short?>("Vendstts")
                        .HasColumnType("smallint")
                        .HasColumnName("VENDSTTS");

                    b.Property<string>("Vndchknm")
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VNDCHKNM")
                        .IsFixedLength(true);

                    b.Property<string>("Vndclsid")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("VNDCLSID")
                        .IsFixedLength(true);

                    b.Property<string>("Vndcntct")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("VNDCNTCT")
                        .IsFixedLength(true);

                    b.Property<string>("Voucherno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("voucherno");

                    b.Property<short?>("WithholdingEntityType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WithholdingFormType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WithholdingType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WorkflowApprovalStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("Workflow_Approval_Status");

                    b.Property<short?>("WorkflowPriority")
                        .HasColumnType("smallint")
                        .HasColumnName("Workflow_Priority");

                    b.Property<short?>("Writeoff")
                        .HasColumnType("smallint")
                        .HasColumnName("WRITEOFF");

                    b.Property<byte?>("Xpdtoblg")
                        .HasColumnType("tinyint")
                        .HasColumnName("XPDTOBLG");

                    b.Property<short?>("Year1")
                        .HasColumnType("smallint")
                        .HasColumnName("YEAR1");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("ZIPCODE")
                        .IsFixedLength(true);

                    b.ToTable("CSS_1099_TEMP_STEP1a_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStep1b", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("CSS_1099_TEMP_STEP1b");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStepa", b =>
                {
                    b.Property<string>("Checkno")
                        .IsRequired()
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("checkno");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lrpcompanyname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lrpcompanyname");

                    b.Property<Guid?>("Lrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoID");

                    b.Property<Guid?>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<Guid>("LrpvendorVoucherid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendor_voucherid");

                    b.Property<Guid>("Lrpvendorid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendorid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Paymentdate")
                        .HasColumnType("datetime")
                        .HasColumnName("paymentdate");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PSTGDate");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Voucherno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("voucherno");

                    b.ToTable("css_1099_temp_stepa");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStepb", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("CSS_1099_TEMP_STEPB");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099TempStepbTemp", b =>
                {
                    b.Property<string>("Acnmvndr")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ACNMVNDR")
                        .IsFixedLength(true);

                    b.Property<int?>("Acpuridx")
                        .HasColumnType("int")
                        .HasColumnName("ACPURIDX");

                    b.Property<string>("Address1")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength(true);

                    b.Property<string>("Address2")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS2")
                        .IsFixedLength(true);

                    b.Property<string>("Address3")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS3")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Brthdate")
                        .HasColumnType("datetime")
                        .HasColumnName("BRTHDATE");

                    b.Property<byte?>("Cbvat")
                        .HasColumnType("tinyint")
                        .HasColumnName("CBVAT");

                    b.Property<string>("Ccode")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CCode")
                        .IsFixedLength(true);

                    b.Property<string>("Checkno")
                        .IsRequired()
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("checkno");

                    b.Property<string>("Chekbkid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CHEKBKID")
                        .IsFixedLength(true);

                    b.Property<string>("City")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("char(35)")
                        .HasColumnName("CITY")
                        .IsFixedLength(true);

                    b.Property<string>("Comment1")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("COMMENT1")
                        .IsFixedLength(true);

                    b.Property<string>("Comment2")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("COMMENT2")
                        .IsFixedLength(true);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company1");

                    b.Property<string>("Country")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("COUNTRY")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Creatddt")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATDDT");

                    b.Property<short?>("Credtlmt")
                        .HasColumnType("smallint")
                        .HasColumnName("CREDTLMT");

                    b.Property<decimal?>("Crlmtdlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("CRLMTDLR");

                    b.Property<DateTime?>("Crtcomdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTCOMDT");

                    b.Property<DateTime?>("Crtexpdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTEXPDT");

                    b.Property<string>("Curncyid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CURNCYID")
                        .IsFixedLength(true);

                    b.Property<string>("Declid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("DECLID")
                        .IsFixedLength(true);

                    b.Property<int?>("DexRowId")
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID");

                    b.Property<DateTime?>("DexRowTs")
                        .HasColumnType("datetime")
                        .HasColumnName("DEX_ROW_TS");

                    b.Property<short?>("Disgrper")
                        .HasColumnType("smallint")
                        .HasColumnName("DISGRPER");

                    b.Property<string>("Docfmtid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("DOCFMTID")
                        .IsFixedLength(true);

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("Duegrper")
                        .HasColumnType("smallint")
                        .HasColumnName("DUEGRPER");

                    b.Property<string>("Dxvarnum")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("char(25)")
                        .HasColumnName("DXVARNUM")
                        .IsFixedLength(true);

                    b.Property<string>("Faxnumbr")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("FAXNUMBR")
                        .IsFixedLength(true);

                    b.Property<short?>("Freeonboard")
                        .HasColumnType("smallint")
                        .HasColumnName("FREEONBOARD");

                    b.Property<string>("Govcrpid")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("GOVCRPID")
                        .IsFixedLength(true);

                    b.Property<string>("Govindid")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("GOVINDID")
                        .IsFixedLength(true);

                    b.Property<byte?>("Hold")
                        .HasColumnType("tinyint")
                        .HasColumnName("HOLD");

                    b.Property<byte?>("Kgldsths")
                        .HasColumnType("tinyint")
                        .HasColumnName("KGLDSTHS");

                    b.Property<byte?>("Kpcalhst")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPCALHST");

                    b.Property<byte?>("Kperhist")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPERHIST");

                    b.Property<byte?>("Kptrxhst")
                        .HasColumnType("tinyint")
                        .HasColumnName("KPTRXHST");

                    b.Property<short?>("LaborPmtType")
                        .HasColumnType("smallint");

                    b.Property<string>("Lrpcompanyname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lrpcompanyname");

                    b.Property<Guid?>("Lrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoID");

                    b.Property<Guid?>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<Guid>("LrpvendorVoucherid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendor_voucherid");

                    b.Property<Guid>("Lrpvendorid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpvendorid");

                    b.Property<decimal?>("Maxindlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MAXINDLR");

                    b.Property<decimal?>("Minorder")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MINORDER");

                    b.Property<decimal?>("Minpydlr")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MINPYDLR");

                    b.Property<short?>("Minpypct")
                        .HasColumnType("smallint")
                        .HasColumnName("MINPYPCT");

                    b.Property<short?>("Minpytyp")
                        .HasColumnType("smallint")
                        .HasColumnName("MINPYTYP");

                    b.Property<DateTime?>("Modifdt")
                        .HasColumnType("datetime")
                        .HasColumnName("MODIFDT");

                    b.Property<short?>("Mxiafvnd")
                        .HasColumnType("smallint")
                        .HasColumnName("MXIAFVND");

                    b.Property<decimal?>("Mxwofamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("MXWOFAMT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Noteindx")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("NOTEINDX");

                    b.Property<string>("Parvenid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("PARVENID")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("Paymentdate")
                        .HasColumnType("datetime")
                        .HasColumnName("paymentdate");

                    b.Property<string>("Phnumbr1")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHNUMBR1")
                        .IsFixedLength(true);

                    b.Property<string>("Phnumbr2")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHNUMBR2")
                        .IsFixedLength(true);

                    b.Property<string>("Phone3")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PHONE3")
                        .IsFixedLength(true);

                    b.Property<int?>("Pmapindx")
                        .HasColumnType("int")
                        .HasColumnName("PMAPINDX");

                    b.Property<int?>("Pmcshidx")
                        .HasColumnType("int")
                        .HasColumnName("PMCSHIDX");

                    b.Property<int?>("Pmdavidx")
                        .HasColumnType("int")
                        .HasColumnName("PMDAVIDX");

                    b.Property<int?>("Pmdtkidx")
                        .HasColumnType("int")
                        .HasColumnName("PMDTKIDX");

                    b.Property<int?>("Pmfinidx")
                        .HasColumnType("int")
                        .HasColumnName("PMFINIDX");

                    b.Property<int?>("Pmfrtidx")
                        .HasColumnType("int")
                        .HasColumnName("PMFRTIDX");

                    b.Property<int?>("Pmmschix")
                        .HasColumnType("int")
                        .HasColumnName("PMMSCHIX");

                    b.Property<int?>("Pmprchix")
                        .HasColumnType("int")
                        .HasColumnName("PMPRCHIX");

                    b.Property<int?>("Pmrtngix")
                        .HasColumnType("int")
                        .HasColumnName("PMRTNGIX");

                    b.Property<int?>("Pmtaxidx")
                        .HasColumnType("int")
                        .HasColumnName("PMTAXIDX");

                    b.Property<int?>("Pmtdscix")
                        .HasColumnType("int")
                        .HasColumnName("PMTDSCIX");

                    b.Property<int?>("Pmwrtidx")
                        .HasColumnType("int")
                        .HasColumnName("PMWRTIDX");

                    b.Property<short?>("PostResultsTo")
                        .HasColumnType("smallint")
                        .HasColumnName("Post_Results_To");

                    b.Property<short?>("Ppstaxrt")
                        .HasColumnType("smallint")
                        .HasColumnName("PPSTAXRT");

                    b.Property<byte?>("Prspayee")
                        .HasColumnType("tinyint")
                        .HasColumnName("PRSPAYEE");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PSTGDate");

                    b.Property<short?>("Ptcshacf")
                        .HasColumnType("smallint")
                        .HasColumnName("PTCSHACF");

                    b.Property<int?>("Purpvidx")
                        .HasColumnType("int")
                        .HasColumnName("PURPVIDX");

                    b.Property<string>("Pymntpri")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("PYMNTPRI")
                        .IsFixedLength(true);

                    b.Property<string>("Pymtrmid")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("PYMTRMID")
                        .IsFixedLength(true);

                    b.Property<string>("Ratetpid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("RATETPID")
                        .IsFixedLength(true);

                    b.Property<byte?>("RevalueVendor")
                        .HasColumnType("tinyint")
                        .HasColumnName("Revalue_Vendor");

                    b.Property<byte?>("Rtobutkn")
                        .HasColumnType("tinyint")
                        .HasColumnName("RTOBUTKN");

                    b.Property<byte?>("Sbppsded")
                        .HasColumnType("tinyint")
                        .HasColumnName("SBPPSDED");

                    b.Property<string>("Shipmthd")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("SHIPMTHD")
                        .IsFixedLength(true);

                    b.Property<string>("State")
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("char(29)")
                        .HasColumnName("STATE")
                        .IsFixedLength(true);

                    b.Property<short?>("TaxFileNumMode")
                        .HasColumnType("smallint");

                    b.Property<byte?>("TaxInvRecvd")
                        .HasColumnType("tinyint");

                    b.Property<string>("Taxschid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("TAXSCHID")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<decimal?>("Ten99amnt1")
                        .HasColumnType("numeric(38,5)")
                        .HasColumnName("TEN99AMNT1");

                    b.Property<decimal?>("Ten99amnttotal")
                        .HasColumnType("numeric(38,5)")
                        .HasColumnName("ten99amnttotal");

                    b.Property<string>("Ten99boxno")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("ten99boxno");

                    b.Property<short?>("Ten99boxnumber")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99BOXNUMBER");

                    b.Property<string>("Ten99taxtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ten99taxtype");

                    b.Property<short?>("Ten99type")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99TYPE");

                    b.Property<short?>("Trddisct")
                        .HasColumnType("smallint")
                        .HasColumnName("TRDDISCT");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Txidnmbr")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("TXIDNMBR")
                        .IsFixedLength(true);

                    b.Property<string>("Txrgnnum")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("char(25)")
                        .HasColumnName("TXRGNNUM")
                        .IsFixedLength(true);

                    b.Property<string>("Upszone")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("UPSZONE")
                        .IsFixedLength(true);

                    b.Property<string>("Userdef1")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("USERDEF1")
                        .IsFixedLength(true);

                    b.Property<string>("Userdef2")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("USERDEF2")
                        .IsFixedLength(true);

                    b.Property<short?>("Userlang")
                        .HasColumnType("smallint")
                        .HasColumnName("USERLANG");

                    b.Property<string>("Vadcdpad")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDPAD")
                        .IsFixedLength(true);

                    b.Property<string>("Vadcdsfr")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDSFR")
                        .IsFixedLength(true);

                    b.Property<string>("Vadcdtro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADCDTRO")
                        .IsFixedLength(true);

                    b.Property<string>("Vaddcdpr")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VADDCDPR")
                        .IsFixedLength(true);

                    b.Property<int?>("ValueGp")
                        .HasColumnType("int")
                        .HasColumnName("Value_gp");

                    b.Property<string>("Vendname")
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VENDNAME")
                        .IsFixedLength(true);

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vendorid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDORID")
                        .IsFixedLength(true);

                    b.Property<string>("Vendorid1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDORID1")
                        .IsFixedLength(true);

                    b.Property<string>("Vendornoa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("vendornoa");

                    b.Property<string>("Vendshnm")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDSHNM")
                        .IsFixedLength(true);

                    b.Property<short?>("Vendstts")
                        .HasColumnType("smallint")
                        .HasColumnName("VENDSTTS");

                    b.Property<string>("Vndchknm")
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VNDCHKNM")
                        .IsFixedLength(true);

                    b.Property<string>("Vndclsid")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("VNDCLSID")
                        .IsFixedLength(true);

                    b.Property<string>("Vndcntct")
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("VNDCNTCT")
                        .IsFixedLength(true);

                    b.Property<string>("Voucherno")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("voucherno");

                    b.Property<short?>("WithholdingEntityType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WithholdingFormType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WithholdingType")
                        .HasColumnType("smallint");

                    b.Property<short?>("WorkflowApprovalStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("Workflow_Approval_Status");

                    b.Property<short?>("WorkflowPriority")
                        .HasColumnType("smallint")
                        .HasColumnName("Workflow_Priority");

                    b.Property<short?>("Writeoff")
                        .HasColumnType("smallint")
                        .HasColumnName("WRITEOFF");

                    b.Property<byte?>("Xpdtoblg")
                        .HasColumnType("tinyint")
                        .HasColumnName("XPDTOBLG");

                    b.Property<short?>("Year1")
                        .HasColumnType("smallint")
                        .HasColumnName("YEAR1");

                    b.Property<short?>("Year1a")
                        .HasColumnType("smallint")
                        .HasColumnName("year1a");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("ZIPCODE")
                        .IsFixedLength(true);

                    b.ToTable("CSS_1099_TEMP_STEPB_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099VendorExport", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_1099_vendor_export");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Css1099VendorExportTemp", b =>
                {
                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS1")
                        .IsFixedLength(true);

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS2")
                        .IsFixedLength(true);

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(61)
                        .IsUnicode(false)
                        .HasColumnType("char(61)")
                        .HasColumnName("ADDRESS3")
                        .IsFixedLength(true);

                    b.Property<decimal>("Box001")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX001");

                    b.Property<decimal>("Box002")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX002");

                    b.Property<decimal>("Box003")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX003");

                    b.Property<decimal>("Box004")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX004");

                    b.Property<decimal>("Box005")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX005");

                    b.Property<decimal>("Box006")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX006");

                    b.Property<decimal>("Box007")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX007");

                    b.Property<decimal>("Box008")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX008");

                    b.Property<decimal>("Box010")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX010");

                    b.Property<decimal>("Box013")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX013");

                    b.Property<decimal>("Box014")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX014");

                    b.Property<decimal>("Box016")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX016");

                    b.Property<decimal>("Box15a")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX15A");

                    b.Property<decimal>("Box15b")
                        .HasColumnType("numeric(22,2)")
                        .HasColumnName("BOX15b");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("char(35)")
                        .HasColumnName("CITY")
                        .IsFixedLength(true);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(29)
                        .IsUnicode(false)
                        .HasColumnType("char(29)")
                        .HasColumnName("STATE")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Totalamount")
                        .HasColumnType("numeric(38,5)")
                        .HasColumnName("TOTALAMOUNT");

                    b.Property<string>("Txidnmbr")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("TXIDNMBR")
                        .IsFixedLength(true);

                    b.Property<string>("Vendname")
                        .IsRequired()
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VENDNAME")
                        .IsFixedLength(true);

                    b.Property<string>("Vendorid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("VENDORID")
                        .IsFixedLength(true);

                    b.Property<short>("Year1")
                        .HasColumnType("smallint")
                        .HasColumnName("YEAR1");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("ZIPCODE")
                        .IsFixedLength(true);

                    b.ToTable("css_1099_vendor_export_TEMP");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssAddglyearcodeTemp", b =>
                {
                    b.Property<Guid>("Codeid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codeid");

                    b.Property<string>("Createdby")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CREATEDBY");

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDON");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)");

                    b.Property<string>("ImportedObjectUid")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("IsInactive")
                        .HasColumnType("int");

                    b.Property<int>("IsLocked")
                        .HasColumnType("int");

                    b.Property<int>("ItemizedAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("name");

                    b.Property<string>("Namealias")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("namealias");

                    b.Property<int>("NonItemizedAmount")
                        .HasColumnType("int");

                    b.Property<int>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("test");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("css_addglyearcode_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssAftMain", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_aft_main");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssAp1099Temp", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("char(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<decimal?>("Ten99amnttotal")
                        .HasColumnType("numeric(38,5)")
                        .HasColumnName("TEN99AMNTTOTAL");

                    b.Property<short?>("Ten99boxnumber")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99BOXNUMBER");

                    b.Property<short?>("Ten99boxnumber1")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99BOXNUMBER1");

                    b.Property<short?>("Ten99type")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99TYPE");

                    b.Property<short?>("Ten99type1")
                        .HasColumnType("smallint")
                        .HasColumnName("TEN99TYPE1");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Txidnmbr")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("TXIDNMBR")
                        .IsFixedLength(true);

                    b.Property<string>("Vendname")
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("VENDNAME")
                        .IsFixedLength(true);

                    b.Property<bool?>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("Year1")
                        .HasColumnType("smallint")
                        .HasColumnName("year1");

                    b.Property<string>("_1099Box")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("1099 BOX");

                    b.Property<string>("_1099Flag")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("1099_flag")
                        .IsFixedLength(true);

                    b.Property<string>("_1099Type")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("1099 TYPE");

                    b.ToTable("CSS_AP_1099_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssApAgingTemp", b =>
                {
                    b.Property<string>("AccountDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("AppliedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("applied_date");

                    b.Property<string>("AppliedToDocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Appliedamount")
                        .HasColumnType("money")
                        .HasColumnName("appliedamount");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("money");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentBalance")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentTypeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DocumenttypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("documenttype_name");

                    b.Property<decimal>("Groupno")
                        .HasColumnType("numeric(2,1)")
                        .HasColumnName("groupno");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("date")
                        .HasColumnName("PSTGDate");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("vendor_name");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VendorVoucherApplicabilityDocumentDate")
                        .HasColumnType("date")
                        .HasColumnName("Vendor_Voucher_Applicability_DocumentDate");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("css_ap_aging_TEMP");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgaccountGroupSubGroup", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("AccountObejctuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_obejctuid");

                    b.Property<string>("Accountmappingno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("accountmappingno");

                    b.Property<string>("Acctgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroup");

                    b.Property<Guid?>("Acctgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ACCTGROUPID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("department");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("MappingObjectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mapping_objectuid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroupID");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("status");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_group");

                    b.Property<string>("SubSubName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_sub_name");

                    b.Property<string>("SubSubSubName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_sub_sub_name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("css_BDGAccountGroup_SubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgaccountGroupSubGroupSubGroupTemp", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("css_BDGAccountGroup_SubGroup_SubGroup_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgaccountGroupSubGroupSugroupView", b =>
                {
                    b.Property<Guid>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<int?>("MaxRecordid")
                        .HasColumnType("int")
                        .HasColumnName("max_recordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("css_BDGAccountGroup_SubGroup_sugroup_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgaccountGroupSubGroupTemp", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<int?>("MaxRecordid")
                        .HasColumnType("int")
                        .HasColumnName("max_recordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("status");

                    b.ToTable("css_BDGAccountGroup_SubGroup_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgaccountGroupSubGroupView", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<int?>("MaxRecordid")
                        .HasColumnType("int")
                        .HasColumnName("max_recordid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("css_BDGAccountGroup_SubGroup_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoDetailMinRecordidDuplicate", b =>
                {
                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("COUNT1");

                    b.Property<string>("Deptname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptname");

                    b.Property<string>("Employeename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeename");

                    b.Property<int?>("MinRecordid")
                        .HasColumnType("int")
                        .HasColumnName("min_recordid");

                    b.ToView("css_BDGBudgetInfo_Detail_min_recordid_duplicate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoDetailSummaryView", b =>
                {
                    b.Property<Guid>("Bdgbudgetinfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfoid");

                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Currentyearbudget")
                        .HasColumnType("money")
                        .HasColumnName("currentyearbudget");

                    b.Property<decimal?>("Nextyearbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("nextyearbudgetamount");

                    b.ToView("css_BDGBudgetInfo_Detail_summary_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoDetailView", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToView("css_BDGBudgetInfo_Detail_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoGrandtotal", b =>
                {
                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Estimatedbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("estimatedbudgetamount");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("css_BDGBudgetInfo_grandtotals");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoSubtotal", b =>
                {
                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Estimatedbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("estimatedbudgetamount");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("ProposedBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("YtdactualAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDActualAmount");

                    b.Property<decimal?>("YtdprojectedAmount")
                        .HasColumnType("money")
                        .HasColumnName("YTDProjectedAmount");

                    b.ToView("css_BDGBudgetInfo_subtotals");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoSummary", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_BDGBudgetInfo_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoSummary2", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<string>("Statusvalue")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("statusvalue");

                    b.ToView("css_BDGBudgetInfo_summary2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoSummary2Var", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<string>("Statusvalue")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("statusvalue");

                    b.ToView("css_BDGBudgetInfo_summary2Var");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetInfoSummaryvar", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_BDGBudgetInfo_summaryvar");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetinfoDetail", b =>
                {
                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToView("css_bdgbudgetinfo_detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetinfoDetailTempMissingItem", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid>("BdgaccountgroupidHeader")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgaccountgroupid_header");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FrineobjectuiD")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("frineobjectuiD");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Tobedetermind")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("tobedetermind");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToTable("css_bdgbudgetinfo_detail_temp_missing_items");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetinfodetailTotal", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoid");

                    b.Property<decimal?>("Budgetamount")
                        .HasColumnType("money")
                        .HasColumnName("budgetamount");

                    b.Property<decimal?>("Currentyearbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("currentyearbudgetamount");

                    b.Property<decimal?>("Nextyearbudgetamount")
                        .HasColumnType("money")
                        .HasColumnName("nextyearbudgetamount");

                    b.ToView("css_bdgbudgetinfodetail_totals");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgbudgetinfodetailamountsPm", b =>
                {
                    b.Property<string>("AccountGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("budgetAmount");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.ToTable("css_bdgbudgetinfodetailamountsPM");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgemployeeAmount", b =>
                {
                    b.Property<string>("Bdgemployeeunitname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgemployeeunitname");

                    b.Property<decimal?>("CurrentYearSalary")
                        .HasColumnType("money");

                    b.Property<string>("Positionname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("positionname");

                    b.Property<decimal?>("PreviousYearSalary")
                        .HasColumnType("money");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Stepname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("stepname");

                    b.ToView("css_bdgemployee_amounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgemployeeDuplicate", b =>
                {
                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("COUNT1");

                    b.Property<string>("Deptname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deptname");

                    b.Property<string>("Employeename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeename");

                    b.ToView("CSS_BDGEMPLOYEE_DUPLICATE");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgemployeeMissing", b =>
                {
                    b.Property<Guid?>("BdgbudgetinfoDetailid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfo_detailid");

                    b.Property<Guid>("Bdgemployeeid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Yearsetupid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("yearsetupid");

                    b.ToView("css_bdgemployee_missing");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgreportGroupBdgglaccountMapping", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("DoNotShowInReport")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MaskedAccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("css_BDGReportGroup_BDGGLAccountMapping");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgreportGroupBdgglaccountMappingSummary", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("MONTH");

                    b.Property<int?>("Period")
                        .HasColumnType("int")
                        .HasColumnName("period");

                    b.ToTable("CSS_BDGReportGroup_BDGGLAccountMapping_SUMMARY");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBdgreportGroupBdgglaccountMappingSummaryView", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("MONTH");

                    b.Property<int?>("Period")
                        .HasColumnType("int")
                        .HasColumnName("period");

                    b.ToView("CSS_BDGReportGroup_BDGGLAccountMapping_SUMMARY_VIEW");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBudgetMoveFor2013", b =>
                {
                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("money");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("Bdgaccountgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountgroup");

                    b.Property<string>("BdgbudgetInfoDetail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("BDGBudgetInfo_detail");

                    b.Property<Guid>("BdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfo_detailID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("Bdgemployee")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGemployee");

                    b.Property<Guid>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<string>("BdgemployeeUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGEmployeeUnit");

                    b.Property<Guid>("BdgemployeeunitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGemployeeunitID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EffectiveMonths")
                        .HasColumnType("int");

                    b.Property<Guid?>("EffectiveSalaryMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EffectiveSalary_MonthID");

                    b.Property<decimal?>("NextYearProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("ProposedBudgetFactor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Yearsetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearsetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearsetupID");

                    b.ToView("CSS_BudgetMoveFor2013");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBudgetSalaries2012Temp", b =>
                {
                    b.Property<string>("AftEmpNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AFT Emp No");

                    b.Property<decimal?>("AnnualSalary")
                        .HasColumnType("numeric(38,3)")
                        .HasColumnName("Annual Salary");

                    b.Property<string>("Dept")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Deptid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("deptid");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Employee Name");

                    b.Property<string>("F3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GradePosition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Grade / Position");

                    b.Property<string>("Gradepositionid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Hire Date");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Statusid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("statusid");

                    b.Property<string>("Test")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("test");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Unitid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("unitid");

                    b.ToTable("css_budget_salaries_2012_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBudgetTemp", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name1");

                    b.Property<string>("Name2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name2");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.Property<int?>("Sortorder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("css_budget_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBudgetinfoMove", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("css_budgetinfo_moves");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssBudgetsetupTemp", b =>
                {
                    b.Property<string>("Bdgaccountgroupname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroupname");

                    b.Property<Guid>("BdgbudgetinfoDetailid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgbudgetinfo_detailid");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Yearsetupname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("yearsetupname");

                    b.ToView("css_budgetsetup_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssChecknoApplied", b =>
                {
                    b.Property<string>("Appliedtodocumentno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("appliedtodocumentno");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Documentdate")
                        .HasColumnType("datetime")
                        .HasColumnName("documentdate");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_checkno_applied");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssContributionPlusDeatil", b =>
                {
                    b.Property<DateTime?>("ACheckDate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_CheckDate");

                    b.Property<string>("ACheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("A_CheckNo");

                    b.Property<string>("ACreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("A_CreatedBy");

                    b.Property<DateTime>("ACreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("A_CreatedOn");

                    b.Property<DateTime?>("ADateReceived")
                        .HasColumnType("datetime")
                        .HasColumnName("A_DateReceived");

                    b.Property<decimal?>("ADepositAmount")
                        .HasColumnType("money")
                        .HasColumnName("A_DepositAmount");

                    b.Property<DateTime?>("ADepositDate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_DepositDate");

                    b.Property<string>("ADescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("A_Description");

                    b.Property<string>("ADisplay")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("A_Display");

                    b.Property<DateTime?>("AEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_EndDate");

                    b.Property<Guid?>("AFeccashAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECCashAccountID");

                    b.Property<Guid>("AFeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECCompanyID");

                    b.Property<Guid?>("AFeccontributionSourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECContributionSourceID");

                    b.Property<Guid?>("AFeccontributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECContributionStatusID");

                    b.Property<Guid?>("AFeccontributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECContributionTypeID");

                    b.Property<Guid?>("AFeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_FECLocalUnionID");

                    b.Property<string>("AGpreferenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("A_GPReferenceNo");

                    b.Property<string>("AImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("A_ImportedObjectUID");

                    b.Property<Guid?>("AInstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_InstallationUID");

                    b.Property<bool>("AIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("A_IsDeleted");

                    b.Property<bool>("AIsInactive")
                        .HasColumnType("bit")
                        .HasColumnName("A_IsInactive");

                    b.Property<bool>("AIsLocked")
                        .HasColumnType("bit")
                        .HasColumnName("A_IsLocked");

                    b.Property<decimal?>("AMemberTotal")
                        .HasColumnType("money")
                        .HasColumnName("A_MemberTotal");

                    b.Property<string>("AName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("A_Name");

                    b.Property<string>("ANameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("A_NameAlias");

                    b.Property<Guid>("AObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("A_ObjectUID");

                    b.Property<int?>("AOldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("A_OldRecordID");

                    b.Property<int>("ARecordId")
                        .HasColumnType("int")
                        .HasColumnName("A_RecordID");

                    b.Property<int>("ASortOrder")
                        .HasColumnType("int")
                        .HasColumnName("A_SortOrder");

                    b.Property<DateTime?>("AStartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_StartDate");

                    b.Property<string>("AUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("A_UpdatedBy");

                    b.Property<DateTime?>("AUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("A_UpdatedOn");

                    b.Property<byte[]>("AUploadDetail")
                        .HasColumnType("image")
                        .HasColumnName("A_UploadDetail");

                    b.Property<string>("BAddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_AddressLineI");

                    b.Property<string>("BAddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_AddressLineII");

                    b.Property<string>("BCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_City");

                    b.Property<decimal?>("BContributionAmount")
                        .HasColumnType("money")
                        .HasColumnName("B_ContributionAmount");

                    b.Property<Guid?>("BCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_Country_StateID");

                    b.Property<string>("BCreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_CreatedBy");

                    b.Property<DateTime>("BCreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("B_CreatedOn");

                    b.Property<string>("BDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("B_Description");

                    b.Property<string>("BDisplay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_Display");

                    b.Property<string>("BEmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_EmailPrimary");

                    b.Property<string>("BEmployer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_Employer");

                    b.Property<Guid>("BFeccontributionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_FECContributionID");

                    b.Property<Guid?>("BFeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_FECLocalUnionID");

                    b.Property<Guid?>("BFecmemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_FECMemberID");

                    b.Property<string>("BFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_FirstName");

                    b.Property<string>("BImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_ImportedObjectUID");

                    b.Property<Guid?>("BInstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_InstallationUID");

                    b.Property<bool>("BIsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("B_IsDeleted");

                    b.Property<bool>("BIsInactive")
                        .HasColumnType("bit")
                        .HasColumnName("B_IsInactive");

                    b.Property<bool>("BIsLocked")
                        .HasColumnType("bit")
                        .HasColumnName("B_IsLocked");

                    b.Property<string>("BJobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_JobTitle");

                    b.Property<string>("BLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_LastName");

                    b.Property<string>("BMemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("B_MemberCode");

                    b.Property<string>("BMiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("B_MiddleName");

                    b.Property<string>("BName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_Name");

                    b.Property<string>("BNameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_NameAlias");

                    b.Property<Guid>("BObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("B_ObjectUID");

                    b.Property<int?>("BOldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("B_OldRecordID");

                    b.Property<string>("BPhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_PhoneHome");

                    b.Property<string>("BPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("B_PostalCode");

                    b.Property<string>("BPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_Prefix");

                    b.Property<int>("BRecordId")
                        .HasColumnType("int")
                        .HasColumnName("B_RecordID");

                    b.Property<int>("BSortOrder")
                        .HasColumnType("int")
                        .HasColumnName("B_SortOrder");

                    b.Property<string>("BUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_UpdatedBy");

                    b.Property<DateTime?>("BUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("B_UpdatedOn");

                    b.Property<string>("FeccashAccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECCashAccount_name");

                    b.Property<string>("FeccompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("feccompany_name");

                    b.Property<string>("FeccontributionSourceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECContributionSource_name");

                    b.Property<string>("FeccontributionStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECContributionStatus_name");

                    b.Property<string>("FeccontributionTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECContributionType_name");

                    b.Property<string>("FeclocalUnionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECLocalUnion_name");

                    b.Property<string>("FecmemberName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("FECMember_name");

                    b.Property<string>("GlaccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GLAccountNumber");

                    b.Property<string>("GpaccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPAccountName");

                    b.Property<string>("GpcheckBook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPCheckBook");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("CSS_CONTRIBUTION_PLUS_DEATIL");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssCountLrpvendorVoucher", b =>
                {
                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<int?>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.ToView("css_count_LRPVendor_Voucher");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssCssBdgaccountGroupSubGroupView", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Acctgroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("acctgroup");

                    b.Property<Guid?>("Acctgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("acctgroupid");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("department");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("MappingObjectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mapping_objectuid");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroupID");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("status");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_group");

                    b.Property<string>("SubSubName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_sub_name");

                    b.Property<string>("SubSubSubName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sub_sub_sub_name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToView("css_css_BDGAccountGroup_SubGroup_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssDistinctMaskingAccount", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("BdgaccountGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_Name");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<string>("BdgaccountGroupSubGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_Name");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_Name");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup_name");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("BdgdepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment_Name");

                    b.ToView("css_DistinctMaskingAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssDistinctMaskingAccountTemp", b =>
                {
                    b.Property<string>("AccountNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<Guid?>("BdgaccountGroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupid");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("Bdgdepartmentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentid");

                    b.Property<string>("Company")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("MaskedAccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("css_DistinctMaskingAccount_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssDuplciateMapping", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.ToView("css_duplciate_mapping");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssEmployeeMoveFrom", b =>
                {
                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("css_Employee_Move_from");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssEmployeeMoveTo", b =>
                {
                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("css_Employee_move_to");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionDetailError", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_FECDistribution_Detail_error");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionDetailErrorHold", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_FECDistribution_Detail_error_hold");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionDetailErrorInvalidsegment", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_FECDistribution_Detail_error_invalidsegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionProofamount", b =>
                {
                    b.Property<decimal?>("Documentamount")
                        .HasColumnType("money")
                        .HasColumnName("documentamount");

                    b.Property<decimal?>("ExpenditureamountSum")
                        .HasColumnType("money")
                        .HasColumnName("expenditureamount_sum");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_FECDistribution_proofamount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionProofamountStep2", b =>
                {
                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasMaxLength(59)
                        .IsUnicode(false)
                        .HasColumnType("varchar(59)")
                        .HasColumnName("Error_Message");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_FECDistribution_proofamount_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecdistributionReport", b =>
                {
                    b.Property<string>("AccountIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("AmountRemaining")
                        .HasColumnType("money");

                    b.Property<string>("ApprovedValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("approved_value");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BdgaccountGroupName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupName2");

                    b.Property<string>("Bdgaccountgroupname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgaccountgroupname");

                    b.Property<string>("Bdgdepartmentname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgdepartmentname");

                    b.Property<string>("Bdgdepartmentnameline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bdgdepartmentnameline");

                    b.Property<string>("CandidateOrCommitteeAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateOrCommitteeAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CandidateOrCommitteeAddressII");

                    b.Property<string>("CandidateOrCommitteeCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("CandidateOrCommitteeCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidateOrCommittee_Country_StateID");

                    b.Property<string>("CandidateOrCommitteeEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommitteeEMail");

                    b.Property<string>("CandidateOrCommitteeFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CheckAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Companyname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("companyname");

                    b.Property<decimal?>("ControlAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Display")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DistributionDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ElectionCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Election_Country_StateID");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Election_District");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<decimal?>("ExpenditureAmount")
                        .HasColumnType("money");

                    b.Property<string>("ExpenditurePurpose")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("FecBdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGDepartmentID");

                    b.Property<Guid?>("FecUserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_UserAccountID");

                    b.Property<Guid?>("FecbatchStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECBatchStatusID");

                    b.Property<Guid?>("FeccandidateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCandidateID");

                    b.Property<Guid?>("FeccommitteeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCommitteeID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecdisbursementTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDisbursementTypeID");

                    b.Property<Guid>("FecdistibutionlineObjectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("fecdistibutionline_objectuid");

                    b.Property<Guid?>("FecdistributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionStatusID");

                    b.Property<Guid?>("FecdistributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionTypeID");

                    b.Property<Guid?>("FecelectionOfficeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionOfficeID");

                    b.Property<Guid?>("FecelectionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionTypeID");

                    b.Property<Guid?>("FecexpenseCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECExpenseCategoryID");

                    b.Property<Guid?>("FecvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECVendorID");

                    b.Property<string>("HeaderDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Header Description");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNo");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("LINE_NOTES");

                    b.Property<string>("LrpcodeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPCodeName");

                    b.Property<string>("Lrpten99BoxNoName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPTen99BoxNoName");

                    b.Property<string>("Lrpten99TaxTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPTen99TaxTypeName");

                    b.Property<string>("MailingAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MailingAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailingAddressII");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MailingCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mailing_Country_StateID");

                    b.Property<string>("MailingEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MailingEMail");

                    b.Property<string>("MailingFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("UseTax")
                        .HasColumnType("bit");

                    b.Property<string>("VendorAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VendorAddressII");

                    b.Property<string>("VendorCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("VendorCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Vendor_Country_StateID");

                    b.Property<string>("VendorEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VendorEMail");

                    b.Property<string>("VendorFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.ToView("css_fecdistribution_report");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFeclocalUnionView", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToView("css_FECLocalUnion_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecmemberTemp", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Feccompanyid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyid");

                    b.Property<Guid?>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<Guid?>("FecpaymentFrequencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECPaymentFrequencyID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Status1")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("status1");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("css_FECMember_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFecvendorTemp", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Statusvalue")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("statusvalue");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("css_fecvendor_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFsMissingLine", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_fs_missing_lines");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssFsSummaryForBudget", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("BdgreportGroupBdgglaccountMappingid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroup_BDGGLAccountMappingid");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("Cpnyid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cpnyid");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<string>("NAmeBdgreportGroupBdgglaccountMappingid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nAME_BDGReportGroup_BDGGLAccountMappingid");

                    b.Property<string>("NameBdgreportgroupid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME_BDGREPORTGROUPID");

                    b.Property<int?>("Period")
                        .HasColumnType("int")
                        .HasColumnName("period");

                    b.ToView("CSS_fs_SUMMARY_FOR_BUDGET");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssGltransactionLine", b =>
                {
                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<Guid>("Glyearcodeid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("glyearcodeid");

                    b.Property<decimal?>("Totalamount")
                        .HasColumnType("money")
                        .HasColumnName("totalamount");

                    b.ToView("css_GLTransactionLine");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssGlyearcodeSum", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("CSS_GLYEARCODE_SUM");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssListofcorrect", b =>
                {
                    b.Property<double>("RecordId")
                        .HasColumnType("float")
                        .HasColumnName("RecordID");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LM2_CODE");

                    b.HasKey("RecordId");

                    b.ToTable("css_listofcorrect");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssListofcorrectv2", b =>
                {
                    b.Property<string>("Lm2Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("RecordId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RecordID");

                    b.ToTable("css_listofcorrectv2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLm2MatchingBasedOnWebportal", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_lm2_matching_based_on_webportal");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLm2MatchingBasedOnWebportalDiff", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_lm2_matching_based_on_webportal_diff");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpglMappingpm", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.ToView("css_LrpglMappingpm");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransaction30", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("fiscyr");

                    b.ToView("css_lrpgltransaction_30");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransaction30Check", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("checkno");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("fiscyr");

                    b.ToView("css_lrpgltransaction_30_check");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransaction99", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("fiscyr");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("refnbr");

                    b.ToView("css_lrpgltransaction_99");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransaction99A", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("fiscyr");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("lm2_code");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("refnbr");

                    b.ToView("css_lrpgltransaction_99_a");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionA0002", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<int?>("Month1")
                        .HasColumnType("int")
                        .HasColumnName("month1");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.ToView("css_LRPGLTransaction_a0002");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionActualForBudget", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.ToView("CSS_LRPGLTransaction_ACTUAL_FOR_BUDGET");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionActualForBudgetTemp", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("Bdgaccountgroupid")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)")
                        .HasColumnName("BDGACCOUNTGROUPID");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<string>("BdgdepartmentId")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(false)
                        .HasColumnType("varchar(63)")
                        .HasColumnName("BDGDepartmentID");

                    b.ToTable("CSS_LRPGLTransaction_ACTUAL_FOR_BUDGET_TEMP");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionAllA0001", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.ToView("css_LRPGLTransaction_all_a0001");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionBalancesView", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.ToView("css_LRPGLTransaction_balances_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionMainView", b =>
                {
                    b.Property<string>("AccountCategory")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_Category");

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_group");

                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("css_link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("css_link_lines");

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("Employeename")
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)")
                        .HasColumnName("employeename");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int?>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder1")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.ToTable("css_lrpgltransaction_main_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionSum", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.ToView("css_lrpgltransaction_sum");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionSumCheck", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("css_lrpgltransaction_sum_check");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionSumVendor", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("css_lrpgltransaction_sum_vendor");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionSummary", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("TranDate")
                        .HasMaxLength(37)
                        .IsUnicode(false)
                        .HasColumnType("varchar(37)");

                    b.ToView("css_lrpgltransaction_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactionWithLm2purpose", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.ToView("css_LRPGLTransaction_with_lm2purpose");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpgltransactiongrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.ToView("css_lrpgltransactiongrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssLrpvendorVoucherChange", b =>
                {
                    b.Property<string>("Companyname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("companyname");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("css_lrpvendor_voucher_change");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssMatrixDefault", b =>
                {
                    b.Property<int?>("Accatnum")
                        .HasColumnType("int");

                    b.Property<string>("AccountMask")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Account_Mask");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CompanyCOde");

                    b.Property<string>("DepartmentDmg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Department_DMG");

                    b.Property<string>("DepartmentGp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Department_GP");

                    b.Property<string>("DescriptionGp")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Description_GP");

                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Heading1Dmg")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Heading_1_DMG");

                    b.Property<string>("Heading2Dmg")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Heading_2_DMG");

                    b.Property<string>("Heading3Dmg")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Heading_3_DMG");

                    b.Property<string>("ReportGroupHeaderGp")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Report_Group_Header_GP");

                    b.Property<string>("RowDescriptionDmg")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Row_Description_DMG");

                    b.Property<string>("RowNoDmg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Row_NO_DMG");

                    b.Property<string>("RowNoGp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Row_NO_GP");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable("css_matrix_defaults");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssMissing", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_missing");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssOaapGroupByExpenserptnumberCountProject", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_oaap_group_by_expenserptnumber_count_project");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssOaapGroupByProject", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_oaap_group_by_project");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssReportGroupRpttemp", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Acct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LastYearAmount")
                        .HasColumnType("money");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.ToTable("css_ReportGroupRpttemp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssReportGroupRpttemp2", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup");

                    b.Property<string>("AccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Acct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LastYearAmount")
                        .HasColumnType("money");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.ToTable("css_ReportGroupRpttemp2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssReportTotal", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("AmountSum")
                        .HasColumnType("float")
                        .HasColumnName("amount_sum");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<string>("DepartmentGroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEPARTMENT GROUP NAME");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SortOrderDepartment")
                        .HasColumnType("int")
                        .HasColumnName("SORT_ORDER_DEPARTMENT");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("YearRange")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("year_range");

                    b.ToView("css_report_totals");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssRm00101", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("css_rm00101");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSchemaGl00100Temp", b =>
                {
                    b.Property<string>("ColumnName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("COLUMN_NAME");

                    b.ToTable("CSS_SCHEMA_GL00100_TEMP");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSeg2Summary", b =>
                {
                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.ToView("css_seg2_summary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSeg2SummaryStep2", b =>
                {
                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.ToView("css_seg2_summary_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSelectBdgbudgetinfoDetail", b =>
                {
                    b.Property<Guid?>("AnticipatedStartingMonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AnticipatedStarting_MonthID");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgbudgetGroupTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetGroupTypeID");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<Guid?>("BdgcommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCommitteeTypeID");

                    b.Property<Guid?>("BdgemployeeCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeCategoryID");

                    b.Property<Guid?>("BdgemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeID");

                    b.Property<Guid?>("BdgemployeePositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeePositionID");

                    b.Property<Guid?>("BdgemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeStatusID");

                    b.Property<Guid?>("BdgemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeTypeID");

                    b.Property<Guid?>("BdgemployeeUnitId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnitID");

                    b.Property<Guid?>("BdgemployeeUnitPositionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_PositionID");

                    b.Property<Guid?>("BdgemployeeUnitPositionStepId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGEmployeeUnit_Position_StepID");

                    b.Property<Guid?>("BdgmeetingStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGMeetingStatusID");

                    b.Property<Guid?>("BdgpositionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGPositionTypeID");

                    b.Property<Guid?>("BdgprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGProjectTypeID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money");

                    b.Property<string>("Display")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("FringeBdgbudgetInfoDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Fringe_BDGBudgetInfo_DetailID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money");

                    b.Property<int?>("NumberOfMonthsOnSabbatical")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeks")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWeeksInNextYear")
                        .HasColumnType("int");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("OldBdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Old_BDGBudgetInfoID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("Override")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money");

                    b.Property<Guid?>("WillBeUsingTaskForcesYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WillBeUsingTaskForces_YesNoID");

                    b.ToView("CSS_SELECT_BDGBUDGETINFO_DETAIL");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSetupVarTemp", b =>
                {
                    b.Property<string>("ColumnName")
                        .HasMaxLength(263)
                        .HasColumnType("nvarchar(263)")
                        .HasColumnName("column_name");

                    b.Property<string>("ColumnName1")
                        .HasMaxLength(185)
                        .HasColumnType("nvarchar(185)")
                        .HasColumnName("COLUMN_NAME1");

                    b.Property<string>("Field")
                        .HasMaxLength(427)
                        .HasColumnType("nvarchar(427)")
                        .HasColumnName("field");

                    b.Property<int?>("OrdinalPosition")
                        .HasColumnType("int")
                        .HasColumnName("ordinal_position");

                    b.ToTable("CSS_SETUP_VAR_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSetupVarTemp1", b =>
                {
                    b.Property<string>("Field")
                        .HasMaxLength(427)
                        .HasColumnType("nvarchar(427)")
                        .HasColumnName("field");

                    b.Property<int>("Linenotemp")
                        .HasColumnType("int")
                        .HasColumnName("linenotemp");

                    b.Property<int?>("OrdinalPosition")
                        .HasColumnType("int")
                        .HasColumnName("ordinal_position");

                    b.ToTable("CSS_SETUP_VAR_temp1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSyncGpWithInquiryStatus", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("startdate");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.HasKey("Objectuid");

                    b.ToTable("css_sync_gp_with_inquiry_status");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssSyncGpWithInquiryStatus1099", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("startdate");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.HasKey("Objectuid");

                    b.ToTable("css_sync_gp_with_inquiry_status_1099");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTemp1099Step1", b =>
                {
                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Periodid")
                        .HasColumnType("int")
                        .HasColumnName("periodid");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Year1")
                        .HasColumnType("int")
                        .HasColumnName("year1");

                    b.Property<int?>("_1099boxno")
                        .HasColumnType("int")
                        .HasColumnName("1099boxno");

                    b.Property<string>("_1099taxtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099taxtype");

                    b.ToTable("css_temp_1099_step1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTemp1099Step2", b =>
                {
                    b.Property<int?>("DexRowId")
                        .HasColumnType("int")
                        .HasColumnName("dex_row_id");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Periodid")
                        .HasColumnType("int")
                        .HasColumnName("periodid");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Year1")
                        .HasColumnType("int")
                        .HasColumnName("year1");

                    b.Property<int?>("_1099boxno")
                        .HasColumnType("int")
                        .HasColumnName("1099boxno");

                    b.Property<string>("_1099taxtype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099taxtype");

                    b.ToTable("css_temp_1099_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTempGltransactionlineAddViewMax", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToTable("CSS_TEMP_gltransactionline_add_view_max");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTempImportContributions2", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckDate1")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ContributionId")
                        .HasColumnType("float")
                        .HasColumnName("ContributionID");

                    b.Property<string>("DateReceived")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DepositAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DepositDate1")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Display")
                        .HasColumnType("money");

                    b.Property<string>("ElectionCycle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Election Cycle");

                    b.Property<string>("ElectionQuarter")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Election Quarter");

                    b.Property<string>("EndDate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FeccashAccountId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECCashAccountID");

                    b.Property<string>("FeccompanyId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("FeccontributionSourceId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECContributionSourceID");

                    b.Property<string>("FeccontributionStatusId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECContributionStatusID");

                    b.Property<string>("FeccontributionTypeId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECContributionTypeID");

                    b.Property<string>("FeclocalUnionId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<string>("GpreferenceNo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("GPReferenceNo");

                    b.Property<string>("LocalStateFedNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Local/StateFedNumber");

                    b.Property<decimal?>("MemberTotal")
                        .HasColumnType("money");

                    b.Property<double?>("Name")
                        .HasColumnType("float");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("ObjectUid")
                        .HasColumnType("money")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UploadDetail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("css_temp_import_contributions2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTempviewBdgaccountGroupSubGroup", b =>
                {
                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.ToView("css_tempview_BDGAccountGroup_SubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTempviewBdgaccountGroupSubGroup2", b =>
                {
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Name2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name2");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToView("css_tempview_BDGAccountGroup_SubGroup2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssTypeValue", b =>
                {
                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("CSS_TYPE_VALUES");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssUpdateAllDataStatus", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("startdate");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.HasKey("Objectuid");

                    b.ToTable("css_update_all_data_status");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CssVendorPurpose", b =>
                {
                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dex_row_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DolPurpose")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DOL_Purpose");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PurposeSource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Purpose_Source");

                    b.Property<string>("ScheduleNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Schedule_NO");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("css_vendor_purpose");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Csslistoftransactionpriortoupdate", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACCT");

                    b.Property<string>("Amount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("CalculatedAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Checkdate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Classid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CrtdDatetime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("css_link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("css_link_lines");

                    b.Property<string>("Curyid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CURYID");

                    b.Property<string>("Curyrate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("IcDistribution")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LEDGERID");

                    b.Property<string>("Lineid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LINEID");

                    b.Property<string>("Linenbr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("LupdDatetime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Noteid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOTEID");

                    b.Property<string>("OldRecordId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("POSTED");

                    b.Property<string>("RecordId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RecordID");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REFNBR");

                    b.Property<string>("SalesTaxAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SalesTaxRate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Seg1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SEG9");

                    b.Property<string>("Sub")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SUB");

                    b.Property<string>("Trandate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TRANTYPE");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VCLASSID");

                    b.ToTable("csslistoftransactionpriortoupdate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsstempBdgaccountGroupSubGroupSubgroup", b =>
                {
                    b.Property<string>("AccountCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentBdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("csstemp_BDGAccountGroup_SubGroup_subgroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CsstempBdgreportGroupBdgglaccountMapping", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("DoNotShowInReport")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MaskedAccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("csstemp_BDGReportGroup_BDGGLAccountMapping");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Department", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Display")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Lm2Disbursments")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LM2_DISBURSMENTS");

                    b.Property<string>("Lm2Receipts")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LM2_RECEIPTS");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OaId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OA_ID");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DepartmentLrp", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentNo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Display")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Lm2Disbursments")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LM2_DISBURSMENTS");

                    b.Property<string>("Lm2Receipts")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LM2_RECEIPTS");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OaId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OA_ID");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("department_lrp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DistinctAcctTemp", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<string>("Company")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("company");

                    b.ToTable("distinct_acct_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Drilldown2", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToTable("drilldown2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownDisplay", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AdditionalFields")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableOrViewName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("DropDownDisplay");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownDisplayGrid", b =>
                {
                    b.Property<string>("AdditionalFields")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TableOrViewName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("DropDownDisplayGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownFilter", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ComparisonOperator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FilterColumn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilterValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterValueLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("DropDownFilter");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownFilterGrid", b =>
                {
                    b.Property<string>("ComparisonOperator")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FilterColumn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilterValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterValueLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToView("DropDownFilterGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownSetting", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AdditionalFields")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FilterControlId")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("FilterControlID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableOrViewName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("DropDownSetting");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DropDownSettingGrid", b =>
                {
                    b.Property<string>("AdditionalFields")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DropDownTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FilterControlId")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("FilterControlID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageLinks")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TableOrViewName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("DropDownSettingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DuplicateMaskingDetailGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgreportGroupDuplicateMaskingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroup_DuplicateMaskingID");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("DuplicateMaskingDetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DuplicateMaskingGrid", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCT");

                    b.Property<Guid?>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("DuplicateMaskingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Duplrpgltranstion", b =>
                {
                    b.Property<int?>("Count1")
                        .HasColumnType("int")
                        .HasColumnName("count1");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("fiscyr");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<int?>("Maxrecordid")
                        .HasColumnType("int")
                        .HasColumnName("maxrecordid");

                    b.ToTable("duplrpgltranstion");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicCode", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Args1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("DynamicCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicCodeGrid", b =>
                {
                    b.Property<string>("Args1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Args5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ArgsName5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("DynamicCodeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicField", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("DynamicFieldTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DynamicFieldTypeID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PossibleValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("DynamicFieldTypeId");

                    b.HasIndex("ModuleId");

                    b.ToTable("DynamicField");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PossibleValues")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("DynamicFieldGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldList", b =>
                {
                    b.Property<string>("DynamicFieldType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PossibleValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.ToView("DynamicFieldList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("DynamicFieldType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("DynamicFieldTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldValue", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("DynamicFieldId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DynamicFieldID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("DynamicFieldId");

                    b.ToTable("DynamicField_Value");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldValueGrid", b =>
                {
                    b.Property<Guid>("DynamicFieldId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DynamicFieldID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("DynamicField_ValueGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("NotificationTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NotificationTypeID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ToBcc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ToBCC");

                    b.Property<string>("ToCc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ToCC");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EmailTemplateGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotificationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ToBcc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ToBCC");

                    b.Property<string>("ToCc")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ToCC");

                    b.ToView("EmailTemplateGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Employee", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("First_name");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Last_Name");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Middle_Name");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameCombined")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name_combined");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EmployeeLrp", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("First_name");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Last_Name");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Middle_Name");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameCombined")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name_combined");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("employee_lrp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EquipmentRentalBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<string>("CommitteeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WillBeUsingTaskForces")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToView("EquipmentRentalBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ErrorLog", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasComputedColumnSql("([Description])", false);

                    b.Property<int?>("ErrorNumber")
                        .HasColumnType("int");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Source")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("StackTrace")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EventTrigger", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("DynamicCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DynamicCodeID");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastError")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("LastRan")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("DynamicCodeId");

                    b.ToTable("EventTrigger");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EventTriggerGrid", b =>
                {
                    b.Property<string>("DynamicCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastError")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime?>("LastRan")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("EventTriggerGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ExecutiveSummaryReport", b =>
                {
                    b.Property<decimal?>("ApprovedBudget")
                        .HasColumnType("money");

                    b.Property<decimal?>("Committees")
                        .HasColumnType("money");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentGroupSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DepartmentSortOrder")
                        .HasColumnType("int");

                    b.Property<decimal?>("Fringes")
                        .HasColumnType("money");

                    b.Property<decimal?>("Meetings")
                        .HasColumnType("money");

                    b.Property<decimal?>("OtherAdmin")
                        .HasColumnType("money");

                    b.Property<decimal?>("Others")
                        .HasColumnType("money");

                    b.Property<string>("PreviousYearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ProjectsPublications")
                        .HasColumnType("money");

                    b.Property<decimal?>("Salaries")
                        .HasColumnType("money");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("ExecutiveSummaryReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ExpenseBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("ExpenseBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ExpenseHotelHousingBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("ExpenseHotelHousingBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ExpenseTransportationBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("ExpenseTransportationBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecbatchStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECBatchStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecbatchStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECBatchStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccandidate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("CandidateIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CurrentDistrict")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid?>("ElectionCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Election_Country_StateID");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Election_District");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FeccandidateStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCandidateStatusID");

                    b.Property<Guid?>("FeccandidateTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCandidateTypeID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecelectionOfficeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionOfficeID");

                    b.Property<string>("Filler")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("FillerIi")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("FillerII");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PartyDesignationI")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PartyDesignationIii")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("PartyDesignationIII");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrincipalCampaignComm")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("YearOfElection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("ElectionCountryStateId");

                    b.HasIndex("FeccandidateStatusId");

                    b.HasIndex("FeccandidateTypeId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecelectionOfficeId");

                    b.ToTable("FECCandidate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("CandidateIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CandidateType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrentDistrict")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ElectionOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<string>("ElectionState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("Filler")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("FillerIi")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("FillerII");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PartyDesignationI")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PartyDesignationIii")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("PartyDesignationIII");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrincipalCampaignComm")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearOfElection")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECCandidateGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECCandidateStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECCandidateStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECCandidateType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECCandidateTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccashAccount", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FeccontributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionTypeID");

                    b.Property<string>("GlaccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GLAccountNumber");

                    b.Property<string>("GpaccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPAccountName");

                    b.Property<string>("GpcheckBook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPCheckBook");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FeccontributionTypeId");

                    b.ToTable("FECCashAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccashAccountGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContributionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("GlaccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GLAccountNumber");

                    b.Property<string>("GpaccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPAccountName");

                    b.Property<string>("GpcheckBook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GPCheckBook");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECCashAccountGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccommittee", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("CandidateIdentification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommitteeIdentification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConnectedOrganizationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(104)
                        .HasColumnType("nvarchar(104)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FeccommitteeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCommitteeTypeID");

                    b.Property<Guid?>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecfilingFrequencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECFilingFrequencyID");

                    b.Property<Guid?>("FecinterestGroupCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECInterestGroupCategoryID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Party")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TreasurerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("FeccommitteeTypeId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecfilingFrequencyId");

                    b.HasIndex("FecinterestGroupCategoryId");

                    b.ToTable("FECCommittee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccommitteeGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("CandidateIdentification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommitteeIdentification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommitteeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConnectedOrganizationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("FilingFrequency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InterestGroupCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Party")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TreasurerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECCommitteeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccommitteeType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECCommitteeType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccommitteeTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECCommitteeTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("DefaultFeccontributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Default_FECContributionTypeID");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid?>("FecBdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGReportGroupID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentFeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_FECCompanyID");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("DefaultFeccontributionTypeId");

                    b.HasIndex("FecBdgreportGroupId");

                    b.HasIndex("ParentFeccompanyId");

                    b.ToTable("FECCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid>("FecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECSegmentID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecsegmentId");

                    b.ToTable("FECCompany_FECSegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentGrid", b =>
                {
                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Segment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECCompany_FECSegmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentValue", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FeccompanyFecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECSegmentID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyFecsegmentId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecsegmentId");

                    b.ToTable("FECCompany_FECSegmentValue");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentValueGrid", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Segment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECCompany_FECSegmentValueGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentValueTemp", b =>
                {
                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<Guid>("FeccompanyFecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid>("FecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECSegmentID");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int>("IsInactive")
                        .HasColumnType("int");

                    b.Property<int>("IsLocked")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(67)
                        .IsUnicode(false)
                        .HasColumnType("char(67)")
                        .IsFixedLength(true);

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(67)
                        .IsUnicode(false)
                        .HasColumnType("char(67)")
                        .IsFixedLength(true);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Statusid")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("STATUSID");

                    b.ToTable("FECCompany_FECSegmentValue_TEMP");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParentCompany")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccontribution", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DepositAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComputedColumnSql("([CheckNo])", false);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("FeccashAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCashAccountID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FeccontributionSourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionSourceID");

                    b.Property<Guid?>("FeccontributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionStatusID");

                    b.Property<Guid?>("FeccontributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionTypeID");

                    b.Property<Guid?>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<string>("GpreferenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("GPReferenceNo");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MemberTotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([dbo].[GetMemberContributionTotal]([ObjectUID]))", false);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("UploadDetail")
                        .HasColumnType("image");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccashAccountId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FeccontributionSourceId");

                    b.HasIndex("FeccontributionStatusId");

                    b.HasIndex("FeccontributionTypeId");

                    b.HasIndex("FeclocalUnionId");

                    b.ToTable("FECContribution");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<Guid?>("AdjustmentFeccontributionDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Adjustment_FECContribution_DetailID");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ContributionAmount")
                        .HasColumnType("money");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccontributionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionID");

                    b.Property<Guid?>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<Guid?>("FecmemberId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECMemberID");

                    b.Property<Guid?>("FecpaymentFrequencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECPaymentFrequencyID");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("AdjustmentFeccontributionDetailId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("FeccontributionId");

                    b.HasIndex("FeclocalUnionId");

                    b.HasIndex("FecmemberId");

                    b.HasIndex("FecpaymentFrequencyId");

                    b.ToTable("FECContribution_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionDetailGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<Guid?>("AdjustmentFeccontributionDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Adjustment_FECContribution_DetailID");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ContributionAmount")
                        .HasColumnType("money");

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccontributionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributionID");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsAdjustment")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalUnion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECContribution_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionGrid", b =>
                {
                    b.Property<string>("Batchno")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("BATCHNO");

                    b.Property<string>("CashAccount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContributionSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContributionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContributionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DepositAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DepositDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("GpreferenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("GPReferenceNo");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LocalUnion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("MemberTotal")
                        .HasColumnType("money");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("UploadDetail")
                        .HasColumnType("image");

                    b.ToView("FECContributionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionLimit", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccontributorCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECContributorCategoryID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LimitToEachCandidateCommitteePerElection")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToNationalPartyCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToOtherPoliticalCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToStateDistrictLocalCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("SpecialLimitToSenateCandidatePerCampaign")
                        .HasColumnType("money");

                    b.Property<decimal?>("SpecialOverallBiennialLimitToAllCandidates")
                        .HasColumnType("money");

                    b.Property<decimal?>("SpecialOverallBiennialLimitToPacandParties")
                        .HasColumnType("money")
                        .HasColumnName("SpecialOverallBiennialLimitToPACAndParties");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccontributorCategoryId");

                    b.ToTable("FECContributionLimit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionLimitGrid", b =>
                {
                    b.Property<string>("ContributorCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LimitToEachCandidateCommitteePerElection")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToNationalPartyCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToOtherPoliticalCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<decimal?>("LimitToStateDistrictLocalCommitteePerYear")
                        .HasColumnType("money");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("SpecialLimitToSenateCandidatePerCampaign")
                        .HasColumnType("money");

                    b.Property<decimal?>("SpecialOverallBiennialLimitToAllCandidates")
                        .HasColumnType("money");

                    b.Property<decimal?>("SpecialOverallBiennialLimitToPacandParties")
                        .HasColumnType("money")
                        .HasColumnName("SpecialOverallBiennialLimitToPACAndParties");

                    b.ToView("FECContributionLimitGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionSource", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.ToTable("FECContributionSource");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionSourceGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECContributionSourceGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECContributionStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECContributionStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECContributionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECContributionTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributorCategory", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECContributorCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributorCategoryGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECContributorCategoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFec")
                        .HasColumnType("bit")
                        .HasColumnName("IsFEC");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("Segment10FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment10_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment1FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment1_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment2FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment2_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment3FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment3_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment4FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment4_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment5FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment5_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment6FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment6_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment7FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment7_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment8FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment8_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment9FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment9_FECCompany_FECSegmentValueID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("Segment10FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment1FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment2FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment3FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment4FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment5FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment6FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment7FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment8FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment9FeccompanyFecsegmentValueId");

                    b.ToTable("FECDisbursementType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementTypeFecdistributionType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FecdisbursementTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDisbursementTypeID");

                    b.Property<Guid>("FecdistributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionTypeID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FecdisbursementTypeId");

                    b.HasIndex("FecdistributionTypeId");

                    b.ToTable("FECDisbursementType_FECDistributionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementTypeFecdistributionTypeGrid", b =>
                {
                    b.Property<string>("DistributionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FecdisbursementTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDisbursementTypeID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDisbursementType_FECDistributionTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementTypeGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDisbursementTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecdistribution", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("AmountRemaining")
                        .HasColumnType("money");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CandidateOrCommitteeAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateOrCommitteeAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CandidateOrCommitteeAddressII");

                    b.Property<string>("CandidateOrCommitteeCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("CandidateOrCommitteeCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidateOrCommittee_Country_StateID");

                    b.Property<string>("CandidateOrCommitteeEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommitteeEMail");

                    b.Property<string>("CandidateOrCommitteeFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CheckAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("ControlAmount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComputedColumnSql("([VoucherNo])", false);

                    b.Property<DateTime?>("DistributionDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ElectionCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Election_Country_StateID");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Election_District");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<Guid?>("FecBdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGAccountGroupID");

                    b.Property<Guid?>("FecBdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGDepartmentID");

                    b.Property<Guid?>("FecLrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_LRPTen99BoxNoID");

                    b.Property<Guid?>("FecLrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_LRPTen99TaxTypeID");

                    b.Property<Guid?>("FecUserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_UserAccountID");

                    b.Property<Guid?>("FecbatchStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECBatchStatusID");

                    b.Property<Guid?>("FeccandidateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCandidateID");

                    b.Property<Guid?>("FeccommitteeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCommitteeID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecdisbursementTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDisbursementTypeID");

                    b.Property<Guid?>("FecdistributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionStatusID");

                    b.Property<Guid?>("FecdistributionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionTypeID");

                    b.Property<Guid?>("FecelectionOfficeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionOfficeID");

                    b.Property<Guid?>("FecelectionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionTypeID");

                    b.Property<Guid?>("FecexpenseCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECExpenseCategoryID");

                    b.Property<Guid?>("FecvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECVendorID");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNo");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MailingAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MailingAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailingAddressII");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MailingCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mailing_Country_StateID");

                    b.Property<string>("MailingEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MailingEMail");

                    b.Property<string>("MailingFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VendorAddressII");

                    b.Property<string>("VendorCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("VendorCountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Vendor_Country_StateID");

                    b.Property<string>("VendorEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VendorEMail");

                    b.Property<string>("VendorFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CandidateOrCommitteeCountryStateId");

                    b.HasIndex("ElectionCountryStateId");

                    b.HasIndex("FecBdgaccountGroupId");

                    b.HasIndex("FecBdgdepartmentId");

                    b.HasIndex("FecLrpten99BoxNoId");

                    b.HasIndex("FecLrpten99TaxTypeId");

                    b.HasIndex("FecUserAccountId");

                    b.HasIndex("FecbatchStatusId");

                    b.HasIndex("FeccandidateId");

                    b.HasIndex("FeccommitteeId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecdisbursementTypeId");

                    b.HasIndex("FecdistributionStatusId");

                    b.HasIndex("FecdistributionTypeId");

                    b.HasIndex("FecelectionOfficeId");

                    b.HasIndex("FecelectionTypeId");

                    b.HasIndex("FecexpenseCategoryId");

                    b.HasIndex("FecvendorId");

                    b.HasIndex("MailingCountryStateId");

                    b.HasIndex("VendorCountryStateId");

                    b.ToTable("FECDistribution");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionDetail", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComputedColumnSql("([VoucherNo])", false);

                    b.Property<Guid?>("ElectionCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ElectionCodeID");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("ExpenditureAmount")
                        .HasColumnType("money");

                    b.Property<string>("ExpenditurePurpose")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("FecBdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGAccountGroupID");

                    b.Property<Guid?>("FecBdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("FecBdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("FecBdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("FecBdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGDepartmentID");

                    b.Property<Guid?>("FecBdggltransactionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGGLTransactionID");

                    b.Property<Guid?>("FecLrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_LRPCodeID");

                    b.Property<Guid>("FecdistributionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionID");

                    b.Property<Guid?>("FecelectionTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECElectionTypeID");

                    b.Property<Guid?>("FecexpenseCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECExpenseCategoryID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("Segment10FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment10_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment1FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment1_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment2FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment2_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment3FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment3_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment4FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment4_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment5FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment5_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment6FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment6_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment7FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment7_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment8FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment8_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment9FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment9_FECCompany_FECSegmentValueID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("UseTax")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FecBdgaccountGroupId");

                    b.HasIndex("FecBdgaccountGroupSubGroupId");

                    b.HasIndex("FecBdgaccountGroupSubGroupSubGroupId");

                    b.HasIndex("FecBdgaccountGroupSubGroupSubGroupSubGroupId");

                    b.HasIndex("FecBdgdepartmentId");

                    b.HasIndex("FecBdggltransactionId");

                    b.HasIndex("FecLrpcodeId");

                    b.HasIndex("FecdistributionId");

                    b.HasIndex("FecelectionTypeId");

                    b.HasIndex("FecexpenseCategoryId");

                    b.HasIndex("Segment10FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment1FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment2FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment3FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment4FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment5FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment6FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment7FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment8FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment9FeccompanyFecsegmentValueId");

                    b.ToTable("FECDistribution_Detail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionDetailGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ElectionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ExpenditureAmount")
                        .HasColumnType("money");

                    b.Property<string>("ExpenditurePurpose")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ExpenseCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FecdistributionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionID");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.ToView("FECDistribution_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionGrid", b =>
                {
                    b.Property<string>("AccountIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("AmountToBePaid")
                        .HasColumnType("money");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Candidate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CandidateOrCommitteeAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateOrCommitteeAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CandidateOrCommitteeAddressII");

                    b.Property<string>("CandidateOrCommitteeCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteeCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommittee_Country_State");

                    b.Property<string>("CandidateOrCommitteeEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommitteeEMail");

                    b.Property<string>("CandidateOrCommitteeFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CheckAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Committee")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ControlAmount")
                        .HasColumnType("money");

                    b.Property<string>("DisbursementType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistributionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistributionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Election_Country_State");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Election_District");

                    b.Property<string>("ElectionOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<string>("ElectionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExpenseCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FecBdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGDepartmentID");

                    b.Property<Guid?>("FecUserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_UserAccountID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNo");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MailingAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MailingAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailingAddressII");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MailingCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mailing_Country_State");

                    b.Property<string>("MailingEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MailingEMail");

                    b.Property<string>("MailingFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Vendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VendorAddressII");

                    b.Property<string>("VendorCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Vendor_Country_State");

                    b.Property<string>("VendorEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VendorEMail");

                    b.Property<string>("VendorFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.ToView("FECDistributionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimit", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FecdistributionLimitTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionLimitTypeID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FecdistributionLimitTypeId");

                    b.ToTable("FECDistributionLimit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimitGrid", b =>
                {
                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("DistributionLimitType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECDistributionLimitGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimitType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECDistributionLimitType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimitTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDistributionLimitTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECDistributionStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDistributionStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatusStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("AllowedFecdistributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Allowed_FECDistributionStatusID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FecdistributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionStatusID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("AllowedFecdistributionStatusId");

                    b.HasIndex("FecdistributionStatusId");

                    b.ToTable("FECDistributionStatus_Status");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatusStatusGrid", b =>
                {
                    b.Property<string>("AllowedStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FecdistributionStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECDistributionStatusID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDistributionStatus_StatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(53)
                        .HasColumnType("nvarchar(53)")
                        .HasComputedColumnSql("([Name]+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECDistributionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECDistributionTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionOffice", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECElectionOffice");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionOfficeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECElectionOfficeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECElectionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECElectionTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategory", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("Segment10FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment10_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment1FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment1_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment2FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment2_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment3FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment3_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment4FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment4_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment5FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment5_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment6FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment6_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment7FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment7_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment8FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment8_FECCompany_FECSegmentValueID");

                    b.Property<Guid?>("Segment9FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Segment9_FECCompany_FECSegmentValueID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("Segment10FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment1FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment2FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment3FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment4FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment5FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment6FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment7FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment8FeccompanyFecsegmentValueId");

                    b.HasIndex("Segment9FeccompanyFecsegmentValueId");

                    b.ToTable("FECExpenseCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategoryFecsegmentValue", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FeccompanyFecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentID");

                    b.Property<Guid>("FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentValueID");

                    b.Property<Guid>("FecexpenseCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECExpenseCategoryID");

                    b.Property<Guid?>("FecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECSegmentID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyFecsegmentId");

                    b.HasIndex("FeccompanyFecsegmentValueId");

                    b.HasIndex("FecexpenseCategoryId");

                    b.HasIndex("FecsegmentId");

                    b.ToTable("FECExpenseCategory_FECSegmentValue");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategoryFecsegmentValueGrid", b =>
                {
                    b.Property<Guid>("FeccompanyFecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentID");

                    b.Property<Guid>("FeccompanyFecsegmentValueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompany_FECSegmentValueID");

                    b.Property<Guid>("FecexpenseCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECExpenseCategoryID");

                    b.Property<Guid?>("FecsegmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECSegmentID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Segment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECExpenseCategory_FECSegmentValueGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategoryGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECExpenseCategoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecfilingFrequency", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.ToTable("FECFilingFrequency");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecfilingFrequencyGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECFilingFrequencyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecinterestGroupCategory", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.ToTable("FECInterestGroupCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecinterestGroupCategoryGrid", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECInterestGroupCategoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeclocalUnion", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)")
                        .HasComputedColumnSql("((([number]+'-')+([Name]+' '))+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("FeccompanyId");

                    b.ToTable("FECLocalUnion");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeclocalUnionGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECLocalUnionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecmember", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComputedColumnSql("(coalesce(((([MemberCode]+' - ')+[LastName])+', ')+[FirstName],([LastName]+', ')+[FirstName]))", false);

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<Guid?>("FecpaymentFrequencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECPaymentFrequencyID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FeclocalUnionId");

                    b.HasIndex("FecpaymentFrequencyId");

                    b.ToTable("FECMember");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecmemberGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalUnion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECMemberGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecmemeberMissing", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Distname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("distname");

                    b.Property<string>("EmailPrimary")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<Guid?>("FecpaymentFrequencyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECPaymentFrequencyID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("money");

                    b.Property<string>("PhoneHome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToView("fecmemeber_missing");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecpaymentFrequency", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECPaymentFrequency");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecpaymentFrequencyGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECPaymentFrequencyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([NameAlias])", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowInCrystalViewer")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.ToTable("FECReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecreportGrid", b =>
                {
                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<string>("Feccompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECCompany");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowInCrystalViewer")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FECReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecsegment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECSegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecsegmentGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECSegmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecvendor", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FecLrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_LRPTen99BoxNoID");

                    b.Property<Guid?>("FecLrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_LRPTen99TaxTypeID");

                    b.Property<Guid?>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<Guid?>("FecvendorSourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECVendorSourceID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TaxId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TaxID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("FecLrpten99BoxNoId");

                    b.HasIndex("FecLrpten99TaxTypeId");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("FecvendorSourceId");

                    b.ToTable("FECVendor");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecvendorDistributionGrid", b =>
                {
                    b.Property<string>("AccountIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("AmountToBePaid")
                        .HasColumnType("money");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Candidate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CandidateOrCommitteeAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateOrCommitteeAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CandidateOrCommitteeAddressII");

                    b.Property<string>("CandidateOrCommitteeCity")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteeCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommittee_Country_State");

                    b.Property<string>("CandidateOrCommitteeEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CandidateOrCommitteeEMail");

                    b.Property<string>("CandidateOrCommitteeFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CandidateOrCommitteePostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("CheckAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Committee")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ControlAmount")
                        .HasColumnType("money");

                    b.Property<string>("DisbursementType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistributionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistributionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Election_Country_State");

                    b.Property<string>("ElectionDistrict")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Election_District");

                    b.Property<string>("ElectionOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ElectionOtherDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ElectionOtherIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Election_OtherIdentification");

                    b.Property<string>("ElectionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExpenseCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("FecBdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_BDGDepartmentID");

                    b.Property<Guid?>("FecUserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FEC_UserAccountID");

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("Idno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNo");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("MailingAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MailingAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MailingAddressII");

                    b.Property<string>("MailingCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MailingCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Mailing_Country_State");

                    b.Property<string>("MailingEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MailingEMail");

                    b.Property<string>("MailingFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MailingPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Vendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorAddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("VendorAddressII");

                    b.Property<string>("VendorCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorCountryState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Vendor_Country_State");

                    b.Property<string>("VendorEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VendorEMail");

                    b.Property<string>("VendorFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VendorPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("YearOfElection")
                        .HasColumnType("int");

                    b.ToView("FECVendorDistributionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecvendorGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMail");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorIdentification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToView("FECVendorGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecvendorSource", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(54)
                        .HasColumnType("nvarchar(54)")
                        .HasComputedColumnSql("(([Name]+' ')+case when [IsInactive]<>(0) then '(I)' else '' end)", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("FECVendorSource");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecvendorSourceGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("FECVendorSourceGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FkrelationshipList", b =>
                {
                    b.Property<int>("ColOrder")
                        .HasColumnType("int")
                        .HasColumnName("Col Order");

                    b.Property<string>("DeleteRule")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("DELETE_RULE");

                    b.Property<string>("FkColumn")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("FK column");

                    b.Property<string>("FkName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("FK Name");

                    b.Property<string>("FkTable")
                        .IsRequired()
                        .HasMaxLength(257)
                        .HasColumnType("nvarchar(257)")
                        .HasColumnName("FK table");

                    b.Property<string>("PkColumn")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("PK column");

                    b.Property<string>("PkTable")
                        .IsRequired()
                        .HasMaxLength(257)
                        .HasColumnType("nvarchar(257)")
                        .HasColumnName("PK table");

                    b.Property<string>("UpdateRule")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("UPDATE_RULE");

                    b.ToView("FKRelationshipList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeAdjustmentBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FringeAdjustmentBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeEmployeeBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FringeEmployeeBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeInternBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OfWeeks")
                        .HasColumnType("int")
                        .HasColumnName("#OfWeeks");

                    b.Property<int?>("OfWeeksInNextYear")
                        .HasColumnType("int")
                        .HasColumnName("#OfWeeksInNextYear");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money")
                        .HasColumnName("Weekly Salary($)");

                    b.ToView("FringeInternBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeOpenPositionBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("AnticipatedStartingMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PositionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.Property<string>("Step")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("FringeOpenPositionBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeOvertimeBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("FringeOvertimeBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FringeSabbaticalBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OfMonthsOnSabbatical")
                        .HasColumnType("int")
                        .HasColumnName("#OfMonthsOnSabbatical");

                    b.Property<int?>("OfMonthsOnSabbaticalInNextYear")
                        .HasColumnType("int")
                        .HasColumnName("#OfMonthsOnSabbaticalInNextYear");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.ToView("FringeSabbaticalBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FsRowGroupingLrp", b =>
                {
                    b.Property<int?>("Accatnum")
                        .HasColumnType("int")
                        .HasColumnName("accatnum");

                    b.Property<string>("Companycode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("COMPANYCODE");

                    b.Property<string>("Department")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LongDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("long_description");

                    b.Property<string>("LookupValue")
                        .HasMaxLength(163)
                        .IsUnicode(false)
                        .HasColumnType("varchar(163)")
                        .HasColumnName("Lookup_value");

                    b.Property<string>("RowNoFrx")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Row_NO_FRX");

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("short_description");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("STATUS");

                    b.ToTable("FS_ROW_GROUPING_lrp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fund", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FundNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("fund");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Gl20000Temp", b =>
                {
                    b.Property<string>("Accatdsc")
                        .IsRequired()
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("ACCATDSC");

                    b.Property<string>("Actdescr")
                        .IsRequired()
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("actdescr");

                    b.Property<int>("Actindx")
                        .HasColumnType("int")
                        .HasColumnName("ACTINDX");

                    b.Property<string>("Actnumbr1")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_1");

                    b.Property<string>("Actnumbr10")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_10");

                    b.Property<string>("Actnumbr2")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_2");

                    b.Property<string>("Actnumbr3")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_3");

                    b.Property<string>("Actnumbr4")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_4");

                    b.Property<string>("Actnumbr5")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_5");

                    b.Property<string>("Actnumbr6")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_6");

                    b.Property<string>("Actnumbr7")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_7");

                    b.Property<string>("Actnumbr8")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_8");

                    b.Property<string>("Actnumbr9")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("actnumbr_9");

                    b.Property<string>("Actnumst")
                        .IsRequired()
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("actnumst");

                    b.Property<byte>("AdjustmentTransaction")
                        .HasColumnType("tinyint")
                        .HasColumnName("Adjustment_Transaction");

                    b.Property<DateTime>("Apprvldt")
                        .HasColumnType("datetime")
                        .HasColumnName("APPRVLDT");

                    b.Property<string>("Aprvluserid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("APRVLUSERID")
                        .IsFixedLength(true);

                    b.Property<int>("BackOutJe")
                        .HasColumnType("int")
                        .HasColumnName("Back_Out_JE");

                    b.Property<short>("BackOutJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Back_Out_JE_Year");

                    b.Property<int>("CorrectingJe")
                        .HasColumnType("int")
                        .HasColumnName("Correcting_JE");

                    b.Property<short>("CorrectingJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Correcting_JE_Year");

                    b.Property<string>("CorrespondingUnit")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Cpnyid")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CPNYID");

                    b.Property<decimal>("Crdtamnt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("CRDTAMNT");

                    b.Property<string>("Curncyid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CURNCYID")
                        .IsFixedLength(true);

                    b.Property<short>("Currnidx")
                        .HasColumnType("smallint")
                        .HasColumnName("CURRNIDX");

                    b.Property<decimal>("Debitamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("DEBITAMT");

                    b.Property<decimal>("Denxrate")
                        .HasColumnType("numeric(19,7)")
                        .HasColumnName("DENXRATE");

                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DexRowTs")
                        .HasColumnType("datetime")
                        .HasColumnName("DEX_ROW_TS");

                    b.Property<DateTime>("Docdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DOCDATE");

                    b.Property<string>("Dscriptn")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("DSCRIPTN")
                        .IsFixedLength(true);

                    b.Property<short>("DtaGlStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("DTA_GL_Status");

                    b.Property<decimal>("DtaIndex")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("DTA_Index");

                    b.Property<DateTime>("Exchdate")
                        .HasColumnType("datetime")
                        .HasColumnName("EXCHDATE");

                    b.Property<string>("Exgtblid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("EXGTBLID")
                        .IsFixedLength(true);

                    b.Property<byte>("Ictrx")
                        .HasColumnType("tinyint")
                        .HasColumnName("ICTRX");

                    b.Property<string>("IdField")
                        .HasMaxLength(98)
                        .IsUnicode(false)
                        .HasColumnType("varchar(98)")
                        .HasColumnName("ID_FIELD");

                    b.Property<int>("Jrnentry")
                        .HasColumnType("int")
                        .HasColumnName("JRNENTRY");

                    b.Property<string>("Lastuser")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("LASTUSER")
                        .IsFixedLength(true);

                    b.Property<short>("LedgerId")
                        .HasColumnType("smallint")
                        .HasColumnName("Ledger_ID");

                    b.Property<DateTime>("Lstdtedt")
                        .HasColumnType("datetime")
                        .HasColumnName("LSTDTEDT");

                    b.Property<short>("Mctrxstt")
                        .HasColumnType("smallint")
                        .HasColumnName("MCTRXSTT");

                    b.Property<decimal>("Noteindx")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("NOTEINDX");

                    b.Property<short>("Openyear")
                        .HasColumnType("smallint")
                        .HasColumnName("OPENYEAR");

                    b.Property<string>("Orcomid")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("ORCOMID")
                        .IsFixedLength(true);

                    b.Property<decimal>("Orcrdamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("ORCRDAMT");

                    b.Property<string>("Orctrnum")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ORCTRNUM")
                        .IsFixedLength(true);

                    b.Property<decimal>("Ordbtamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("ORDBTAMT");

                    b.Property<string>("Ordocnum")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ORDOCNUM")
                        .IsFixedLength(true);

                    b.Property<short>("Orgnatyp")
                        .HasColumnType("smallint")
                        .HasColumnName("ORGNATYP");

                    b.Property<string>("Orgntsrc")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("ORGNTSRC")
                        .IsFixedLength(true);

                    b.Property<short>("OrigDtaseries")
                        .HasColumnType("smallint")
                        .HasColumnName("OrigDTASeries");

                    b.Property<int>("OrigSeqNum")
                        .HasColumnType("int");

                    b.Property<int>("OriginalJe")
                        .HasColumnType("int")
                        .HasColumnName("Original_JE");

                    b.Property<decimal>("OriginalJeSeqNum")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("Original_JE_Seq_Num");

                    b.Property<short>("OriginalJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Original_JE_Year");

                    b.Property<int>("Originje")
                        .HasColumnType("int")
                        .HasColumnName("ORIGINJE");

                    b.Property<string>("Ormstrid")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("ORMSTRID")
                        .IsFixedLength(true);

                    b.Property<string>("Ormstrnm")
                        .IsRequired()
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("ORMSTRNM")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Orpstddt")
                        .HasColumnType("datetime")
                        .HasColumnName("ORPSTDDT");

                    b.Property<string>("Ortrxsrc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ORTRXSRC")
                        .IsFixedLength(true);

                    b.Property<short>("Ortrxtyp")
                        .HasColumnType("smallint")
                        .HasColumnName("ORTRXTYP");

                    b.Property<short>("Periodid")
                        .HasColumnType("smallint")
                        .HasColumnName("PERIODID");

                    b.Property<byte>("Polldtrx")
                        .HasColumnType("tinyint")
                        .HasColumnName("POLLDTRX");

                    b.Property<int>("Ppsgnmbr")
                        .HasColumnType("int")
                        .HasColumnName("PPSGNMBR");

                    b.Property<int>("Pstgnmbr")
                        .HasColumnType("int")
                        .HasColumnName("PSTGNMBR");

                    b.Property<short>("Qkofset")
                        .HasColumnType("smallint")
                        .HasColumnName("QKOFSET");

                    b.Property<string>("Ratetpid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("RATETPID")
                        .IsFixedLength(true);

                    b.Property<decimal>("Rctrxseq")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("RCTRXSEQ");

                    b.Property<string>("Refrence")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("REFRENCE")
                        .IsFixedLength(true);

                    b.Property<short>("Rtclcmtd")
                        .HasColumnType("smallint")
                        .HasColumnName("RTCLCMTD");

                    b.Property<int>("Seqnumbr")
                        .HasColumnType("int")
                        .HasColumnName("SEQNUMBR");

                    b.Property<short>("Series")
                        .HasColumnType("smallint")
                        .HasColumnName("SERIES");

                    b.Property<string>("Sourcdoc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("SOURCDOC")
                        .IsFixedLength(true);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Time1")
                        .HasColumnType("datetime")
                        .HasColumnName("TIME1");

                    b.Property<DateTime>("Trxdate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRXDATE");

                    b.Property<string>("Trxsorce")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("TRXSORCE")
                        .IsFixedLength(true);

                    b.Property<string>("Uswhpstd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("USWHPSTD")
                        .IsFixedLength(true);

                    b.Property<string>("Vendname")
                        .IsRequired()
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("VENDNAME");

                    b.Property<string>("Vndclsid")
                        .IsRequired()
                        .HasMaxLength(85)
                        .IsUnicode(false)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("vndclsid");

                    b.Property<byte>("Voided")
                        .HasColumnType("tinyint")
                        .HasColumnName("VOIDED");

                    b.Property<decimal>("Xchgrate")
                        .HasColumnType("numeric(19,7)")
                        .HasColumnName("XCHGRATE");

                    b.ToTable("gl20000_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Gl30000Temp", b =>
                {
                    b.Property<string>("Accatdsc")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("ACCATDSC");

                    b.Property<string>("Actdescr")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("actdescr");

                    b.Property<int>("Actindx")
                        .HasColumnType("int")
                        .HasColumnName("ACTINDX");

                    b.Property<string>("Actnumbr1")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("actnumbr_1");

                    b.Property<string>("Actnumbr2")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("actnumbr_2");

                    b.Property<string>("Actnumbr3")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("actnumbr_3");

                    b.Property<string>("Actnumbr4")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("actnumbr_4");

                    b.Property<string>("Actnumbr5")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("actnumbr_5");

                    b.Property<string>("Actnumst")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("actnumst");

                    b.Property<byte>("AdjustmentTransaction")
                        .HasColumnType("tinyint")
                        .HasColumnName("Adjustment_Transaction");

                    b.Property<DateTime>("Apprvldt")
                        .HasColumnType("datetime")
                        .HasColumnName("APPRVLDT");

                    b.Property<string>("Aprvluserid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("APRVLUSERID")
                        .IsFixedLength(true);

                    b.Property<int>("BackOutJe")
                        .HasColumnType("int")
                        .HasColumnName("Back_Out_JE");

                    b.Property<short>("BackOutJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Back_Out_JE_Year");

                    b.Property<int>("CorrectingJe")
                        .HasColumnType("int")
                        .HasColumnName("Correcting_JE");

                    b.Property<short>("CorrectingJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Correcting_JE_Year");

                    b.Property<string>("CorrespondingUnit")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Cpnyid")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CPNYID");

                    b.Property<decimal>("Crdtamnt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("CRDTAMNT");

                    b.Property<string>("Curncyid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("CURNCYID")
                        .IsFixedLength(true);

                    b.Property<short>("Currnidx")
                        .HasColumnType("smallint")
                        .HasColumnName("CURRNIDX");

                    b.Property<decimal>("Debitamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("DEBITAMT");

                    b.Property<decimal>("Denxrate")
                        .HasColumnType("numeric(19,7)")
                        .HasColumnName("DENXRATE");

                    b.Property<int>("DexRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DEX_ROW_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DexRowTs")
                        .HasColumnType("datetime")
                        .HasColumnName("DEX_ROW_TS");

                    b.Property<DateTime>("Docdate")
                        .HasColumnType("datetime")
                        .HasColumnName("DOCDATE");

                    b.Property<string>("Dscriptn")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("DSCRIPTN")
                        .IsFixedLength(true);

                    b.Property<short>("DtaGlStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("DTA_GL_Status");

                    b.Property<decimal>("DtaIndex")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("DTA_Index");

                    b.Property<DateTime>("Exchdate")
                        .HasColumnType("datetime")
                        .HasColumnName("EXCHDATE");

                    b.Property<string>("Exgtblid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("EXGTBLID")
                        .IsFixedLength(true);

                    b.Property<short>("Hstyear")
                        .HasColumnType("smallint")
                        .HasColumnName("HSTYEAR");

                    b.Property<byte>("Ictrx")
                        .HasColumnType("tinyint")
                        .HasColumnName("ICTRX");

                    b.Property<string>("IdField")
                        .HasMaxLength(98)
                        .IsUnicode(false)
                        .HasColumnType("varchar(98)")
                        .HasColumnName("ID_FIELD");

                    b.Property<int>("Jrnentry")
                        .HasColumnType("int")
                        .HasColumnName("JRNENTRY");

                    b.Property<string>("Lastuser")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("LASTUSER")
                        .IsFixedLength(true);

                    b.Property<short>("LedgerId")
                        .HasColumnType("smallint")
                        .HasColumnName("Ledger_ID");

                    b.Property<DateTime>("Lstdtedt")
                        .HasColumnType("datetime")
                        .HasColumnName("LSTDTEDT");

                    b.Property<short>("Mctrxstt")
                        .HasColumnType("smallint")
                        .HasColumnName("MCTRXSTT");

                    b.Property<decimal>("Noteindx")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("NOTEINDX");

                    b.Property<string>("Orcomid")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("ORCOMID")
                        .IsFixedLength(true);

                    b.Property<decimal>("Orcrdamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("ORCRDAMT");

                    b.Property<string>("Orctrnum")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ORCTRNUM")
                        .IsFixedLength(true);

                    b.Property<decimal>("Ordbtamt")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("ORDBTAMT");

                    b.Property<string>("Ordocnum")
                        .IsRequired()
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("char(21)")
                        .HasColumnName("ORDOCNUM")
                        .IsFixedLength(true);

                    b.Property<short>("Orgnatyp")
                        .HasColumnType("smallint")
                        .HasColumnName("ORGNATYP");

                    b.Property<string>("Orgntsrc")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("ORGNTSRC")
                        .IsFixedLength(true);

                    b.Property<short>("OrigDtaseries")
                        .HasColumnType("smallint")
                        .HasColumnName("OrigDTASeries");

                    b.Property<int>("OrigSeqNum")
                        .HasColumnType("int");

                    b.Property<int>("OriginalJe")
                        .HasColumnType("int")
                        .HasColumnName("Original_JE");

                    b.Property<decimal>("OriginalJeSeqNum")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("Original_JE_Seq_Num");

                    b.Property<short>("OriginalJeYear")
                        .HasColumnType("smallint")
                        .HasColumnName("Original_JE_Year");

                    b.Property<int>("Originje")
                        .HasColumnType("int")
                        .HasColumnName("ORIGINJE");

                    b.Property<string>("Ormstrid")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("ORMSTRID")
                        .IsFixedLength(true);

                    b.Property<string>("Ormstrnm")
                        .IsRequired()
                        .HasMaxLength(65)
                        .IsUnicode(false)
                        .HasColumnType("char(65)")
                        .HasColumnName("ORMSTRNM")
                        .IsFixedLength(true);

                    b.Property<DateTime>("Orpstddt")
                        .HasColumnType("datetime")
                        .HasColumnName("ORPSTDDT");

                    b.Property<string>("Ortrxsrc")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ORTRXSRC")
                        .IsFixedLength(true);

                    b.Property<short>("Ortrxtyp")
                        .HasColumnType("smallint")
                        .HasColumnName("ORTRXTYP");

                    b.Property<short>("Periodid")
                        .HasColumnType("smallint")
                        .HasColumnName("PERIODID");

                    b.Property<byte>("Polldtrx")
                        .HasColumnType("tinyint")
                        .HasColumnName("POLLDTRX");

                    b.Property<int>("Ppsgnmbr")
                        .HasColumnType("int")
                        .HasColumnName("PPSGNMBR");

                    b.Property<int>("Pstgnmbr")
                        .HasColumnType("int")
                        .HasColumnName("PSTGNMBR");

                    b.Property<short>("Qkofset")
                        .HasColumnType("smallint")
                        .HasColumnName("QKOFSET");

                    b.Property<string>("Ratetpid")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("RATETPID")
                        .IsFixedLength(true);

                    b.Property<decimal>("Rctrxseq")
                        .HasColumnType("numeric(19,5)")
                        .HasColumnName("RCTRXSEQ");

                    b.Property<string>("Refrence")
                        .IsRequired()
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("char(31)")
                        .HasColumnName("REFRENCE")
                        .IsFixedLength(true);

                    b.Property<short>("Rtclcmtd")
                        .HasColumnType("smallint")
                        .HasColumnName("RTCLCMTD");

                    b.Property<int>("Seqnumbr")
                        .HasColumnType("int")
                        .HasColumnName("SEQNUMBR");

                    b.Property<short>("Series")
                        .HasColumnType("smallint")
                        .HasColumnName("SERIES");

                    b.Property<string>("Sourcdoc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("SOURCDOC")
                        .IsFixedLength(true);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Time1")
                        .HasColumnType("datetime")
                        .HasColumnName("TIME1");

                    b.Property<DateTime>("Trxdate")
                        .HasColumnType("datetime")
                        .HasColumnName("TRXDATE");

                    b.Property<string>("Trxsorce")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("TRXSORCE")
                        .IsFixedLength(true);

                    b.Property<string>("Uswhpstd")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("USWHPSTD")
                        .IsFixedLength(true);

                    b.Property<string>("Vendname")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("VENDNAME");

                    b.Property<string>("Vndclsid")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("vndclsid");

                    b.Property<byte>("Voided")
                        .HasColumnType("tinyint")
                        .HasColumnName("VOIDED");

                    b.Property<decimal>("Xchgrate")
                        .HasColumnType("numeric(19,7)")
                        .HasColumnName("XCHGRATE");

                    b.ToTable("gl30000_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GlobalSecurity", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPasswordLowercase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsPasswordNumeric")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsPasswordUppercase")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<int>("PasswordLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((8))");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<int>("UsernameLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((8))");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.HasKey("ObjectUid");

                    b.ToTable("GlobalSecurity");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GlobalSecurityGrid", b =>
                {
                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordLowercase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordNumeric")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordUppercase")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<int>("PasswordLength")
                        .HasColumnType("int");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<int>("UsernameLength")
                        .HasColumnType("int");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.ToView("GlobalSecurityGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionLine", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("CodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CodeID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("GlyearCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GLYearCodeID");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemizedAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("NonItemizedAmount")
                        .HasColumnType("money");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PurposeDefault")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Purpose_Default");

                    b.Property<string>("PurposePriorYear")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Purpose_Prior_Year");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomOrBox")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("YearSetupId");

                    b.ToTable("GLTransactionLine");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionLineSummaryView", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ID");

                    b.Property<decimal?>("ItemizedAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("NonItemizedAmount")
                        .HasColumnType("money");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("year");

                    b.ToView("GLTransactionLine_summary_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionSummary", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CheckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CodeID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cpnyid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("GlyearCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GLYearCodeID");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemizedAmount")
                        .HasColumnType("money");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("NonItemizedAmount")
                        .HasColumnType("money");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomOrBox")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Year")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.ToTable("GLTransactionSummary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionlineAddView", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.ToView("gltransactionline_add_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionlineAddViewMax", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("gltransactionline_add_view_max");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionlineAddViewMax2", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.ToView("gltransactionline_add_view_max_2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionsummaryAddView", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.ToView("gltransactionsummary_add_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Gridlayout", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Creator")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<string>("Gridid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gridid");

                    b.Property<bool?>("Ispublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("ispublic")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Layout")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("layout");

                    b.Property<string>("Layoutname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("layoutname");

                    b.Property<string>("Userid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("gridlayouts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Gridlayouts1", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gridid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Ispublic")
                        .HasColumnType("bit");

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Layoutname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gridlayouts1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.HelpCard", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("HelpCard");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.HelpCardGrid", b =>
                {
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("HelpCardGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.HelpCardList", b =>
                {
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("HelpCardId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HelpCardID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToView("HelpCardList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Installation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServerDetail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Installation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.IzendaAdHocReport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Xml")
                        .HasColumnType("ntext")
                        .HasColumnName("XML");

                    b.HasKey("ObjectUid");

                    b.ToTable("IzendaAdHocReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Language", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LegalServiceBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("LegalServiceBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LoadError", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<int?>("ErrorCodeId")
                        .HasColumnType("int")
                        .HasColumnName("ErrorCodeID");

                    b.Property<int?>("ErrorColumnId")
                        .HasColumnType("int")
                        .HasColumnName("ErrorColumnID");

                    b.Property<DateTime?>("ErrorDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ErrorDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ErrorDetails")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ErrorPackage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ErrorTask")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LoadErrors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Localisation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Localisation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LocalisationGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LocalisationGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpcode", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcodeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPCodeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcodeLrpreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCodeID");

                    b.Property<Guid>("LrpreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPReportID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcodeId");

                    b.HasIndex("LrpreportId");

                    b.ToTable("LRPCode_LRPReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcodeLrpreportGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCodeID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Report")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPCode_LRPReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpcompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("((1))");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentLrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_LRPCompanyID");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex(new[] { "ParentLrpcompanyId" }, "iParent_LRPCompanyID_LRPCompany");

                    b.ToTable("LRPCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcompanyGrid", b =>
                {
                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParentCompany")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcostCenter", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lrplm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPLM2DisbursementCodeID");

                    b.Property<Guid?>("Lrplm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPLM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("Lrplm2disbursementCodeId");

                    b.HasIndex("Lrplm2receiptCodeId");

                    b.ToTable("LRPCostCenter");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcostCenterGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Lm2disbursementCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LM2DisbursementCode");

                    b.Property<string>("Lm2receiptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LM2ReceiptCode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPCostCenterGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpdepartment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepartmentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPDepartment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpdepartmentGrid", b =>
                {
                    b.Property<string>("DepartmentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPDepartmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpdocumentType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPDocumentType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpdocumentTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPDocumentTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpemployee", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("GrantWorker")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("LrpcostCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCostCenterID");

                    b.Property<Guid>("LrpdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPDepartmentID");

                    b.Property<Guid?>("LrpemployeeStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPEmployeeStatusID");

                    b.Property<Guid?>("LrpemployeeTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPEmployeeTypeID");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<DateTime?>("TermDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcostCenterId");

                    b.HasIndex("LrpdepartmentId");

                    b.HasIndex("LrpemployeeStatusId");

                    b.HasIndex("LrpemployeeTypeId");

                    b.ToTable("LRPEmployee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeGrid", b =>
                {
                    b.Property<string>("CostCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("GrantWorker")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime>("TermDate")
                        .HasColumnType("datetime");

                    b.ToView("LRPEmployeeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPEmployeeStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPEmployeeStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPEmployeeType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPEmployeeTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpfinancialStatementGroup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LrpcostCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCostCenterID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcostCenterId");

                    b.ToTable("LRPFinancialStatementGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpfinancialStatementGroupGrid", b =>
                {
                    b.Property<string>("CostCenter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPFinancialStatementGroupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranactionProject", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("lrpgltranaction_project");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpgltransaction", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<double?>("CalculatedAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("([salestaxamount]*[salestaxrate])", false);

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcompanyId");

                    b.HasIndex("SalesTaxYesNoId");

                    b.ToTable("LRPGLTransaction");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpgltransaction30Zero", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("CHeckno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("cHECKNO");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("cpnyid");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("lrpgltransaction_30_zero");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionA0001", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.ToView("lrpgltransaction_a0001");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionBalance", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.ToView("lrpgltransaction_balance");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostCenter")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.ToView("LRPGLTransactionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedDrillDownGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("Bdgdepartmentid2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgdepartmentid2");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("Lrpcompanyid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("lrpcompanyid");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToView("LRPGLTransactionLimitedDrillDownGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostCenter")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("LRPGLTransactionLimitedGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedGridOriginal", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.ToView("LRPGLTransactionLimitedGrid_original");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedGridpm", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CostCenter")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("LRPGLTransactionLimitedGridpm");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedGridv2", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid?>("Bdgdepartmentid2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("bdgdepartmentid2");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<string>("Lm2empNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2EmpNo");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToView("LRPGLTransactionLimitedGridv2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedHistory", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("LRPGltransactionLimited_History");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedHistoryGrid", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("LRPGLTransactionLimited_HistoryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedLinqGrid", b =>
                {
                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vendor Name1");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(176)
                        .HasColumnType("nvarchar(176)");

                    b.ToView("LRPGLTransactionLimitedLinqGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLimitedpm", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<string>("Lm2empNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2EmpNo");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.ToView("LRPGLTransactionLimitedpm");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLineGreaterThan5Kgrid", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("LRPGLTransactionLineGreaterThan5KGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLineLessThan5Kgrid", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("LRPGLTransactionLineLessThan5KGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLinqGrid", b =>
                {
                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Vendor Name1");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(176)
                        .HasColumnType("nvarchar(176)");

                    b.ToView("LRPGLTransactionLinqGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLinqGrid2", b =>
                {
                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(176)
                        .HasColumnType("nvarchar(176)");

                    b.ToView("LRPGLTransactionLinqGrid2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLm2Sum", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("final_id");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("lrpgltransaction_lm2_sum");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionLm2SumCheckno", b =>
                {
                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("checkno");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("final_id");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.ToView("lrpgltransaction_lm2_sum_checkno");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionSummaryGreaterThan5Kgrid", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("LRPGLTransactionSummaryGreaterThan5KGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionSummaryGrid", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("LRPGLTransactionSummaryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionTax", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.Property<string>("Yesnoname")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("yesnoname");

                    b.ToView("LRPGLtransaction_tax");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionUpdateGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<string>("Lm2empNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2EmpNo");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SalesTax")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("_99Clearout")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("99 Clearout");

                    b.ToView("LRPGLTransactionUpdateGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionUpdateLinqGrid", b =>
                {
                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsline")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FSLine");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SalesTax")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(176)
                        .HasColumnType("nvarchar(176)");

                    b.Property<string>("_99Clearout")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("99 Clearout");

                    b.ToView("LRPGLTransactionUpdateLinqGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionV2grid", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltransaction_v2grid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionView", b =>
                {
                    b.Property<int>("Test")
                        .HasColumnType("int")
                        .HasColumnName("test");

                    b.ToView("lrpgltransaction_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionsGridDum", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AcctDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("AcctNoFull")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("AuditNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("checkdate");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("checkno");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dept")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("DocNumber")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Employee")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FiscalYearEnded")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Fsdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FSDepartment");

                    b.Property<string>("Fund")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("JeNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JE_No");

                    b.Property<string>("LineDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Lm2description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2Description");

                    b.Property<Guid?>("Lrpcompanyid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCOMPANYID");

                    b.Property<string>("Main")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<string>("Project")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Recordid")
                        .HasColumnType("int")
                        .HasColumnName("recordid");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubSubSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.ToView("LRPGLTransactionsGRID_DA");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltransactionsLimitedGridDum", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<string>("Auditnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("AUDITNBR");

                    b.Property<string>("Batnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("BATNBR");

                    b.Property<string>("BdgaccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup");

                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Property<string>("Bdgdepartment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGDepartment");

                    b.Property<Guid?>("BdgdepartmentId2")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID2");

                    b.Property<double?>("CalculatedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Checkdate")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE");

                    b.Property<DateTime?>("Checkdate2")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE2");

                    b.Property<DateTime?>("Checkdate3")
                        .HasColumnType("datetime")
                        .HasColumnName("CHECKDATE3");

                    b.Property<string>("Checkno")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO");

                    b.Property<string>("Checkno2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO2");

                    b.Property<string>("Checkno3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CHECKNO3");

                    b.Property<string>("Classid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CLASSID");

                    b.Property<string>("Cpnyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CPNYID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CrtdDatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("CRTD_DATETIME");

                    b.Property<string>("CrtdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CRTD_USER");

                    b.Property<string>("CssLink")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link")
                        .IsFixedLength(true);

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(255)
                        .HasColumnType("nchar(255)")
                        .HasColumnName("css_link_lines")
                        .IsFixedLength(true);

                    b.Property<string>("Curyid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("CURYID");

                    b.Property<double?>("Curyrate")
                        .HasColumnType("float")
                        .HasColumnName("CURYRATE");

                    b.Property<string>("Descr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DESCR");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Docnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("DOCNBR");

                    b.Property<string>("EmpFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMP_FISCYR_ACCT");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("EMPLOYEE_CODE");

                    b.Property<string>("FinalId")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FINAL_ID");

                    b.Property<string>("Fiscyr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("FISCYR");

                    b.Property<string>("FiscyrAcct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FISCYR_ACCT");

                    b.Property<string>("GrantNo")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<short?>("IcDistribution")
                        .HasColumnType("smallint")
                        .HasColumnName("IC_DISTRIBUTION");

                    b.Property<string>("Id")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ID");

                    b.Property<string>("IdField")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Jrnltype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("JRNLTYPE");

                    b.Property<string>("Ledgerid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LEDGERID");

                    b.Property<int?>("Lineid")
                        .HasColumnType("int")
                        .HasColumnName("LINEID");

                    b.Property<int?>("Linenbr")
                        .HasColumnType("int")
                        .HasColumnName("LINENBR");

                    b.Property<string>("Lineref")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LINEREF");

                    b.Property<string>("Lm2Code")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2_CODE");

                    b.Property<string>("Lm2Description")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LM2 DESCRIPTION");

                    b.Property<string>("Lm2Fiscyr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR");

                    b.Property<string>("Lm2FiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_ACCT");

                    b.Property<string>("Lm2FiscyrEmpAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LM2_FISCYR_EMP_ACCT");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<DateTime?>("LupdDatetime")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("LUPD_DATETIME");

                    b.Property<string>("LupdUser")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("LUPD_USER");

                    b.Property<string>("Masterid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MASTERID");

                    b.Property<string>("Module")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MODULE");

                    b.Property<string>("Multiplechecks1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_1");

                    b.Property<string>("Multiplechecks2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("MULTIPLECHECKS_2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Noteid")
                        .HasColumnType("int")
                        .HasColumnName("NOTEID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Perent")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERENT");

                    b.Property<string>("Perpost")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("PERPOST");

                    b.Property<string>("Posted")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("POSTED");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("REFNBR");

                    b.Property<decimal?>("SalesTaxAmount")
                        .HasColumnType("money");

                    b.Property<double?>("SalesTaxRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesTaxYesNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesTax_YesNoID");

                    b.Property<string>("Seg1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG1");

                    b.Property<string>("Seg10")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG10");

                    b.Property<string>("Seg2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG2");

                    b.Property<string>("Seg3")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG3");

                    b.Property<string>("Seg4")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG4");

                    b.Property<string>("Seg5")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG5");

                    b.Property<string>("Seg6")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG6");

                    b.Property<string>("Seg7")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG7");

                    b.Property<string>("Seg8")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG8");

                    b.Property<string>("Seg9")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SEG9");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sub")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("SUB");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("TSTAMP");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdefined1")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_1");

                    b.Property<string>("Userdefined2")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("USERDEFINED_2");

                    b.Property<string>("Vclassid")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("VCLASSID");

                    b.Property<string>("VendorFiscyrAcct")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("VENDOR_FISCYR_ACCT");

                    b.Property<Guid?>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.ToView("LRPGLTransactionsLimitedGRID_DA");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumBdgaccountGroupSubGroupSubGroupIdView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_BDGAccountGroup_SubGroup_SubGroupID_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumBdgaccountGroupSubGroupSubGroupSubGroupidView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_BDGAccountGroup_SubGroup_SubGroup_SubGroupid_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumBdgaccountGroupSubGroupidView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_BDGAccountGroup_SubGroupid_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumBdgbudgetinfoDetailView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("TEST");

                    b.ToView("lrpgltranstion_budgetsum_BDGBUDGETINFO_DETAIL_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumDetailView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_detail_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumView", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_view");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpgltranstionBudgetsumViewStep2", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToView("lrpgltranstion_budgetsum_view_step2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpglyearCode", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemizedAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("LrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCodeID");

                    b.Property<Guid?>("LrpreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPReportID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("NonItemizedAmount")
                        .HasColumnType("money");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcodeId");

                    b.HasIndex("LrpreportId");

                    b.HasIndex("YearSetupId");

                    b.ToTable("LRPGLYearCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpglyearCodeGrid", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("ItemizedAmount")
                        .HasColumnType("money");

                    b.Property<decimal>("NonItemizedAmount")
                        .HasColumnType("money");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Report")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<string>("YearSetup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPGLYearCodeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrplineSummary", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("DexRowId")
                        .HasColumnType("int")
                        .HasColumnName("dex_row_id");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employee_id");

                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("IdField")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ID_FIELD");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ItemizedAmount")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("LrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCodeID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NonItemized")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomOrBox")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room-or-box");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcodeId");

                    b.ToTable("LRPLineSummary");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrplm2disbursementCode", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPLM2DisbursementCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrplm2receiptCode", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPLM2ReceiptCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrplm2status", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPLM2Status");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpproject", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("GrantNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InactiveComment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LrpcostCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCostCenterID");

                    b.Property<Guid?>("Lrplm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPLM2DisbursementCodeID");

                    b.Property<Guid?>("Lrplm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPLM2ReceiptCodeID");

                    b.Property<Guid?>("LrpprojectTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPProjectTypeID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ScheduledEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcostCenterId");

                    b.HasIndex("Lrplm2disbursementCodeId");

                    b.HasIndex("Lrplm2receiptCodeId");

                    b.HasIndex("LrpprojectTypeId");

                    b.ToTable("LRPProject");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpprojectType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("ProjectTypeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPProjectType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpreportGrid", b =>
                {
                    b.Property<string>("Dbname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DBName");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportFile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99BoxNo", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasComputedColumnSql("(([Ten99BoxText]+'-')+coalesce([Description],''))", false);

                    b.Property<decimal?>("Dolramnt")
                        .HasColumnType("money")
                        .HasColumnName("DOLRAMNT");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<int?>("Ten99BoxNo")
                        .HasColumnType("int");

                    b.Property<string>("Ten99BoxText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("Lrpten99TaxTypeId");

                    b.ToTable("LRPTen99BoxNo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99BoxNoGrid", b =>
                {
                    b.Property<decimal?>("Dolramnt")
                        .HasColumnType("money")
                        .HasColumnName("DOLRAMNT($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("_1099BoxNo")
                        .HasColumnType("int")
                        .HasColumnName("1099 Box No");

                    b.Property<string>("_1099BoxText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099 Box Text");

                    b.Property<string>("_1099TaxType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099 Tax Type");

                    b.ToView("LRPTen99BoxNoGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99TaxType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DescriptionBp")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Description_BP");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ValueGp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Value_GP");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPTen99TaxType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99TaxTypeGrid", b =>
                {
                    b.Property<string>("DescriptionBp")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Description_BP");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ValueGp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Value_GP");

                    b.ToView("LRPTen99TaxTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrptimeEntry", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LrpDateEnd")
                        .HasColumnType("datetime")
                        .HasColumnName("LRP_DATE_END");

                    b.Property<DateTime?>("LrpDateStart")
                        .HasColumnType("datetime")
                        .HasColumnName("LRP_DATE_START");

                    b.Property<Guid?>("LrpcodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCodeID");

                    b.Property<Guid?>("LrpemployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPEmployeeID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("numeric(19,5)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcodeId");

                    b.HasIndex("LrpemployeeId");

                    b.ToTable("LRPTimeEntry");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrptimeEntryGrid", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("numeric(19,5)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.ToView("LRPTimeEntryGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpvendor", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressII");

                    b.Property<string>("AddressIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .HasComputedColumnSql("(([VendorNo]+'-')+[Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateGpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdateGPDate");

                    b.Property<string>("LastUpdateGpuserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastUpdateGPUserID");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<Guid?>("LrpdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPDepartmentID");

                    b.Property<Guid?>("LrpvendorClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorClassID");

                    b.Property<Guid?>("LrpvendorMasterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorMasterID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdef1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef1");

                    b.Property<string>("Userdef2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef2");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("LrpvendorClassId");

                    b.HasIndex(new[] { "LrpcompanyId" }, "iLRPCompanyID_LRPVendor");

                    b.HasIndex(new[] { "LrpdepartmentId" }, "iLRPDepartmentID_LRPVendor");

                    b.HasIndex(new[] { "LrpvendorMasterId" }, "iLRPVendorMasterID_LRPVendor");

                    b.ToTable("LRPVendor");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorClass", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([vendorclassno]+[Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VendorClassNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPVendorClass");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorClassGrid", b =>
                {
                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("VendorClassNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendorClassGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorCreate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressII");

                    b.Property<string>("AddressIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .HasComputedColumnSql("(([VendorNo]+'-')+[Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateGpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdateGPDate");

                    b.Property<string>("LastUpdateGpuserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastUpdateGPUserID");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<Guid?>("LrpvendorClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorClassID");

                    b.Property<Guid?>("LrpvendorMasterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorMasterID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdef1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef1");

                    b.Property<string>("Userdef2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef2");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid")
                        .HasName("PK_LRPVendorcreate");

                    b.ToTable("LRPVendor_create");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorGrid", b =>
                {
                    b.Property<string>("AddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PayrollNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PayrollNO");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorClass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorMaster")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendorGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorMaster", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPVendorMaster");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorMasterGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPVendorMasterGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorUpdate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressII");

                    b.Property<string>("AddressIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressIII");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(151)
                        .HasColumnType("nvarchar(151)")
                        .HasComputedColumnSql("(([VendorNo]+'-')+[Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateGpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastUpdateGPDate");

                    b.Property<string>("LastUpdateGpuserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastUpdateGPUserID");

                    b.Property<Guid?>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<Guid?>("LrpvendorClassId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorClassID");

                    b.Property<Guid?>("LrpvendorMasterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorMasterID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Userdef1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef1");

                    b.Property<string>("Userdef2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userdef2");

                    b.Property<string>("VendorNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid")
                        .HasName("PK_LRPVendorcreateupdate");

                    b.ToTable("LRPVendor_update");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucher", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(103)
                        .HasColumnType("nvarchar(103)")
                        .HasComputedColumnSql("(([VoucherNo]+' - ')+[dbo].[GetDocumentTypeName]([LRPDocumentTypeID]))", false);

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LrpdocumentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPDocumentTypeID");

                    b.Property<Guid?>("Lrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoID");

                    b.Property<Guid?>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<Guid?>("LrpvoucherStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVoucherStatusID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PSTGDate");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpdocumentTypeId");

                    b.HasIndex("Lrpten99BoxNoId");

                    b.HasIndex("Lrpten99TaxTypeId");

                    b.HasIndex("LrpvendorId");

                    b.HasIndex("LrpvoucherStatusId");

                    b.ToTable("LRPVendor_Voucher");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherAllGrid", b =>
                {
                    b.Property<string>("CheckNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Check No");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNoInvoice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Document No(Invoice)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Document Type");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<DateTime?>("InvoicePaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Invoice/Payment Date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LrpdocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPDocumentType");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("_1099Amount")
                        .HasColumnType("money")
                        .HasColumnName("1099 AMOUNT");

                    b.ToView("LRPVendor_VoucherAllGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherApplicability", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("money");

                    b.Property<string>("AppliedToDocumentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("money")
                        .HasComputedColumnSql("([AppliedAmount])", false);

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LrpdocumentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPDocumentTypeID");

                    b.Property<Guid>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpdocumentTypeId");

                    b.HasIndex("LrpvendorVoucherId");

                    b.ToTable("LRPVendor_Voucher_Applicability");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherApplicabilityGrid", b =>
                {
                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("money");

                    b.Property<string>("AppliedToDocumentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("RelatedVendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RelatedVendor_VoucherID");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_Voucher_ApplicabilityGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherChangeLog", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InvoiceDateOld")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lrpten99BoxNoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoID");

                    b.Property<Guid?>("Lrpten99BoxNoIdold")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99BoxNoIDOld");

                    b.Property<Guid?>("Lrpten99TaxTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeID");

                    b.Property<Guid?>("Lrpten99TaxTypeIdold")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPTen99TaxTypeIDOld");

                    b.Property<Guid?>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<decimal?>("Ten99amntold")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNTOld");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescriptionOld")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("Lrpten99BoxNoId");

                    b.HasIndex("Lrpten99TaxTypeId");

                    b.HasIndex("LrpvendorVoucherId");

                    b.ToTable("LRPVendor_Voucher_ChangeLog");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherChangeLogGrid", b =>
                {
                    b.Property<string>("ChangedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InvoiceDateOld")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID.");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescriptionOld")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("_1099Amount")
                        .HasColumnType("money")
                        .HasColumnName("1099 Amount");

                    b.Property<decimal?>("_1099AmountOld")
                        .HasColumnType("money")
                        .HasColumnName("1099 Amount Old");

                    b.Property<string>("_1099BoxNo")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("1099 Box No");

                    b.Property<string>("_1099BoxNoOld")
                        .HasMaxLength(2051)
                        .HasColumnType("nvarchar(2051)")
                        .HasColumnName("1099 Box No Old");

                    b.Property<string>("_1099TaxType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099 Tax Type");

                    b.Property<string>("_1099TaxTypeOld")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("1099 Tax Type Old");

                    b.ToView("LRPVendor_Voucher_ChangeLogGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherCreditGrid", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LrpdocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPDocumentType");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_VoucherCreditGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherDistribution", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("money");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpvendorVoucherId");

                    b.ToTable("LRPVendor_Voucher_Distribution");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherDistribution10992year", b =>
                {
                    b.Property<string>("AccountDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("money");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToView("LRPVendor_voucher_distribution_1099_2years");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherDistributionGrid", b =>
                {
                    b.Property<string>("AccountDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("money");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("money");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpvendorVoucherId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendor_VoucherID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPVendor_Voucher_DistributionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherGrid", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("datetime")
                        .HasColumnName("PSTGDate");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("money")
                        .HasColumnName("TEN99AMNT");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_VoucherGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherInvoiceGrid", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Invoice No");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LrpdocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPDocumentType");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_VoucherInvoiceGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherOtherGrid", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LrpdocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPDocumentType");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_VoucherOtherGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherPaymentGrid", b =>
                {
                    b.Property<decimal?>("CheckAmount")
                        .HasColumnType("money")
                        .HasColumnName("Check Amount");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Check Date");

                    b.Property<string>("CheckNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Check No");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("GlpostingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("GLPostingDate");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("datetime")
                        .HasColumnName("IDDate");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LrpdocumentType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPDocumentType");

                    b.Property<Guid>("LrpvendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPVendorID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("LRPVendor_VoucherPaymentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherTempDuplicate", b =>
                {
                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.ToTable("LRPVendor_Voucher_temp_duplicate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvoucherStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("LRPVoucherStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvoucherStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("LRPVoucherStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Main", b =>
                {
                    b.Property<string>("AccountCategory")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_Category");

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_group");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayValue")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Display_value");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("MainNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("_1099Flag")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("1099_flag")
                        .IsFixedLength(true);

                    b.ToTable("Main");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MainLrp", b =>
                {
                    b.Property<string>("AccountCategory")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_Category");

                    b.Property<string>("AccountGroup")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Account_group");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayValue")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Display_value");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("MainNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("_1099Flag")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("1099_flag")
                        .IsFixedLength(true);

                    b.ToTable("main_lrp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MeetingBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountSubGroup");

                    b.Property<string>("BdgaccountSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountSubGroupSubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MeetingStartDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals($)");

                    b.ToView("MeetingBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MemberExpenseBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("MemberExpenseBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MembershipBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("MembershipBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Menu", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeparator")
                        .HasColumnType("bit");

                    b.Property<string>("MenuIconLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MenuLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_MenuID");

                    b.Property<Guid>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PortalID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ShowToAll")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentMenuId");

                    b.HasIndex("PortalId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MenuGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeparator")
                        .HasColumnType("bit");

                    b.Property<string>("MenuIconLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MenuLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Parent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Portal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowToAll")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.ToView("MenuGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MenuParameterType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MenuID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid>("ParameterTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParameterTypeID");

                    b.Property<string>("ParameterValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("MenuId");

                    b.HasIndex("ParameterTypeId");

                    b.ToTable("Menu_ParameterType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MenuParameterTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MenuID");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ParameterType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParameterValue")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToView("Menu_ParameterTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MenuPortalGrid", b =>
                {
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Portal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("MenuPortalGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MiscellaneousBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("MiscellaneousBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MissingMaskingDetailGrid", b =>
                {
                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<Guid>("BdgreportGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroupID");

                    b.Property<Guid>("BdgreportGroupMissingMaskingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportGroup_MissingMaskingID");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("Trandate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("TRANDATE");

                    b.Property<string>("Trandesc")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANDESC");

                    b.Property<string>("Trantype")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("TRANTYPE");

                    b.ToView("MissingMaskingDetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MissingMaskingGrid", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACCT");

                    b.Property<Guid?>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("MissingMaskingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Module", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid?>("HelpCardId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HelpCardID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimaryEntity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("HelpCardId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ModuleGrid", b =>
                {
                    b.Property<string>("HelpCard")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimaryEntity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("ModuleGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Month", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<int?>("EffectiveMonths")
                        .HasColumnType("int");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MonthGrid", b =>
                {
                    b.Property<int?>("EffectiveMonths")
                        .HasColumnType("int");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("MonthGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationTemplate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Bcc")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("BCC");

                    b.Property<string>("Cc")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("CC");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("NotificaitonTemplateViewId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NotificaitonTemplateViewID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Subject")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TestMode")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("NotificationTemplate");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationTemplateGrid", b =>
                {
                    b.Property<string>("Bcc")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("BCC");

                    b.Property<string>("Cc")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("CC");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TestMode")
                        .HasColumnType("bit");

                    b.ToView("NotificationTemplateGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationTemplateView", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ViewName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.ToTable("NotificationTemplateView");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationTemplateViewGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ViewName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("NotificationTemplateViewGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("NotificationType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("NotificationTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.OtherBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroupSubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals($)");

                    b.ToView("OtherBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Page", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ColumnToDisplay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([PageHeading])", false);

                    b.Property<Guid?>("HelpCardId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HelpCardID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageHeading")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableOrViewDisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TableOrViewName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateStoredProcedure")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("HelpCardId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGrid", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("AddPagePopup")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ComparisonOperatorI")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ComparisonOperatorIi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ComparisonOperatorII");

                    b.Property<string>("ComparisonOperatorIii")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ComparisonOperatorIII");

                    b.Property<string>("CopyPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("CopyPagePopup")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("DisableResizing")
                        .HasColumnType("bit");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([ViewName])", false);

                    b.Property<string>("EditPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EditPagePopup")
                        .HasColumnType("bit");

                    b.Property<string>("FilterColumnI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilterColumnIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FilterColumnII");

                    b.Property<string>("FilterColumnIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FilterColumnIII");

                    b.Property<string>("FilterValueI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterValueIi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilterValueII");

                    b.Property<string>("FilterValueIii")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilterValueIII");

                    b.Property<string>("FilterValueLocationI")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FilterValueLocationIi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FilterValueLocationII");

                    b.Property<string>("FilterValueLocationIii")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FilterValueLocationIII");

                    b.Property<bool>("HideDataUntilSearched")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<string>("InitialDisplayField")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LogicalOperatorI")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LogicalOperatorIi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LogicalOperatorII");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<string>("ParentPrimaryKeyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimaryKeyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ShowMyRecords")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Spcommand")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("SPCommand");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("UseDetailView")
                        .HasColumnType("bit");

                    b.Property<bool>("UseRowLevelSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("UseShowAddGrid")
                        .HasColumnType("bit");

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ViewPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("ViewPagePopup")
                        .HasColumnType("bit");

                    b.HasKey("ObjectUid");

                    b.HasIndex("PageId");

                    b.ToTable("Page_Grid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGrid1", b =>
                {
                    b.Property<string>("ColumnToDisplay")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HelpCard")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageHeading")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TableOrViewDisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TableOrViewName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateStoredProcedure")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("PageGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGridEditField", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("DropDownDisplayColumn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DropDownParentColumnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DropDownTable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtendedAttributes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid>("PageGridId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Page_GridID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("ViewField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("PageGridId");

                    b.ToTable("Page_Grid_EditField");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGridEditFieldGrid", b =>
                {
                    b.Property<string>("DropDownDisplayColumn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DropDownParentColumnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DropDownTable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExtendedAttributes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("PageGridId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Page_GridID");

                    b.Property<string>("TableField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ViewField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("Page_Grid_EditFieldGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGridGrid", b =>
                {
                    b.Property<string>("AddPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("AddPagePopup")
                        .HasColumnType("bit");

                    b.Property<string>("ComparisonOperatorI")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ComparisonOperatorIi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ComparisonOperatorII");

                    b.Property<string>("ComparisonOperatorIii")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ComparisonOperatorIII");

                    b.Property<string>("CopyPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("CopyPagePopup")
                        .HasColumnType("bit");

                    b.Property<string>("EditPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("EditPagePopup")
                        .HasColumnType("bit");

                    b.Property<string>("FilterColumnI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilterColumnIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FilterColumnII");

                    b.Property<string>("FilterColumnIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FilterColumnIII");

                    b.Property<string>("FilterValueI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterValueIi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilterValueII");

                    b.Property<string>("FilterValueIii")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FilterValueIII");

                    b.Property<string>("FilterValueLocationI")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FilterValueLocationIi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FilterValueLocationII");

                    b.Property<string>("FilterValueLocationIii")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FilterValueLocationIII");

                    b.Property<string>("InitialDisplayField")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LogicalOperatorI")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LogicalOperatorIi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LogicalOperatorII");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<string>("ParentPrimaryKeyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimaryKeyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ShowMyRecords")
                        .HasColumnType("bit");

                    b.Property<string>("Spcommand")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("SPCommand");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("UseDetailView")
                        .HasColumnType("bit");

                    b.Property<bool>("UseRowLevelSecurity")
                        .HasColumnType("bit");

                    b.Property<bool>("UseShowAddGrid")
                        .HasColumnType("bit");

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ViewPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("ViewPagePopup")
                        .HasColumnType("bit");

                    b.ToView("Page_GridGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageQuickAdd", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<string>("QuickAddPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("PageId");

                    b.ToTable("Page_QuickAdd");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageQuickAddGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<string>("QuickAddPageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("Page_QuickAddGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageTab", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ControlPageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Control_PageID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid?>("HeaderControlPageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HeaderControl_PageID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ControlPageId");

                    b.HasIndex("HeaderControlPageId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("PageId");

                    b.ToTable("Page_Tab");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageTabGrid", b =>
                {
                    b.Property<string>("Control")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Header")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.ToView("Page_TabGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ParameterType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("ParameterType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ParameterTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("ParameterTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PhoneBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("PhoneBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Portal", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Portal");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PortalGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("PortalGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PostageOvernightMailBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("PostageOvernightMailBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PrintingCopyBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("PrintingCopyBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ProfessionalServiceBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("ProfessionalServiceBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Project", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DefaultFsLine")
                        .HasColumnType("int")
                        .HasColumnName("Default_FS_Line");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("ProjectNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RollToAll")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Roll_to_ALL");

                    b.Property<string>("Seg1Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG1_MATRIX");

                    b.Property<string>("Seg2Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG2_MATRIX");

                    b.Property<string>("Seg3Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG3_MATRIX");

                    b.Property<string>("Seg4Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG4_MATRIX");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("project");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ProjectBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroupSubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("ProjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals($)");

                    b.ToView("ProjectBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ProjectLrp", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("DefaultFsLine")
                        .HasColumnType("int")
                        .HasColumnName("Default_FS_Line");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Display")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GpStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gp_status");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Lm2disbursementCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2DisbursementCodeID");

                    b.Property<Guid?>("Lm2receiptCodeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LM2ReceiptCodeID");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OaStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("oa_status");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("ProjectNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RollToAll")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Roll_to_ALL");

                    b.Property<string>("Seg1Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG1_MATRIX");

                    b.Property<string>("Seg2Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG2_MATRIX");

                    b.Property<string>("Seg3Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG3_MATRIX");

                    b.Property<string>("Seg4Matrix")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SEG4_MATRIX");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("project_lrp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PublicationBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("BdgaccountGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroup");

                    b.Property<string>("BdgaccountGroupSubGroupSubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGAccountGroupSubGroupSubGroup");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals($)");

                    b.ToView("PublicationBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.QuickAddSetting", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("QuickAddEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("QuickAddLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("QuickAddNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("QuickAddTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid")
                        .HasName("PK_QuickAdd");

                    b.ToTable("QuickAddSetting");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.QuickAddSettingGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("QuickAddEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("QuickAddLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("QuickAddNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("QuickAddTableNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.ToView("QuickAddSettingGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<byte[]>("Attachment")
                        .HasColumnType("image");

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AttachmentID");

                    b.Property<Guid?>("AttachmentToModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AttachmentTo_ModuleID");

                    b.Property<Guid?>("AttachmentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AttachmentTypeID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PortalID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("AttachmentToModuleId");

                    b.HasIndex("AttachmentTypeId");

                    b.HasIndex("PortalId");

                    b.ToTable("Reference_Attachment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachmentGrid", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Download")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NoMin")
                        .HasColumnType("int")
                        .HasColumnName("No Min");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid?>("PortalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PortalID");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToView("Reference_AttachmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachmentUserAccount", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ReferenceAttachmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Reference_AttachmentID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ReferenceAttachmentId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Reference_Attachment_UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachmentUserAccountGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("ReferenceAttachmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Reference_AttachmentID");

                    b.Property<string>("UserAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("Reference_Attachment_UserAccountGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceNote", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.ToTable("Reference_Note");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceNoteGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("NoteDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("Reference_NoteGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceUserAccount", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AllowCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowView")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetUserAccountName]([UserAccountID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReferenceID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Reference_UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Resource", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ResourceGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("ResourceGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ResourceLocalisationList", b =>
                {
                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LocalisationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocalisationID");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Resource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("Resource_LocalisationList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ResourceTranslation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LocalisationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocalisationID");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ResourceID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LocalisationId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Resource_Translation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ResourceTranslationGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ResourceID");

                    b.ToView("Resource_TranslationGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.RoleGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("RoleGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.RoleModule", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetModuleName]([ModuleID]))", false);

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("RoleId");

                    b.ToTable("Role_Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.RoleModuleGrid", b =>
                {
                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.ToView("Role_ModuleGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryAdjustmentBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("SalaryAdjustmentBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("AccountGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<decimal?>("DetailAmount")
                        .HasColumnType("money")
                        .HasColumnName("Detail Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("LineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money")
                        .HasColumnName("Total Amount($)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("SalaryBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryEmployeeBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("SalaryEmployeeBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryInternBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OfWeeks")
                        .HasColumnType("int")
                        .HasColumnName("#OfWeeks");

                    b.Property<int?>("OfWeeksInNextYear")
                        .HasColumnType("int")
                        .HasColumnName("#OfWeeksInNextYear");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("WeeklySalary")
                        .HasColumnType("money")
                        .HasColumnName("Weekly Salary($)");

                    b.ToView("SalaryInternBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryOpenPositionBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<string>("AnticipatedStartingMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PositionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.Property<string>("Step")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("SalaryOpenPositionBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalaryOvertimeBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("SalaryOvertimeBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SalarySabbaticalBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<string>("Employee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OfMonths")
                        .HasColumnType("int")
                        .HasColumnName("#OfMonths");

                    b.Property<int?>("OfMonthsInNextYear")
                        .HasColumnType("int")
                        .HasColumnName("#OfMonthsInNextYear");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("money")
                        .HasColumnName("Salary($)");

                    b.ToView("SalarySabbaticalBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Salutation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Salutation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Setting", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ObjectUid");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.StaffTrainingConferenceBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("StaffTrainingConferenceBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.StatusUpdate", b =>
                {
                    b.Property<string>("StatusValue")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("status_value");

                    b.ToTable("status_update");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SubscriptionBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("YtdActuals")
                        .HasColumnType("money")
                        .HasColumnName("YTD Actuals");

                    b.ToView("SubscriptionBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.SupplyEquipmentUnder1000BdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("SupplyEquipmentUnder1000BDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempCss", b =>
                {
                    b.Property<string>("Bdgdepartmentidlist")
                        .IsRequired()
                        .HasMaxLength(77)
                        .IsUnicode(false)
                        .HasColumnType("varchar(77)")
                        .HasColumnName("bdgdepartmentidlist");

                    b.Property<string>("Bdgreportgroupid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("bdgreportgroupid");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("company");

                    b.Property<int>("Debug")
                        .HasColumnType("int")
                        .HasColumnName("debug");

                    b.Property<string>("Enddate")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("enddate");

                    b.Property<string>("Startdate")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("startdate");

                    b.ToTable("temp_css");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempCss1", b =>
                {
                    b.Property<string>("Bdgdepartmentidlist")
                        .IsRequired()
                        .HasMaxLength(77)
                        .IsUnicode(false)
                        .HasColumnType("varchar(77)")
                        .HasColumnName("bdgdepartmentidlist");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("company");

                    b.Property<int>("Debug")
                        .HasColumnType("int")
                        .HasColumnName("debug");

                    b.Property<string>("Enddate")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("enddate");

                    b.Property<string>("Startdate")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("startdate");

                    b.ToTable("temp_css1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempEmployee", b =>
                {
                    b.Property<string>("Accountgroup")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Accountgroup1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Accountgroup2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Accountgroup3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeptMoveFrom")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_MoveFrom");

                    b.Property<string>("DeptMoveTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Dept_MoveTo");

                    b.Property<Guid?>("Employeeid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EMPLOYEEID");

                    b.Property<bool?>("Processed")
                        .HasColumnType("bit");

                    b.Property<int>("Recordid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordid")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Year")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("year");

                    b.ToTable("Temp_EMPLOYEE");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempHelpBdgbudgetInfoDetailGrid", b =>
                {
                    b.Property<Guid>("BdgbudgetInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetInfoID");

                    b.Property<decimal?>("BudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Budget Amount($)");

                    b.Property<decimal?>("CurrentYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Current Year Budget Amount($)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("NextYearBudgetAmount")
                        .HasColumnType("money")
                        .HasColumnName("Next Year Budget Amount($)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToView("TempHelpBDGBudgetInfo_DetailGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempProceduresList", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<bool?>("IsAutoExecuted")
                        .HasColumnType("bit")
                        .HasColumnName("is_auto_executed");

                    b.Property<bool?>("IsExecutionReplicated")
                        .HasColumnType("bit")
                        .HasColumnName("is_execution_replicated");

                    b.Property<bool?>("IsMsShipped")
                        .HasColumnType("bit")
                        .HasColumnName("is_ms_shipped");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_published");

                    b.Property<bool?>("IsReplSerializableOnly")
                        .HasColumnType("bit")
                        .HasColumnName("is_repl_serializable_only");

                    b.Property<bool?>("IsSchemaPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_schema_published");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("Namevalue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("namevalue");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<int?>("ParentObjectId")
                        .HasColumnType("int")
                        .HasColumnName("parent_object_id");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("SchemaId")
                        .HasColumnType("int")
                        .HasColumnName("schema_id");

                    b.Property<bool?>("SkipsReplConstraints")
                        .HasColumnType("bit")
                        .HasColumnName("skips_repl_constraints");

                    b.Property<string>("Source1")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("source1");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("type")
                        .IsFixedLength(true)
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<string>("TypeDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("type_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.ToTable("temp_procedures_list");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempTableList", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<int?>("FilestreamDataSpaceId")
                        .HasColumnType("int")
                        .HasColumnName("filestream_data_space_id");

                    b.Property<bool?>("HasReplicationFilter")
                        .HasColumnType("bit")
                        .HasColumnName("has_replication_filter");

                    b.Property<bool?>("HasUncheckedAssemblyData")
                        .HasColumnType("bit")
                        .HasColumnName("has_unchecked_assembly_data");

                    b.Property<bool?>("IsMergePublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_merge_published");

                    b.Property<bool?>("IsMsShipped")
                        .HasColumnType("bit")
                        .HasColumnName("is_ms_shipped");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_published");

                    b.Property<bool?>("IsReplicated")
                        .HasColumnType("bit")
                        .HasColumnName("is_replicated");

                    b.Property<bool?>("IsSchemaPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_schema_published");

                    b.Property<bool?>("IsSyncTranSubscribed")
                        .HasColumnType("bit")
                        .HasColumnName("is_sync_tran_subscribed");

                    b.Property<bool?>("IsTrackedByCdc")
                        .HasColumnType("bit")
                        .HasColumnName("is_tracked_by_cdc");

                    b.Property<bool?>("LargeValueTypesOutOfRow")
                        .HasColumnType("bit")
                        .HasColumnName("large_value_types_out_of_row");

                    b.Property<int?>("LobDataSpaceId")
                        .HasColumnType("int")
                        .HasColumnName("lob_data_space_id");

                    b.Property<byte?>("LockEscalation")
                        .HasColumnType("tinyint")
                        .HasColumnName("lock_escalation");

                    b.Property<string>("LockEscalationDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("lock_escalation_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<bool?>("LockOnBulkLoad")
                        .HasColumnType("bit")
                        .HasColumnName("lock_on_bulk_load");

                    b.Property<int?>("MaxColumnIdUsed")
                        .HasColumnType("int")
                        .HasColumnName("max_column_id_used");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("Namevalue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("namevalue");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<int?>("ParentObjectId")
                        .HasColumnType("int")
                        .HasColumnName("parent_object_id");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("SchemaId")
                        .HasColumnType("int")
                        .HasColumnName("schema_id");

                    b.Property<string>("Source1")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("source1");

                    b.Property<int?>("TextInRowLimit")
                        .HasColumnType("int")
                        .HasColumnName("text_in_row_limit");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("type")
                        .IsFixedLength(true)
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<string>("TypeDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("type_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<bool?>("UsesAnsiNulls")
                        .HasColumnType("bit")
                        .HasColumnName("uses_ansi_nulls");

                    b.ToTable("temp_table_list");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempTriggersList", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<bool?>("IsDisabled")
                        .HasColumnType("bit")
                        .HasColumnName("is_disabled");

                    b.Property<bool?>("IsInsteadOfTrigger")
                        .HasColumnType("bit")
                        .HasColumnName("is_instead_of_trigger");

                    b.Property<bool?>("IsMsShipped")
                        .HasColumnType("bit")
                        .HasColumnName("is_ms_shipped");

                    b.Property<bool?>("IsNotForReplication")
                        .HasColumnType("bit")
                        .HasColumnName("is_not_for_replication");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("Namevalue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("namevalue");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<byte?>("ParentClass")
                        .HasColumnType("tinyint")
                        .HasColumnName("parent_class");

                    b.Property<string>("ParentClassDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("parent_class_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("Source1")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("source1");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("type")
                        .IsFixedLength(true)
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<string>("TypeDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("type_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.ToTable("temp_triggers_list");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.TempViewList", b =>
                {
                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<bool?>("HasOpaqueMetadata")
                        .HasColumnType("bit")
                        .HasColumnName("has_opaque_metadata");

                    b.Property<bool?>("HasReplicationFilter")
                        .HasColumnType("bit")
                        .HasColumnName("has_replication_filter");

                    b.Property<bool?>("HasUncheckedAssemblyData")
                        .HasColumnType("bit")
                        .HasColumnName("has_unchecked_assembly_data");

                    b.Property<bool?>("IsDateCorrelationView")
                        .HasColumnType("bit")
                        .HasColumnName("is_date_correlation_view");

                    b.Property<bool?>("IsMsShipped")
                        .HasColumnType("bit")
                        .HasColumnName("is_ms_shipped");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_published");

                    b.Property<bool?>("IsReplicated")
                        .HasColumnType("bit")
                        .HasColumnName("is_replicated");

                    b.Property<bool?>("IsSchemaPublished")
                        .HasColumnType("bit")
                        .HasColumnName("is_schema_published");

                    b.Property<bool?>("IsTrackedByCdc")
                        .HasColumnType("bit")
                        .HasColumnName("is_tracked_by_cdc");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("Namevalue")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("namevalue");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<int?>("ParentObjectId")
                        .HasColumnType("int")
                        .HasColumnName("parent_object_id");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("principal_id");

                    b.Property<int?>("SchemaId")
                        .HasColumnType("int")
                        .HasColumnName("schema_id");

                    b.Property<string>("Source1")
                        .IsRequired()
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("varchar(19)")
                        .HasColumnName("source1");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("type")
                        .IsFixedLength(true)
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<string>("TypeDesc")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("type_desc")
                        .UseCollation("Latin1_General_CI_AS_KS_WS");

                    b.Property<bool?>("WithCheckOption")
                        .HasColumnType("bit")
                        .HasColumnName("with_check_option");

                    b.ToTable("temp_view_list");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Tempdatabase", b =>
                {
                    b.Property<string>("Test")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("test");

                    b.ToTable("tempdatabase");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Tempjam", b =>
                {
                    b.Property<int?>("Gl")
                        .HasColumnType("int")
                        .HasColumnName("gl");

                    b.Property<string>("Lrp")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("lrp");

                    b.Property<string>("Refnbr")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("refnbr");

                    b.ToTable("tempjam");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ToolTip", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(104)
                        .HasColumnType("nvarchar(104)")
                        .HasComputedColumnSql("(([TableName]+' -  ')+[FieldName])", false);

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([FieldName])", false);

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("ToolTip");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ToolTipGrid", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("ToolTipGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Translation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccount", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AddressLineI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLineIi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineII");

                    b.Property<string>("AddressLineIii")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AddressLineIII");

                    b.Property<string>("City")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryID");

                    b.Property<Guid?>("CountryStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Country_StateID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DefaultPageSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((10))");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InitialRoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Initial_RoleID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<int>("InvalidAttemptCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserAccountLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LocalisationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocalisationID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PasswordExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<Guid?>("StartupMenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Startup_MenuID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ObjectUid");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("InitialRoleId");

                    b.HasIndex("LocalisationId");

                    b.HasIndex("StartupMenuId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgcompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGCompanyID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgcompanyId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_BDGCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgcompanyGrid", b =>
                {
                    b.Property<string>("Bdgcompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGCompany");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_BDGCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgdepartment", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AllowApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSubmit")
                        .HasColumnType("bit");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgdepartmentId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_BDGDepartment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgdepartmentGrid", b =>
                {
                    b.Property<bool>("AllowApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSubmit")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_BDGDepartmentGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgreport", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgreportId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGReportID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgreportId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_BDGReport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgreportGrid", b =>
                {
                    b.Property<string>("Bdgreport")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("BDGReport");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_BDGReportGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBookmark", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_Bookmark");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBookmarkGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_BookmarkGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeccompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FeccompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECCompanyID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeccompanyId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_FECCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeccompanyGrid", b =>
                {
                    b.Property<string>("Feccompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FECCompany");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_FECCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeclocalUnion", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<Guid>("FeclocalUnionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FECLocalUnionID");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("FeclocalUnionId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_FECLocalUnion");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeclocalUnionGrid", b =>
                {
                    b.Property<string>("FeclocalUnion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FECLocalUnion");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_FECLocalUnionGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountGrid", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_Grid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountGrid03282018", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToTable("UserAccount_Grid_03282018");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountGrid1", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DefaultPageSize")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InitialRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InvalidAttemptCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserAccountLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("PasswordExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StartUpMenu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToView("UserAccountGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountGridCore", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("PageLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToTable("UserAccount_Grid_core");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountLrpcompany", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("LrpcompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LRPCompanyID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("LrpcompanyId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_LRPCompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountLrpcompanyGrid", b =>
                {
                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Lrpcompany")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LRPCompany");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_LRPCompanyGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountMenuList", b =>
                {
                    b.Property<string>("Display")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeparator")
                        .HasColumnType("bit");

                    b.Property<string>("MenuIconLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MenuID");

                    b.Property<string>("MenuLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_MenuID");

                    b.Property<string>("Portal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ShowToAll")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_MenuList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountModule", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetModuleName]([ModuleID]))", false);

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.HasKey("ObjectUid");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountModuleGrid", b =>
                {
                    b.Property<bool>("AddPage")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPageSaveAndNew")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomA")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomB")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomC")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomD")
                        .HasColumnType("bit");

                    b.Property<bool>("Download")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPage")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSave")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPageSaveAndClose")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<bool>("PageHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("PageQuickAdd")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("TableCopy")
                        .HasColumnType("bit");

                    b.Property<bool>("TableCsv")
                        .HasColumnType("bit")
                        .HasColumnName("TableCSV");

                    b.Property<bool>("TableDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TableExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("TableNew")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePage")
                        .HasColumnType("bit");

                    b.Property<bool>("TablePdf")
                        .HasColumnType("bit")
                        .HasColumnName("TablePDF");

                    b.Property<bool>("TableRefresh")
                        .HasColumnType("bit");

                    b.Property<bool>("TableReset")
                        .HasColumnType("bit");

                    b.Property<bool>("TableWord")
                        .HasColumnType("bit");

                    b.Property<bool>("Upload")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.Property<bool>("ViewPage")
                        .HasColumnType("bit");

                    b.ToView("UserAccount_ModuleGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountModuleList", b =>
                {
                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_ModuleList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountNotificationType", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetNotificationTypeName]([NotificationTypeID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("NotificationTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NotificationTypeID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_NotificationType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountNotificationTypeGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_NotificationTypeGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountPasswordList", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_PasswordList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountRole", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[GetRoleName]([RoleID]))", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserAccount_Role");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountRoleGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_RoleGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountRolePermissionList", b =>
                {
                    b.Property<int?>("AddPage")
                        .HasColumnType("int");

                    b.Property<int?>("AddPageSave")
                        .HasColumnType("int");

                    b.Property<int?>("AddPageSaveAndClose")
                        .HasColumnType("int");

                    b.Property<int?>("AddPageSaveAndNew")
                        .HasColumnType("int");

                    b.Property<int?>("CustomA")
                        .HasColumnType("int");

                    b.Property<int?>("CustomB")
                        .HasColumnType("int");

                    b.Property<int?>("CustomC")
                        .HasColumnType("int");

                    b.Property<int?>("CustomD")
                        .HasColumnType("int");

                    b.Property<int?>("Download")
                        .HasColumnType("int");

                    b.Property<int?>("EditPage")
                        .HasColumnType("int");

                    b.Property<int?>("EditPageDelete")
                        .HasColumnType("int");

                    b.Property<int?>("EditPageSave")
                        .HasColumnType("int");

                    b.Property<int?>("EditPageSaveAndClose")
                        .HasColumnType("int");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<int?>("PageHelp")
                        .HasColumnType("int");

                    b.Property<int?>("PageQuickAdd")
                        .HasColumnType("int");

                    b.Property<int?>("TableCopy")
                        .HasColumnType("int");

                    b.Property<int?>("TableCsv")
                        .HasColumnType("int")
                        .HasColumnName("TableCSV");

                    b.Property<int?>("TableDelete")
                        .HasColumnType("int");

                    b.Property<int?>("TableExcel")
                        .HasColumnType("int");

                    b.Property<int?>("TableNew")
                        .HasColumnType("int");

                    b.Property<int?>("TablePage")
                        .HasColumnType("int");

                    b.Property<int?>("TablePdf")
                        .HasColumnType("int")
                        .HasColumnName("TablePDF");

                    b.Property<int?>("TableRefresh")
                        .HasColumnType("int");

                    b.Property<int?>("TableReset")
                        .HasColumnType("int");

                    b.Property<int?>("TableWord")
                        .HasColumnType("int");

                    b.Property<int?>("Upload")
                        .HasColumnType("int");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.Property<int?>("ViewPage")
                        .HasColumnType("int");

                    b.ToView("UserAccount_RolePermissionList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountTabList", b =>
                {
                    b.Property<Guid>("ControlPageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Control_PageID");

                    b.Property<Guid?>("HeaderControlPageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HeaderControl_PageID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModuleID");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageID");

                    b.Property<Guid>("PageTabId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageTabID");

                    b.Property<string>("PageTabName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<Guid>("UserAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserAccountID");

                    b.ToView("UserAccount_TabList");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UseraccountGridTemp", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.ToTable("useraccount_grid_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Validation", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Argument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWarning")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("TableName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("ValidateEmpty")
                        .HasColumnType("bit");

                    b.HasKey("ObjectUid");

                    b.ToTable("Validation");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ValidationGrid", b =>
                {
                    b.Property<string>("Argument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWarning")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TableName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("ValidateEmpty")
                        .HasColumnType("bit");

                    b.ToView("ValidationGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.VendorVoucherCreate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(103)
                        .HasColumnType("nvarchar(103)")
                        .HasComputedColumnSql("(([VoucherNo]+' - ')+[dbo].[GetDocumentTypeName]([DocumentTypeID]))", false);

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DocumentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentTypeID");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("date")
                        .HasColumnName("IDDate");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("OriginalNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("date")
                        .HasColumnName("PSTGDate");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("TEN99AMNT");

                    b.Property<string>("Ten99boxnumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TEN99BOXNUMBER");

                    b.Property<string>("Ten99type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TEN99TYPE");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VendorID");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("VoucherStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VoucherStatusID");

                    b.HasKey("ObjectUid");

                    b.ToTable("Vendor_Voucher_Create");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.VendorVoucherUpdateCreate", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CssLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link");

                    b.Property<string>("CssLinkLines")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CSS_Link_Lines");

                    b.Property<decimal?>("CurrentBalanceAmount")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(103)
                        .HasColumnType("nvarchar(103)")
                        .HasComputedColumnSql("(([VoucherNo]+' - ')+[dbo].[GetDocumentTypeName]([DocumentTypeID]))", false);

                    b.Property<decimal?>("DocumentAmount")
                        .HasColumnType("money");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DocumentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentTypeID");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Iddate")
                        .HasColumnType("date")
                        .HasColumnName("IDDate");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<string>("OriginalNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PONo");

                    b.Property<DateTime?>("Pstgdate")
                        .HasColumnType("date")
                        .HasColumnName("PSTGDate");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("Ten99amnt")
                        .HasColumnType("numeric(18,3)")
                        .HasColumnName("TEN99AMNT");

                    b.Property<string>("Ten99boxnumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TEN99BOXNUMBER");

                    b.Property<string>("Ten99type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TEN99TYPE");

                    b.Property<string>("TrxDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VendorID");

                    b.Property<bool>("Voided")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("VoucherStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VoucherStatusID");

                    b.HasKey("ObjectUid");

                    b.ToTable("Vendor_Voucher_Update_create");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.View1", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.Property<string>("MaskedAccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("View_1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.View2", b =>
                {
                    b.Property<Guid?>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroupID");

                    b.Property<Guid?>("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroup_SubGroup_SubGroup_SubGroupID");

                    b.Property<Guid>("BdgdepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGDepartmentID");

                    b.Property<string>("MaskedAccountNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.ToView("View_2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.View4", b =>
                {
                    b.Property<string>("Acct")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)")
                        .HasColumnName("ACCT");

                    b.ToView("View_4");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetup", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("BdgbudgetCopyOptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGBudgetCopyOptionID");

                    b.Property<Guid?>("CopyYearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Copy_YearSetupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MonthId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MonthID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("NextyearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NextyearSetupID");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<Guid?>("PreviousYearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Previous_YearSetupID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Softlock")
                        .HasColumnType("bit")
                        .HasColumnName("softlock");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("TwoMoreYearsSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TwoMoreYearsSetupID");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("YearStatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearStatusID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgbudgetCopyOptionId");

                    b.HasIndex("CopyYearSetupId");

                    b.HasIndex("PreviousYearSetupId");

                    b.HasIndex("YearStatusId");

                    b.ToTable("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetupBdgaccountGroupFactor", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BdgaccountGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BDGAccountGroupID");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid>("YearSetupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YearSetupID");

                    b.HasKey("ObjectUid");

                    b.HasIndex("BdgaccountGroupId");

                    b.HasIndex("YearSetupId");

                    b.ToTable("YearSetup_BDGAccountGroupFactor");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetupGrid", b =>
                {
                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YearCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YearStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToView("YearSetupGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetupTemp", b =>
                {
                    b.Property<DateTime>("Dateprocess")
                        .HasColumnType("datetime")
                        .HasColumnName("dateprocess");

                    b.Property<DateTime>("Dateprocessend")
                        .HasColumnType("datetime")
                        .HasColumnName("dateprocessend");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.ToTable("YearSetup_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetupTemp2", b =>
                {
                    b.Property<DateTime>("Dateprocess")
                        .HasColumnType("datetime")
                        .HasColumnName("dateprocess");

                    b.Property<DateTime>("Dateprocessend")
                        .HasColumnType("datetime")
                        .HasColumnName("dateprocessend");

                    b.Property<Guid>("Objectuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("objectuid");

                    b.Property<int>("Statusvalue")
                        .HasColumnType("int")
                        .HasColumnName("statusvalue");

                    b.ToTable("YearSetup_temp2");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearStatus", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("YearStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearStatusGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("YearStatusGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearsetupidTemp", b =>
                {
                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("yearsetupid_temp");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearsetupidTemp1", b =>
                {
                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("enddate");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("startdate");

                    b.Property<Guid?>("Yearsetupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("yearsetupid");

                    b.ToTable("yearsetupid_temp1");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YesNo", b =>
                {
                    b.Property<Guid>("ObjectUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComputedColumnSql("([Name])", false);

                    b.Property<string>("ImportedObjectUid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ImportedObjectUID");

                    b.Property<Guid?>("InstallationUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InstallationUID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameAlias")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("OldRecordId")
                        .HasColumnType("int")
                        .HasColumnName("OldRecordID");

                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecordID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((100))");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("ObjectUid");

                    b.ToTable("YesNo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YesNoGrid", b =>
                {
                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ObjectUid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectUID");

                    b.ToView("YesNoGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ApplicationLog", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("ApplicationLogs")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_ApplicationLog_ModuleID_Module");

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("ApplicationLogs")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_ApplicationLog_UserAccountID_UserAccount");

                    b.Navigation("Module");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupType", "BdgaccountGroupType")
                        .WithMany("BdgaccountGroups")
                        .HasForeignKey("BdgaccountGroupTypeId")
                        .HasConstraintName("FK_BDGAccountGroup_BDGAccountGroupTypeID_BDGAccountGroupType");

                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgaccountGroups")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGAccountGroup_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "ParentBdgaccountGroup")
                        .WithMany("InverseParentBdgaccountGroup")
                        .HasForeignKey("ParentBdgaccountGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_Parent_BDGAccountGroupID_BDGAccountGroup");

                    b.Navigation("BdgaccountGroupType");

                    b.Navigation("Bdgcompany");

                    b.Navigation("ParentBdgaccountGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgaccountGroupSubGroups")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_BDGAccountGroupID_BDGAccountGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "ParentBdgaccountGroupSubGroup")
                        .WithMany("InverseParentBdgaccountGroupSubGroup")
                        .HasForeignKey("ParentBdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_Parent_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("ParentBdgaccountGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgaccountGroupSubGroupSubGroups")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_SubGroup_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "ParentBdgaccountGroupSubGroupSubGroup")
                        .WithMany("InverseParentBdgaccountGroupSubGroupSubGroup")
                        .HasForeignKey("ParentBdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_SubGroup_Parent_BDGAccountGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("ParentBdgaccountGroupSubGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroup")
                        .WithMany("BdgaccountGroupSubGroupSubGroupSubGroups")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_SubGroup_SubGroup_BDGAccountGroup_SubGroup_SubGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", "ParentBdgaccountGroupSubGroupSubGroupSubGroup")
                        .WithMany("InverseParentBdgaccountGroupSubGroupSubGroupSubGroup")
                        .HasForeignKey("ParentBdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGAccountGroup_SubGroup_SubGroup_SubGroup_BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroup");

                    b.Navigation("ParentBdgaccountGroupSubGroupSubGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgaccountGroupTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGAccountGroupType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetGroupType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgbudgetGroupTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGBudgetGroupType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfo", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfos")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_BDGAccountGroupID_BDGAccountGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgbudgetInfos")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGBudgetInfo_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgbudgetInfos")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGBudgetInfo_BDGDepartmentID_BDGDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgreportType", "BdgreportType")
                        .WithMany("BdgbudgetInfos")
                        .HasForeignKey("BdgreportTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_BDGReportTypeID_BDGReportType");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfo", "PreviousBdgbudgetInfo")
                        .WithMany("InversePreviousBdgbudgetInfo")
                        .HasForeignKey("PreviousBdgbudgetInfoId")
                        .HasConstraintName("FK_BDGBudgetInfo_Previous_BDGBudgetInfoID_BDGBudgetInfo");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("BdgbudgetInfos")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_BDGBudgetInfo_YearSetupID_YearSetup")
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("Bdgcompany");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("BdgreportType");

                    b.Navigation("PreviousBdgbudgetInfo");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Month", "AnticipatedStartingMonth")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("AnticipatedStartingMonthId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_AnticipatedStarting_MonthID_Month");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGAccountGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGAccountGroup_SubGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetGroupType", "BdgbudgetGroupType")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgbudgetGroupTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGBudgetGroupTypeID_BDGBudgetGroupType");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfo", "BdgbudgetInfo")
                        .WithMany("BdgbudgetInfoDetailBdgbudgetInfos")
                        .HasForeignKey("BdgbudgetInfoId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGBudgetInfoID_BDGBudgetInfo")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgcommitteeType", "BdgcommitteeType")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgcommitteeTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGCommitteeTypeID_BDGCommitteeType");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeCategory", "BdgemployeeCategory")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeCategoryId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeCategoryID_BDGEmployeeCategory");

                    b.HasOne("CSCPA.Data.Entities.Bdgemployee", "Bdgemployee")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeID_BDGEmployee");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeType", "BdgemployeeType")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeTypeID_BDGEmployeeType");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnitPosition", "BdgemployeeUnitPosition")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeUnitPositionId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeUnit_PositionID_BDGEmployeeUnit_Position");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnitPositionStep", "BdgemployeeUnitPositionStep")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgemployeeUnitPositionStepId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGEmployeeUnit_Position_StepID_BDGEmployeeUnit_Position_Step");

                    b.HasOne("CSCPA.Data.Entities.BdgmeetingStatus", "BdgmeetingStatus")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgmeetingStatusId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGMeetingStatusID_BDGMeetingStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgpositionType", "BdgpositionType")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgpositionTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGPositionTypeID_BDGPositionType");

                    b.HasOne("CSCPA.Data.Entities.BdgprojectType", "BdgprojectType")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("BdgprojectTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_BDGProjectTypeID_BDGProjectType");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfoDetail", "FringeBdgbudgetInfoDetail")
                        .WithMany("InverseFringeBdgbudgetInfoDetail")
                        .HasForeignKey("FringeBdgbudgetInfoDetailId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Fringe_BDGBudgetInfo_DetailID_BDGBudgetInfo_Detail");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfo", "OldBdgbudgetInfo")
                        .WithMany("BdgbudgetInfoDetailOldBdgbudgetInfos")
                        .HasForeignKey("OldBdgbudgetInfoId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Old_BDGBudgetInfoID_BDGBudgetInfo");

                    b.HasOne("CSCPA.Data.Entities.YesNo", "WillBeUsingTaskForcesYesNo")
                        .WithMany("BdgbudgetInfoDetails")
                        .HasForeignKey("WillBeUsingTaskForcesYesNoId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_WillBeUsingTaskForces_YesNoID_YesNo");

                    b.Navigation("AnticipatedStartingMonth");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroupSubGroup");

                    b.Navigation("BdgbudgetGroupType");

                    b.Navigation("BdgbudgetInfo");

                    b.Navigation("BdgcommitteeType");

                    b.Navigation("Bdgemployee");

                    b.Navigation("BdgemployeeCategory");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeType");

                    b.Navigation("BdgemployeeUnit");

                    b.Navigation("BdgemployeeUnitPosition");

                    b.Navigation("BdgemployeeUnitPositionStep");

                    b.Navigation("BdgmeetingStatus");

                    b.Navigation("BdgpositionType");

                    b.Navigation("BdgprojectType");

                    b.Navigation("FringeBdgbudgetInfoDetail");

                    b.Navigation("OldBdgbudgetInfo");

                    b.Navigation("WillBeUsingTaskForcesYesNo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfoDetailDetails")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetailDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfoDetail", "BdgbudgetInfoDetail")
                        .WithMany("BdgbudgetInfoDetailDetails")
                        .HasForeignKey("BdgbudgetInfoDetailId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_BDGBudgetInfo_DetailID_BDGBudgetInfo_Detail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgbudgetInfoDetail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfoDetailDetail", "BdgbudgetInfoDetailDetail")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgbudgetInfoDetailDetailId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGBudgetInfo_Detail_DetailID_BDGBudgetInfo_Detail_Detail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgemployee", "Bdgemployee")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgemployeeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGEmployeeID_BDGEmployee");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeType", "BdgemployeeType")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgemployeeTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGEmployeeTypeID_BDGEmployeeType");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgbudgetInfoDetailDetailDetails")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgbudgetInfoDetailDetail");

                    b.Navigation("Bdgemployee");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeType");

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetail", "BdgbudgetInfoDetailDetailDetail")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgbudgetInfoDetailDetailDetailId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGBudgetInfo_Detail_Detail_DetailID_BDGBudgetInfo_Detail_Detail_Detail")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgemployee", "Bdgemployee")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGEmployeeID_BDGEmployee");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeType", "BdgemployeeType")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGEmployeeTypeID_BDGEmployeeType");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgbudgetInfoDetailDetailDetail");

                    b.Navigation("Bdgemployee");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeType");

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetailDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetail", "BdgbudgetInfoDetailDetailDetailDetail")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgbudgetInfoDetailDetailDetailDetailId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGBudgetInfo_Detail_Detail_Detail_Detail")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgemployee", "Bdgemployee")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGEmployeeID_BDGEmployee");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeType", "BdgemployeeType")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeTypeId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGEmployeeTypeID_BDGEmployeeType");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgbudgetInfoDetailDetailDetailDetailDetails")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGBudgetInfo_Detail_Detail_Detail_Detail_Detail_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetail");

                    b.Navigation("Bdgemployee");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeType");

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgcommitteeType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgcommitteeTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGCommitteeType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgcompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("Bdgcompanies")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_BDGCompany_CountryID_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Bdgcompanies")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_BDGCompany_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "ParentBdgcompany")
                        .WithMany("InverseParentBdgcompany")
                        .HasForeignKey("ParentBdgcompanyId")
                        .HasConstraintName("FK_BDGCompany_Parent_BDGCompanyID_BDGCompany");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("ParentBdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgdepartment", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("Bdgdepartments")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGDepartment_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgdepartmentGroup", "BdgdepartmentGroup")
                        .WithMany("Bdgdepartments")
                        .HasForeignKey("BdgdepartmentGroupId")
                        .HasConstraintName("FK_BDGDepartment_BDGDepartmentGroupID_BDGDepartmentGroup");

                    b.Navigation("Bdgcompany");

                    b.Navigation("BdgdepartmentGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentBdgaccountGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgdepartmentBdgaccountGroups")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGDepartment_BDGAccountGroup_BDGAccountGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgdepartmentBdgaccountGroups")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGDepartment_BDGAccountGroup_BDGDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgreportGroupType", "BdgreportGroupType")
                        .WithMany("BdgdepartmentBdgaccountGroups")
                        .HasForeignKey("BdgreportGroupTypeId")
                        .HasConstraintName("FK_BDGDepartment_BDGAccountGroup_BDGReportGroupTypeID_BDGReportGroupType");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("BdgreportGroupType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgdepartmentGroups")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGDepartmentGroup_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentHistoricDatum", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgdepartmentHistoricData")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGDepartment_HistoricData_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgbudgetGroupType", "BdgbudgetGroupType")
                        .WithMany("BdgdepartmentHistoricData")
                        .HasForeignKey("BdgbudgetGroupTypeId")
                        .HasConstraintName("FK_BDGDepartment_HistoricData_BDGBudgetGroupType");

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgdepartmentHistoricData")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGDepartment_HistoricData_BDGDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgreportGroupType", "BdgreportGroupType")
                        .WithMany("BdgdepartmentHistoricData")
                        .HasForeignKey("BdgreportGroupTypeId")
                        .HasConstraintName("FK_BDGDepartment_HistoricData_BDGReportGroupTypeID_BDGReportGroupType");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("BdgdepartmentHistoricData")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_BDGDepartment_HistoricData_YearSetupID_YearSetup")
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgbudgetGroupType");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("BdgreportGroupType");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgemployee", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("Bdgemployees")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployee_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("Bdgemployees")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGEmployee_BDGDepartmentID_BDGDepartment");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("Bdgemployees")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGEmployee_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("Bdgemployees")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGEmployee_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("Bdgemployees")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGEmployee_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.Navigation("Bdgcompany");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeCategory", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeeCategories")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployeeCategory_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeEmployeeHistory", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGDepartmentID_BDGDepartment");

                    b.HasOne("CSCPA.Data.Entities.Bdgemployee", "Bdgemployee")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgemployeeId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGEmployeeID_BDGEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgemployeePosition", "BdgemployeePosition")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgemployeePositionId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGEmployeePositionID_BDGEmployeePosition");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeStatus", "BdgemployeeStatus")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgemployeeStatusId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGEmployeeStatusID_BDGEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgemployeeEmployeeHistories")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGEmployee_EmployeeHistory_BDGEmployeeUnitID_BDGEmployeeUnit");

                    b.Navigation("Bdgcompany");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("Bdgemployee");

                    b.Navigation("BdgemployeePosition");

                    b.Navigation("BdgemployeeStatus");

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeePosition", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeePositions")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployeePosition_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeStatus", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeeStatuses")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployeeStatus_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeeTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployeeType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnit", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgemployeeUnits")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGEmployeeUnit_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Month", "EffectiveSalaryMonth")
                        .WithMany("BdgemployeeUnits")
                        .HasForeignKey("EffectiveSalaryMonthId")
                        .HasConstraintName("FK_BDGEmployeeUnit_EffectiveSalary_MonthID_Month");

                    b.Navigation("Bdgcompany");

                    b.Navigation("EffectiveSalaryMonth");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPosition", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnit", "BdgemployeeUnit")
                        .WithMany("BdgemployeeUnitPositions")
                        .HasForeignKey("BdgemployeeUnitId")
                        .HasConstraintName("FK_BDGEmployeeUnit_Position_BDGEmployeeUnitID_BDGEmployeeUnit")
                        .IsRequired();

                    b.Navigation("BdgemployeeUnit");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionStep", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgemployeeUnitPosition", "BdgemployeeUnitPosition")
                        .WithMany("BdgemployeeUnitPositionSteps")
                        .HasForeignKey("BdgemployeeUnitPositionId")
                        .HasConstraintName("FK_BDGEmployeeUnit_Position_Step_BDGEmployeeUnit_PositionID_BDGEmployeeUnit_Position")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgpositionType", "BdgpositionType")
                        .WithMany("BdgemployeeUnitPositionSteps")
                        .HasForeignKey("BdgpositionTypeId")
                        .HasConstraintName("FK_BDGEmployeeUnit_Position_Step_BDGPositionTypeID_BDGPositionType");

                    b.Navigation("BdgemployeeUnitPosition");

                    b.Navigation("BdgpositionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgglaccountMapping", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGGLAccountMapping_BDGAccountGroupID_BDGAccountGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGGLAccountMapping_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgglaccountMappings")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGGLAccountMapping_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgglaccountMappings")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGGLAccountMapping_BDGDepartmentID_BDGDepartment")
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("Bdgcompany");

                    b.Navigation("Bdgdepartment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdggltransaction", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("Bdggltransactions")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGGLTransaction_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgmeetingStatus", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgmeetingStatuses")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGMeetingStatus_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgpositionType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgpositionTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGPositionType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgprojectType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgprojectTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGProjectType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgreport", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("Bdgreports")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGReport_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Portal", "Portal")
                        .WithMany("Bdgreports")
                        .HasForeignKey("PortalId")
                        .HasConstraintName("FK_BDGReport_PortalID_Portal");

                    b.Navigation("Bdgcompany");

                    b.Navigation("Portal");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgreportGroups")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGReportGroup_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgglaccountMapping", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroup")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGAccountGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroupSubGroup")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGDepartmentID_BDGDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgreportGroup", "BdgreportGroup")
                        .WithMany("BdgreportGroupBdgglaccountMappings")
                        .HasForeignKey("BdgreportGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGGLAccountMapping_BDGReportGroupID_BDGReportGroup")
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroupSubGroup");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("BdgreportGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupBdgreport", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgreportGroup", "BdgreportGroup")
                        .WithMany("BdgreportGroupBdgreports")
                        .HasForeignKey("BdgreportGroupId")
                        .HasConstraintName("FK_BDGReportGroup_BDGReport_BDGReportGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Bdgreport", "Bdgreport")
                        .WithMany("BdgreportGroupBdgreports")
                        .HasForeignKey("BdgreportId")
                        .HasConstraintName("FK_BDGReportGroup_BDGReport_BDGReport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bdgreport");

                    b.Navigation("BdgreportGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupDuplicateMasking", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgreportGroup", "BdgreportGroup")
                        .WithMany("BdgreportGroupDuplicateMaskings")
                        .HasForeignKey("BdgreportGroupId")
                        .HasConstraintName("FK_BDGReportGroup_DuplicateMasking_BDGReportGroupID_BDGReportGroup")
                        .IsRequired();

                    b.Navigation("BdgreportGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupMissingMasking", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgreportGroup", "BdgreportGroup")
                        .WithMany("BdgreportGroupMissingMaskings")
                        .HasForeignKey("BdgreportGroupId")
                        .HasConstraintName("FK_BDGReportGroup_MissingMasking_BDGReportGroupID_BDGReportGroup")
                        .IsRequired();

                    b.Navigation("BdgreportGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgreportGroupTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGReportGroupType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameter", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgreport", "Bdgreport")
                        .WithMany("BdgreportParameters")
                        .HasForeignKey("BdgreportId")
                        .HasConstraintName("FK_BDGReport_Parameter_BDGReportID_BDGReport")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.BdgreportParameterType", "BdgreportParameterType")
                        .WithMany("BdgreportParameters")
                        .HasForeignKey("BdgreportParameterTypeId")
                        .HasConstraintName("FK_BDGReport_Parameter_BDGReportParameterTypeID_BDGReportParameterType")
                        .IsRequired();

                    b.Navigation("Bdgreport");

                    b.Navigation("BdgreportParameterType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("BdgreportTypes")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_BDGReportType_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.Navigation("Bdgcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BudgetAmountTemp", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_BudgetAmountTemp_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "BdgaccountGroupSubGroup")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("BdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_BudgetAmountTemp_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroup")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BudgetAmountTemp_BDGAccountGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", "BdgaccountGroupSubGroupSubGroupSubGroup")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("BdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_BudgetAmountTemp_BDGAccountGroup_SubGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_BudgetAmountTemp_BDGDepartmentID_BDGDepartment");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("BudgetAmountTemps")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_BudgetAmountTemp_YearSetupID_YearSetup");

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("BdgaccountGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroup");

                    b.Navigation("BdgaccountGroupSubGroupSubGroupSubGroup");

                    b.Navigation("Bdgdepartment");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CountryState", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("CountryStates")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Country_State_CountryID_Country")
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicField", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.DynamicFieldType", "DynamicFieldType")
                        .WithMany("DynamicFields")
                        .HasForeignKey("DynamicFieldTypeId")
                        .HasConstraintName("FK_DynamicField_DynamicFieldType")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("DynamicFields")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_DynamicField_Module")
                        .IsRequired();

                    b.Navigation("DynamicFieldType");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldValue", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.DynamicField", "DynamicField")
                        .WithMany("DynamicFieldValues")
                        .HasForeignKey("DynamicFieldId")
                        .HasConstraintName("FK_DynamicField_Value_DynamicField")
                        .IsRequired();

                    b.Navigation("DynamicField");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EmailTemplate", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.NotificationType", "NotificationType")
                        .WithMany("EmailTemplates")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK_EmailTemplate_NotificationType")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("NotificationType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.EventTrigger", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.DynamicCode", "DynamicCode")
                        .WithMany("EventTriggers")
                        .HasForeignKey("DynamicCodeId")
                        .HasConstraintName("FK_EventTrigger_DynamicCode")
                        .IsRequired();

                    b.Navigation("DynamicCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccandidate", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("FeccandidateCountryStates")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECCandidate_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "ElectionCountryState")
                        .WithMany("FeccandidateElectionCountryStates")
                        .HasForeignKey("ElectionCountryStateId")
                        .HasConstraintName("FK_FECCandidate_Election_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.FeccandidateStatus", "FeccandidateStatus")
                        .WithMany("Feccandidates")
                        .HasForeignKey("FeccandidateStatusId")
                        .HasConstraintName("FK_FECCandidate_FECCandidateStatusID_FECCandidateStatus");

                    b.HasOne("CSCPA.Data.Entities.FeccandidateType", "FeccandidateType")
                        .WithMany("Feccandidates")
                        .HasForeignKey("FeccandidateTypeId")
                        .HasConstraintName("FK_FECCandidate_FECCandidateTypeID_FECCandidateType");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Feccandidates")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECCandidate_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecelectionOffice", "FecelectionOffice")
                        .WithMany("Feccandidates")
                        .HasForeignKey("FecelectionOfficeId")
                        .HasConstraintName("FK_FECCandidate_FECElectionOfficeID_FECElectionOffice");

                    b.Navigation("CountryState");

                    b.Navigation("ElectionCountryState");

                    b.Navigation("FeccandidateStatus");

                    b.Navigation("FeccandidateType");

                    b.Navigation("Feccompany");

                    b.Navigation("FecelectionOffice");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccashAccount", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FeccashAccounts")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECCashAccount_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeccontributionType", "FeccontributionType")
                        .WithMany("FeccashAccounts")
                        .HasForeignKey("FeccontributionTypeId")
                        .HasConstraintName("FK_FECCashAccount_FECContributionTypeID_FECContributionType");

                    b.Navigation("Feccompany");

                    b.Navigation("FeccontributionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccommittee", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Feccommittees")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECCommittee_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.FeccommitteeType", "FeccommitteeType")
                        .WithMany("Feccommittees")
                        .HasForeignKey("FeccommitteeTypeId")
                        .HasConstraintName("FK_FECCommittee_FECCommitteeTypeID_FECCommitteeType");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Feccommittees")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECCommittee_FECCompanyID_FECCompany");

                    b.HasOne("CSCPA.Data.Entities.FecfilingFrequency", "FecfilingFrequency")
                        .WithMany("Feccommittees")
                        .HasForeignKey("FecfilingFrequencyId")
                        .HasConstraintName("FK_FECCommittee_FECFilingFrequencyID_FECFilingFrequency");

                    b.HasOne("CSCPA.Data.Entities.FecinterestGroupCategory", "FecinterestGroupCategory")
                        .WithMany("Feccommittees")
                        .HasForeignKey("FecinterestGroupCategoryId")
                        .HasConstraintName("FK_FECCommittee_FECInterestGroupCategoryID_FECInterestGroupCategory");

                    b.Navigation("CountryState");

                    b.Navigation("FeccommitteeType");

                    b.Navigation("Feccompany");

                    b.Navigation("FecfilingFrequency");

                    b.Navigation("FecinterestGroupCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("Feccompanies")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_FECCompany_CountryID_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Feccompanies")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECCompany_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.FeccontributionType", "DefaultFeccontributionType")
                        .WithMany("Feccompanies")
                        .HasForeignKey("DefaultFeccontributionTypeId")
                        .HasConstraintName("FK_FECCompany_Default_FECContributionTypeID_FECContributionType");

                    b.HasOne("CSCPA.Data.Entities.BdgreportGroup", "FecBdgreportGroup")
                        .WithMany("Feccompanies")
                        .HasForeignKey("FecBdgreportGroupId")
                        .HasConstraintName("FK_FECCompany_FEC_BDGReportGroupID_BDGReportGroup");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "ParentFeccompany")
                        .WithMany("InverseParentFeccompany")
                        .HasForeignKey("ParentFeccompanyId")
                        .HasConstraintName("FK_FECCompany_Parent_FECCompanyID_FECCompany");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("DefaultFeccontributionType");

                    b.Navigation("FecBdgreportGroup");

                    b.Navigation("ParentFeccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegment", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FeccompanyFecsegments")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECCompany_FECSegment_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Fecsegment", "Fecsegment")
                        .WithMany("FeccompanyFecsegments")
                        .HasForeignKey("FecsegmentId")
                        .HasConstraintName("FK_FECCompany_FECSegment_FECSegmentID_FECSegment")
                        .IsRequired();

                    b.Navigation("Feccompany");

                    b.Navigation("Fecsegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentValue", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegment", "FeccompanyFecsegment")
                        .WithMany("FeccompanyFecsegmentValues")
                        .HasForeignKey("FeccompanyFecsegmentId")
                        .HasConstraintName("FK_FECCompany_FECSegmentValue_FECCompany_FECSegmentID_FECCompany_FECSegment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FeccompanyFecsegmentValues")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECCompany_FECSegmentValue_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Fecsegment", "Fecsegment")
                        .WithMany("FeccompanyFecsegmentValues")
                        .HasForeignKey("FecsegmentId")
                        .HasConstraintName("FK_FECCompany_FECSegmentValue_FECSegmentID_FECSegment");

                    b.Navigation("Feccompany");

                    b.Navigation("FeccompanyFecsegment");

                    b.Navigation("Fecsegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccontribution", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeccashAccount", "FeccashAccount")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeccashAccountId")
                        .HasConstraintName("FK_FECContribution_FECCashAccountID_FECCashAccount");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECContribution_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeccontributionSource", "FeccontributionSource")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeccontributionSourceId")
                        .HasConstraintName("FK_FECContribution_FECContributionSourceID_FECContributionSource");

                    b.HasOne("CSCPA.Data.Entities.FeccontributionStatus", "FeccontributionStatus")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeccontributionStatusId")
                        .HasConstraintName("FK_FECContribution_FECContributionStatusID_FECContributionStatus");

                    b.HasOne("CSCPA.Data.Entities.FeccontributionType", "FeccontributionType")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeccontributionTypeId")
                        .HasConstraintName("FK_FECContribution_FECContributionTypeID_FECContributionType");

                    b.HasOne("CSCPA.Data.Entities.FeclocalUnion", "FeclocalUnion")
                        .WithMany("Feccontributions")
                        .HasForeignKey("FeclocalUnionId")
                        .HasConstraintName("FK_FECContribution_FECLocalUnionID_FECLocalUnion");

                    b.Navigation("FeccashAccount");

                    b.Navigation("Feccompany");

                    b.Navigation("FeccontributionSource");

                    b.Navigation("FeccontributionStatus");

                    b.Navigation("FeccontributionType");

                    b.Navigation("FeclocalUnion");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeccontributionDetail", "AdjustmentFeccontributionDetail")
                        .WithMany("InverseAdjustmentFeccontributionDetail")
                        .HasForeignKey("AdjustmentFeccontributionDetailId")
                        .HasConstraintName("FK_FECContribution_Detail_Adjustment_FECContribution_DetailID_FECContribution_Detail");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("FeccontributionDetails")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECContribution_Detail_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Feccontribution", "Feccontribution")
                        .WithMany("FeccontributionDetails")
                        .HasForeignKey("FeccontributionId")
                        .HasConstraintName("FK_FECContribution_Detail_FECContributionID_FECContribution")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeclocalUnion", "FeclocalUnion")
                        .WithMany("FeccontributionDetails")
                        .HasForeignKey("FeclocalUnionId")
                        .HasConstraintName("FK_FECContribution_Detail_FECLocalUnionID_FECLocalUnion");

                    b.HasOne("CSCPA.Data.Entities.Fecmember", "Fecmember")
                        .WithMany("FeccontributionDetails")
                        .HasForeignKey("FecmemberId")
                        .HasConstraintName("FK_FECContribution_Detail_FECMemberID_FECMember");

                    b.HasOne("CSCPA.Data.Entities.FecpaymentFrequency", "FecpaymentFrequency")
                        .WithMany("FeccontributionDetails")
                        .HasForeignKey("FecpaymentFrequencyId")
                        .HasConstraintName("FK_FECContribution_Detail_FECPaymentFrequencyID_FECPaymentFrequency");

                    b.Navigation("AdjustmentFeccontributionDetail");

                    b.Navigation("CountryState");

                    b.Navigation("Feccontribution");

                    b.Navigation("FeclocalUnion");

                    b.Navigation("Fecmember");

                    b.Navigation("FecpaymentFrequency");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionLimit", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeccontributorCategory", "FeccontributorCategory")
                        .WithMany("FeccontributionLimits")
                        .HasForeignKey("FeccontributorCategoryId")
                        .HasConstraintName("FK_FECContributionLimit_FECContributorCategoryID_FECContributorCategory")
                        .IsRequired();

                    b.Navigation("FeccontributorCategory");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionSource", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FeccontributionSources")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECContributionSource_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.Navigation("Feccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FecdisbursementTypes")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECDisbursementType_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment10FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment10FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment10FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment10_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment1FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment1FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment1FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment1_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment2FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment2FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment2FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment2_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment3FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment3FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment3FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment3_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment4FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment4FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment4FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment4_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment5FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment5FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment5FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment5_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment6FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment6FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment6FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment6_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment7FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment7FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment7FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment7_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment8FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment8FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment8FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment8_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment9FeccompanyFecsegmentValue")
                        .WithMany("FecdisbursementTypeSegment9FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment9FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDisbursementType_Segment9_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.Navigation("Feccompany");

                    b.Navigation("Segment10FeccompanyFecsegmentValue");

                    b.Navigation("Segment1FeccompanyFecsegmentValue");

                    b.Navigation("Segment2FeccompanyFecsegmentValue");

                    b.Navigation("Segment3FeccompanyFecsegmentValue");

                    b.Navigation("Segment4FeccompanyFecsegmentValue");

                    b.Navigation("Segment5FeccompanyFecsegmentValue");

                    b.Navigation("Segment6FeccompanyFecsegmentValue");

                    b.Navigation("Segment7FeccompanyFecsegmentValue");

                    b.Navigation("Segment8FeccompanyFecsegmentValue");

                    b.Navigation("Segment9FeccompanyFecsegmentValue");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementTypeFecdistributionType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FecdisbursementType", "FecdisbursementType")
                        .WithMany("FecdisbursementTypeFecdistributionTypes")
                        .HasForeignKey("FecdisbursementTypeId")
                        .HasConstraintName("FK_FECDisbursementType_FECDistributionType_FECDisbursementTypeID_FECDisbursementType")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecdistributionType", "FecdistributionType")
                        .WithMany("FecdisbursementTypeFecdistributionTypes")
                        .HasForeignKey("FecdistributionTypeId")
                        .HasConstraintName("FK_FECDisbursementType_FECDistributionType_FECDistributionTypeID_FECDistributionType")
                        .IsRequired();

                    b.Navigation("FecdisbursementType");

                    b.Navigation("FecdistributionType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecdistribution", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.CountryState", "CandidateOrCommitteeCountryState")
                        .WithMany("FecdistributionCandidateOrCommitteeCountryStates")
                        .HasForeignKey("CandidateOrCommitteeCountryStateId")
                        .HasConstraintName("FK_FECDistribution_CandidateOrCommittee_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "ElectionCountryState")
                        .WithMany("FecdistributionElectionCountryStates")
                        .HasForeignKey("ElectionCountryStateId")
                        .HasConstraintName("FK_FECDistribution_Election_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "FecBdgaccountGroup")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecBdgaccountGroupId")
                        .HasConstraintName("FK_FECDistribution_FEC_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "FecBdgdepartment")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecBdgdepartmentId")
                        .HasConstraintName("FK_FECDistribution_FEC_BDGDepartmentID_BDGDepartment");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99BoxNo", "FecLrpten99BoxNo")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecLrpten99BoxNoId")
                        .HasConstraintName("FK_FECDistribution_FEC_LRPTen99BoxNoID_LRPTen99BoxNo");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99TaxType", "FecLrpten99TaxType")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecLrpten99TaxTypeId")
                        .HasConstraintName("FK_FECDistribution_FEC_LRPTen99TaxTypeID_LRPTen99TaxType");

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "FecUserAccount")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecUserAccountId")
                        .HasConstraintName("FK_FECDistribution_FEC_UserAccountID_UserAccount");

                    b.HasOne("CSCPA.Data.Entities.FecbatchStatus", "FecbatchStatus")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecbatchStatusId")
                        .HasConstraintName("FK_FECDistribution_FECBatchStatusID_FECBatchStatus");

                    b.HasOne("CSCPA.Data.Entities.Feccandidate", "Feccandidate")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FeccandidateId")
                        .HasConstraintName("FK_FECDistribution_FECCandidateID_FECCandidate");

                    b.HasOne("CSCPA.Data.Entities.Feccommittee", "Feccommittee")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FeccommitteeId")
                        .HasConstraintName("FK_FECDistribution_FECCommitteeID_FECCommittee");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECDistribution_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecdisbursementType", "FecdisbursementType")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecdisbursementTypeId")
                        .HasConstraintName("FK_FECDistribution_FECDisbursementTypeID_FECDisbursementType");

                    b.HasOne("CSCPA.Data.Entities.FecdistributionStatus", "FecdistributionStatus")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecdistributionStatusId")
                        .HasConstraintName("FK_FECDistribution_FECDistributionStatusID_FECDistributionStatus");

                    b.HasOne("CSCPA.Data.Entities.FecdistributionType", "FecdistributionType")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecdistributionTypeId")
                        .HasConstraintName("FK_FECDistribution_FECDistributionTypeID_FECDistributionType");

                    b.HasOne("CSCPA.Data.Entities.FecelectionOffice", "FecelectionOffice")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecelectionOfficeId")
                        .HasConstraintName("FK_FECDistribution_FECElectionOfficeID_FECElectionOffice");

                    b.HasOne("CSCPA.Data.Entities.FecelectionType", "FecelectionType")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecelectionTypeId")
                        .HasConstraintName("FK_FECDistribution_FECElectionTypeID_FECElectionType");

                    b.HasOne("CSCPA.Data.Entities.FecexpenseCategory", "FecexpenseCategory")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecexpenseCategoryId")
                        .HasConstraintName("FK_FECDistribution_FECExpenseCategoryID_FECExpenseCategory");

                    b.HasOne("CSCPA.Data.Entities.Fecvendor", "Fecvendor")
                        .WithMany("Fecdistributions")
                        .HasForeignKey("FecvendorId")
                        .HasConstraintName("FK_FECDistribution_FECVendorID_FECVendor");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "MailingCountryState")
                        .WithMany("FecdistributionMailingCountryStates")
                        .HasForeignKey("MailingCountryStateId")
                        .HasConstraintName("FK_FECDistribution_Mailing_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "VendorCountryState")
                        .WithMany("FecdistributionVendorCountryStates")
                        .HasForeignKey("VendorCountryStateId")
                        .HasConstraintName("FK_FECDistribution_Vendor_Country_StateID_Country_State");

                    b.Navigation("CandidateOrCommitteeCountryState");

                    b.Navigation("ElectionCountryState");

                    b.Navigation("FecbatchStatus");

                    b.Navigation("FecBdgaccountGroup");

                    b.Navigation("FecBdgdepartment");

                    b.Navigation("Feccandidate");

                    b.Navigation("Feccommittee");

                    b.Navigation("Feccompany");

                    b.Navigation("FecdisbursementType");

                    b.Navigation("FecdistributionStatus");

                    b.Navigation("FecdistributionType");

                    b.Navigation("FecelectionOffice");

                    b.Navigation("FecelectionType");

                    b.Navigation("FecexpenseCategory");

                    b.Navigation("FecLrpten99BoxNo");

                    b.Navigation("FecLrpten99TaxType");

                    b.Navigation("FecUserAccount");

                    b.Navigation("Fecvendor");

                    b.Navigation("MailingCountryState");

                    b.Navigation("VendorCountryState");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionDetail", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "FecBdgaccountGroup")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdgaccountGroupId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGAccountGroupID_BDGAccountGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroup", "FecBdgaccountGroupSubGroup")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdgaccountGroupSubGroupId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGAccountGroup_SubGroupID_BDGAccountGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", "FecBdgaccountGroupSubGroupSubGroup")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdgaccountGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGAccountGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", "FecBdgaccountGroupSubGroupSubGroupSubGroup")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdgaccountGroupSubGroupSubGroupSubGroupId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGAccountGroup_SubGroup_SubGroup_SubGroupID_BDGAccountGroup_SubGroup_SubGroup_SubGroup");

                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "FecBdgdepartment")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdgdepartmentId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGDepartmentID_BDGDepartment");

                    b.HasOne("CSCPA.Data.Entities.Bdggltransaction", "FecBdggltransaction")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecBdggltransactionId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_BDGGLTransactionID_BDGGLTransaction");

                    b.HasOne("CSCPA.Data.Entities.Lrpcode", "FecLrpcode")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecLrpcodeId")
                        .HasConstraintName("FK_FECDistribution_Detail_FEC_LRPCodeID_LRPCode");

                    b.HasOne("CSCPA.Data.Entities.Fecdistribution", "Fecdistribution")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecdistributionId")
                        .HasConstraintName("FK_FECDistribution_Detail_FECDistributionID_FECDistribution")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecelectionType", "FecelectionType")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecelectionTypeId")
                        .HasConstraintName("FK_FECDistribution_Detail_FECElectionTypeID_FECElectionType");

                    b.HasOne("CSCPA.Data.Entities.FecexpenseCategory", "FecexpenseCategory")
                        .WithMany("FecdistributionDetails")
                        .HasForeignKey("FecexpenseCategoryId")
                        .HasConstraintName("FK_FECDistribution_Detail_FECExpenseCategoryID_FECExpenseCategory");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment10FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment10FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment10FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment10_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment1FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment1FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment1FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment1_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment2FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment2FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment2FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment2_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment3FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment3FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment3FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment3_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment4FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment4FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment4FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment4_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment5FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment5FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment5FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment5_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment6FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment6FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment6FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment6_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment7FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment7FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment7FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment7_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment8FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment8FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment8FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment8_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment9FeccompanyFecsegmentValue")
                        .WithMany("FecdistributionDetailSegment9FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment9FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECDistribution_Detail_Segment9_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.Navigation("FecBdgaccountGroup");

                    b.Navigation("FecBdgaccountGroupSubGroup");

                    b.Navigation("FecBdgaccountGroupSubGroupSubGroup");

                    b.Navigation("FecBdgaccountGroupSubGroupSubGroupSubGroup");

                    b.Navigation("FecBdgdepartment");

                    b.Navigation("FecBdggltransaction");

                    b.Navigation("Fecdistribution");

                    b.Navigation("FecelectionType");

                    b.Navigation("FecexpenseCategory");

                    b.Navigation("FecLrpcode");

                    b.Navigation("Segment10FeccompanyFecsegmentValue");

                    b.Navigation("Segment1FeccompanyFecsegmentValue");

                    b.Navigation("Segment2FeccompanyFecsegmentValue");

                    b.Navigation("Segment3FeccompanyFecsegmentValue");

                    b.Navigation("Segment4FeccompanyFecsegmentValue");

                    b.Navigation("Segment5FeccompanyFecsegmentValue");

                    b.Navigation("Segment6FeccompanyFecsegmentValue");

                    b.Navigation("Segment7FeccompanyFecsegmentValue");

                    b.Navigation("Segment8FeccompanyFecsegmentValue");

                    b.Navigation("Segment9FeccompanyFecsegmentValue");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimit", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FecdistributionLimitType", "FecdistributionLimitType")
                        .WithMany("FecdistributionLimits")
                        .HasForeignKey("FecdistributionLimitTypeId")
                        .HasConstraintName("FK_FECDistributionLimit_FECDistributionLimitType")
                        .IsRequired();

                    b.Navigation("FecdistributionLimitType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatusStatus", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FecdistributionStatus", "AllowedFecdistributionStatus")
                        .WithMany("FecdistributionStatusStatusAllowedFecdistributionStatuses")
                        .HasForeignKey("AllowedFecdistributionStatusId")
                        .HasConstraintName("FK_FECDistributionStatus_Status_Allowed_FECDistributionStatusID_FECDistributionStatus")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecdistributionStatus", "FecdistributionStatus")
                        .WithMany("FecdistributionStatusStatusFecdistributionStatuses")
                        .HasForeignKey("FecdistributionStatusId")
                        .HasConstraintName("FK_FECDistributionStatus_Status_FECDistributionStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AllowedFecdistributionStatus");

                    b.Navigation("FecdistributionStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategory", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FecexpenseCategories")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECExpenseCategory_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment10FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment10FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment10FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment10_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment1FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment1FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment1FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment1_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment2FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment2FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment2FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment2_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment3FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment3FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment3FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment3_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment4FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment4FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment4FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment4_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment5FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment5FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment5FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment5_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment6FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment6FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment6FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment6_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment7FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment7FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment7FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment7_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment8FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment8FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment8FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment8_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "Segment9FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategorySegment9FeccompanyFecsegmentValues")
                        .HasForeignKey("Segment9FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_Segment9_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue");

                    b.Navigation("Feccompany");

                    b.Navigation("Segment10FeccompanyFecsegmentValue");

                    b.Navigation("Segment1FeccompanyFecsegmentValue");

                    b.Navigation("Segment2FeccompanyFecsegmentValue");

                    b.Navigation("Segment3FeccompanyFecsegmentValue");

                    b.Navigation("Segment4FeccompanyFecsegmentValue");

                    b.Navigation("Segment5FeccompanyFecsegmentValue");

                    b.Navigation("Segment6FeccompanyFecsegmentValue");

                    b.Navigation("Segment7FeccompanyFecsegmentValue");

                    b.Navigation("Segment8FeccompanyFecsegmentValue");

                    b.Navigation("Segment9FeccompanyFecsegmentValue");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategoryFecsegmentValue", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegment", "FeccompanyFecsegment")
                        .WithMany("FecexpenseCategoryFecsegmentValues")
                        .HasForeignKey("FeccompanyFecsegmentId")
                        .HasConstraintName("FK_FECExpenseCategory_FECSegmentValue_FECCompany_FECSegmentID_FECCompany_FECSegment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeccompanyFecsegmentValue", "FeccompanyFecsegmentValue")
                        .WithMany("FecexpenseCategoryFecsegmentValues")
                        .HasForeignKey("FeccompanyFecsegmentValueId")
                        .HasConstraintName("FK_FECExpenseCategory_FECSegmentValue_FECCompany_FECSegmentValueID_FECCompany_FECSegmentValue")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FecexpenseCategory", "FecexpenseCategory")
                        .WithMany("FecexpenseCategoryFecsegmentValues")
                        .HasForeignKey("FecexpenseCategoryId")
                        .HasConstraintName("FK_FECExpenseCategory_FECSegmentValue_FECExpenseCategoryID_FECExpenseCategory")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Fecsegment", "Fecsegment")
                        .WithMany("FecexpenseCategoryFecsegmentValues")
                        .HasForeignKey("FecsegmentId")
                        .HasConstraintName("FK_FECExpenseCategory_FECSegmentValue_FECSegmentID_FECSegment");

                    b.Navigation("FeccompanyFecsegment");

                    b.Navigation("FeccompanyFecsegmentValue");

                    b.Navigation("FecexpenseCategory");

                    b.Navigation("Fecsegment");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecfilingFrequency", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FecfilingFrequencies")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECFilingFrequency_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.Navigation("Feccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecinterestGroupCategory", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FecinterestGroupCategories")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECInterestGroupCategory_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.Navigation("Feccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeclocalUnion", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("FeclocalUnions")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECLocalUnion_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("FeclocalUnions")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECLocalUnion_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.Navigation("CountryState");

                    b.Navigation("Feccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecmember", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Fecmembers")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECMember_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Fecmembers")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECMember_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.FeclocalUnion", "FeclocalUnion")
                        .WithMany("Fecmembers")
                        .HasForeignKey("FeclocalUnionId")
                        .HasConstraintName("FK_FECMember_FECLocalUnionID_FECLocalUnion");

                    b.HasOne("CSCPA.Data.Entities.FecpaymentFrequency", "FecpaymentFrequency")
                        .WithMany("Fecmembers")
                        .HasForeignKey("FecpaymentFrequencyId")
                        .HasConstraintName("FK_FECMember_FECPaymentFrequencyID_FECPaymentFrequency");

                    b.Navigation("CountryState");

                    b.Navigation("Feccompany");

                    b.Navigation("FeclocalUnion");

                    b.Navigation("FecpaymentFrequency");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecreport", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Fecreports")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECReport_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.Navigation("Feccompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecvendor", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("Fecvendors")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_FECVendor_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Fecvendors")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_FECVendor_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99BoxNo", "FecLrpten99BoxNo")
                        .WithMany("Fecvendors")
                        .HasForeignKey("FecLrpten99BoxNoId")
                        .HasConstraintName("FK_FECVendor_FEC_LRPTen99BoxNoID_LRPTen99BoxNo");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99TaxType", "FecLrpten99TaxType")
                        .WithMany("Fecvendors")
                        .HasForeignKey("FecLrpten99TaxTypeId")
                        .HasConstraintName("FK_FECVendor_FEC_LRPTen99TaxTypeID_LRPTen99TaxType");

                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("Fecvendors")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_FECVendor_FECCompany");

                    b.HasOne("CSCPA.Data.Entities.FecvendorSource", "FecvendorSource")
                        .WithMany("Fecvendors")
                        .HasForeignKey("FecvendorSourceId")
                        .HasConstraintName("FK_FECVendor_FECVendorSourceID_FECVendorSource");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("Feccompany");

                    b.Navigation("FecLrpten99BoxNo");

                    b.Navigation("FecLrpten99TaxType");

                    b.Navigation("FecvendorSource");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.GltransactionLine", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("GltransactionLines")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_GLTransactionLine_YearSetupID_YearSetup");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcodeLrpreport", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcode", "Lrpcode")
                        .WithMany("LrpcodeLrpreports")
                        .HasForeignKey("LrpcodeId")
                        .HasConstraintName("FK_LRPCode_LRPReport_LRPCodeID_LRPCode")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Lrpreport", "Lrpreport")
                        .WithMany("LrpcodeLrpreports")
                        .HasForeignKey("LrpreportId")
                        .HasConstraintName("FK_LRPCode_LRPReport_LRPReportID_LRPReport")
                        .IsRequired();

                    b.Navigation("Lrpcode");

                    b.Navigation("Lrpreport");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpcompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("Lrpcompanies")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_LRPCompany_CountryID_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Lrpcompanies")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_LRPCompany_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Lrpcompany", "ParentLrpcompany")
                        .WithMany("InverseParentLrpcompany")
                        .HasForeignKey("ParentLrpcompanyId")
                        .HasConstraintName("FK_LRPCompany_Parent_LRPCompanyID_LRPCompany");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("ParentLrpcompany");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcostCenter", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrplm2disbursementCode", "Lrplm2disbursementCode")
                        .WithMany("LrpcostCenters")
                        .HasForeignKey("Lrplm2disbursementCodeId")
                        .HasConstraintName("FK_LRPCostCenter_LRPLM2DisbursementCodeID_LRPLM2DisbursementCode");

                    b.HasOne("CSCPA.Data.Entities.Lrplm2receiptCode", "Lrplm2receiptCode")
                        .WithMany("LrpcostCenters")
                        .HasForeignKey("Lrplm2receiptCodeId")
                        .HasConstraintName("FK_LRPCostCenter_LRPLM2ReceiptCodeID_LRPLM2ReceiptCode");

                    b.Navigation("Lrplm2disbursementCode");

                    b.Navigation("Lrplm2receiptCode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpemployee", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpcostCenter", "LrpcostCenter")
                        .WithMany("Lrpemployees")
                        .HasForeignKey("LrpcostCenterId")
                        .HasConstraintName("FK_LRPEmployee_LRPCostCenterID_LRPCostCenter");

                    b.HasOne("CSCPA.Data.Entities.Lrpdepartment", "Lrpdepartment")
                        .WithMany("Lrpemployees")
                        .HasForeignKey("LrpdepartmentId")
                        .HasConstraintName("FK_LRPEmployee_LRPDepartmentID_LRPDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.LrpemployeeStatus", "LrpemployeeStatus")
                        .WithMany("Lrpemployees")
                        .HasForeignKey("LrpemployeeStatusId")
                        .HasConstraintName("FK_LRPEmployee_LRPEmployeeStatusID_LRPEmployeeStatus");

                    b.HasOne("CSCPA.Data.Entities.LrpemployeeType", "LrpemployeeType")
                        .WithMany("Lrpemployees")
                        .HasForeignKey("LrpemployeeTypeId")
                        .HasConstraintName("FK_LRPEmployee_LRPEmployeeTypeID_LRPEmployeeType");

                    b.Navigation("LrpcostCenter");

                    b.Navigation("Lrpdepartment");

                    b.Navigation("LrpemployeeStatus");

                    b.Navigation("LrpemployeeType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpfinancialStatementGroup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpcostCenter", "LrpcostCenter")
                        .WithMany("LrpfinancialStatementGroups")
                        .HasForeignKey("LrpcostCenterId")
                        .HasConstraintName("FK_LRPFinancialStatementGroup_LRPCostCenterID_LRPCostCenter");

                    b.Navigation("LrpcostCenter");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpgltransaction", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcompany", "Lrpcompany")
                        .WithMany("Lrpgltransactions")
                        .HasForeignKey("LrpcompanyId")
                        .HasConstraintName("FK_LRPGLTransaction_LRPCompanyID_LRPCompany");

                    b.HasOne("CSCPA.Data.Entities.YesNo", "SalesTaxYesNo")
                        .WithMany("Lrpgltransactions")
                        .HasForeignKey("SalesTaxYesNoId")
                        .HasConstraintName("FK_LRPGLTransaction_SalesTax_YesNoID_YesNo");

                    b.Navigation("Lrpcompany");

                    b.Navigation("SalesTaxYesNo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpglyearCode", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcode", "Lrpcode")
                        .WithMany("LrpglyearCodes")
                        .HasForeignKey("LrpcodeId")
                        .HasConstraintName("FK_LRPGLYearCode_LRPCodeID_LRPCode")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Lrpreport", "Lrpreport")
                        .WithMany("LrpglyearCodes")
                        .HasForeignKey("LrpreportId")
                        .HasConstraintName("FK_LRPGLYearCode_LRPReportID_LRPReport");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("LrpglyearCodes")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_LRPGLYearCode_YearSetupID_YearSetup")
                        .IsRequired();

                    b.Navigation("Lrpcode");

                    b.Navigation("Lrpreport");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrplineSummary", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcode", "Lrpcode")
                        .WithMany("LrplineSummaries")
                        .HasForeignKey("LrpcodeId")
                        .HasConstraintName("FK_LRPLineSummary_LRPCodeID_LRPCode");

                    b.Navigation("Lrpcode");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpproject", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpcostCenter", "LrpcostCenter")
                        .WithMany("Lrpprojects")
                        .HasForeignKey("LrpcostCenterId")
                        .HasConstraintName("FK_LRPProject_LRPCostCenterID_LRPCostCenter");

                    b.HasOne("CSCPA.Data.Entities.Lrplm2disbursementCode", "Lrplm2disbursementCode")
                        .WithMany("Lrpprojects")
                        .HasForeignKey("Lrplm2disbursementCodeId")
                        .HasConstraintName("FK_LRPProject_LRPLM2DisbursementCodeID_LRPLM2DisbursementCode");

                    b.HasOne("CSCPA.Data.Entities.Lrplm2receiptCode", "Lrplm2receiptCode")
                        .WithMany("Lrpprojects")
                        .HasForeignKey("Lrplm2receiptCodeId")
                        .HasConstraintName("FK_LRPProject_LRPLM2ReceiptCodeID_LRPLM2ReceiptCode");

                    b.HasOne("CSCPA.Data.Entities.LrpprojectType", "LrpprojectType")
                        .WithMany("Lrpprojects")
                        .HasForeignKey("LrpprojectTypeId")
                        .HasConstraintName("FK_LRPProject_LRPProjectTypeID_LRPProjectType");

                    b.Navigation("LrpcostCenter");

                    b.Navigation("Lrplm2disbursementCode");

                    b.Navigation("Lrplm2receiptCode");

                    b.Navigation("LrpprojectType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99BoxNo", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpten99TaxType", "Lrpten99TaxType")
                        .WithMany("Lrpten99BoxNos")
                        .HasForeignKey("Lrpten99TaxTypeId")
                        .HasConstraintName("FK_LRPTen99BoxNo_LRPTen99TaxType")
                        .IsRequired();

                    b.Navigation("Lrpten99TaxType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrptimeEntry", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcode", "Lrpcode")
                        .WithMany("LrptimeEntries")
                        .HasForeignKey("LrpcodeId")
                        .HasConstraintName("FK_LRPTimeEntry_LRPCodeID_LRPCode");

                    b.HasOne("CSCPA.Data.Entities.Lrpemployee", "Lrpemployee")
                        .WithMany("LrptimeEntries")
                        .HasForeignKey("LrpemployeeId")
                        .HasConstraintName("FK_LRPTimeEntry_LRPEmployeeID_LRPEmployee");

                    b.Navigation("Lrpcode");

                    b.Navigation("Lrpemployee");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpvendor", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_LRPVendor_CountryID_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_LRPVendor_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Lrpcompany", "Lrpcompany")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("LrpcompanyId")
                        .HasConstraintName("FK_LRPVendor_LRPCompanyID_LRPCompany");

                    b.HasOne("CSCPA.Data.Entities.Lrpdepartment", "Lrpdepartment")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("LrpdepartmentId")
                        .HasConstraintName("FK_LRPVendor_LRPDepartment");

                    b.HasOne("CSCPA.Data.Entities.LrpvendorClass", "LrpvendorClass")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("LrpvendorClassId")
                        .HasConstraintName("FK_LRPVendor_LRPVendorClassID_LRPVendorClass");

                    b.HasOne("CSCPA.Data.Entities.LrpvendorMaster", "LrpvendorMaster")
                        .WithMany("Lrpvendors")
                        .HasForeignKey("LrpvendorMasterId")
                        .HasConstraintName("FK_LRPVendor_LRPVendorMasterID_LRPVendorMaster");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("Lrpcompany");

                    b.Navigation("Lrpdepartment");

                    b.Navigation("LrpvendorClass");

                    b.Navigation("LrpvendorMaster");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucher", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpdocumentType", "LrpdocumentType")
                        .WithMany("LrpvendorVouchers")
                        .HasForeignKey("LrpdocumentTypeId")
                        .HasConstraintName("FK_LRPVendor_Voucher_LRPDocumentTypeID_LRPDocumentType");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99BoxNo", "Lrpten99BoxNo")
                        .WithMany("LrpvendorVouchers")
                        .HasForeignKey("Lrpten99BoxNoId")
                        .HasConstraintName("FK_LRPVendor_Voucher_LRPTen99BoxNoID_LRPTen99BoxNo");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99TaxType", "Lrpten99TaxType")
                        .WithMany("LrpvendorVouchers")
                        .HasForeignKey("Lrpten99TaxTypeId")
                        .HasConstraintName("FK_LRPVendor_Voucher_LRPTen99TaxTypeID_LRPTen99TaxType");

                    b.HasOne("CSCPA.Data.Entities.Lrpvendor", "Lrpvendor")
                        .WithMany("LrpvendorVouchers")
                        .HasForeignKey("LrpvendorId")
                        .HasConstraintName("FK_LRPVendor_Voucher_LRPVendorID_LRPVendor")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.LrpvoucherStatus", "LrpvoucherStatus")
                        .WithMany("LrpvendorVouchers")
                        .HasForeignKey("LrpvoucherStatusId")
                        .HasConstraintName("FK_LRPVendor_Voucher_LRPVoucherStatusID_LRPVoucherStatus");

                    b.Navigation("LrpdocumentType");

                    b.Navigation("Lrpten99BoxNo");

                    b.Navigation("Lrpten99TaxType");

                    b.Navigation("Lrpvendor");

                    b.Navigation("LrpvoucherStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherApplicability", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpdocumentType", "LrpdocumentType")
                        .WithMany("LrpvendorVoucherApplicabilities")
                        .HasForeignKey("LrpdocumentTypeId")
                        .HasConstraintName("FK_LRPVendor_Voucher_Applicability_LRPDocumentTypeID_LRPDocumentType");

                    b.HasOne("CSCPA.Data.Entities.LrpvendorVoucher", "LrpvendorVoucher")
                        .WithMany("LrpvendorVoucherApplicabilities")
                        .HasForeignKey("LrpvendorVoucherId")
                        .HasConstraintName("FK_LRPVendor_Voucher_Applicability_LRPVendor_VoucherID_LRPVendor_Voucher")
                        .IsRequired();

                    b.Navigation("LrpdocumentType");

                    b.Navigation("LrpvendorVoucher");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherChangeLog", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpten99BoxNo", "Lrpten99BoxNo")
                        .WithMany("LrpvendorVoucherChangeLogs")
                        .HasForeignKey("Lrpten99BoxNoId")
                        .HasConstraintName("FK_LRPVendor_Voucher_ChangeLog_LRPTen99BoxNoID_LRPTen99BoxNo");

                    b.HasOne("CSCPA.Data.Entities.Lrpten99TaxType", "Lrpten99TaxType")
                        .WithMany("LrpvendorVoucherChangeLogs")
                        .HasForeignKey("Lrpten99TaxTypeId")
                        .HasConstraintName("FK_LRPVendor_Voucher_ChangeLog_LRPTen99TaxTypeID_LRPTen99TaxType");

                    b.HasOne("CSCPA.Data.Entities.LrpvendorVoucher", "LrpvendorVoucher")
                        .WithMany("LrpvendorVoucherChangeLogs")
                        .HasForeignKey("LrpvendorVoucherId")
                        .HasConstraintName("FK_LRPVendor_Voucher_ChangeLog_LRPVendor_VoucherID_LRPVendor_Voucher");

                    b.Navigation("Lrpten99BoxNo");

                    b.Navigation("Lrpten99TaxType");

                    b.Navigation("LrpvendorVoucher");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucherDistribution", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.LrpvendorVoucher", "LrpvendorVoucher")
                        .WithMany("LrpvendorVoucherDistributions")
                        .HasForeignKey("LrpvendorVoucherId")
                        .HasConstraintName("FK_LRPVendor_Voucher_Distribution_LRPVendor_VoucherID_LRPVendor_Voucher")
                        .IsRequired();

                    b.Navigation("LrpvendorVoucher");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Menu", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("Menus")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Menu_Module")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CSCPA.Data.Entities.Menu", "ParentMenu")
                        .WithMany("InverseParentMenu")
                        .HasForeignKey("ParentMenuId")
                        .HasConstraintName("FK_Menu_Parent_MenuID_Menu");

                    b.HasOne("CSCPA.Data.Entities.Portal", "Portal")
                        .WithMany("Menus")
                        .HasForeignKey("PortalId")
                        .HasConstraintName("FK_Menu_PortalID_Portal")
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("ParentMenu");

                    b.Navigation("Portal");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.MenuParameterType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Menu", "Menu")
                        .WithMany("MenuParameterTypes")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_Menu_ParameterType_MenuID_Menu")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.ParameterType", "ParameterType")
                        .WithMany("MenuParameterTypes")
                        .HasForeignKey("ParameterTypeId")
                        .HasConstraintName("FK_Menu_ParameterType_ParameterTypeID_ParameterType")
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("ParameterType");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Module", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.HelpCard", "HelpCard")
                        .WithMany("Modules")
                        .HasForeignKey("HelpCardId")
                        .HasConstraintName("FK_Module_HelpCard")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HelpCard");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Page", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.HelpCard", "HelpCard")
                        .WithMany("Pages")
                        .HasForeignKey("HelpCardId")
                        .HasConstraintName("FK_Page_HelpCard");

                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("Pages")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Page_Module")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HelpCard");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGrid", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Page", "Page")
                        .WithMany("PageGrids")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_Page_Grid_Page")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGridEditField", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.PageGrid", "PageGrid")
                        .WithMany("PageGridEditFields")
                        .HasForeignKey("PageGridId")
                        .HasConstraintName("FK_Page_Grid_EditField_Page_GridID_Page_Grid")
                        .IsRequired();

                    b.Navigation("PageGrid");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageQuickAdd", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Page", "Page")
                        .WithMany("PageQuickAdds")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_Page_QuickAdd_Page")
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageTab", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Page", "ControlPage")
                        .WithMany("PageTabControlPages")
                        .HasForeignKey("ControlPageId")
                        .HasConstraintName("FK_Page_Tab_Control_PageID_Page")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Page", "HeaderControlPage")
                        .WithMany("PageTabHeaderControlPages")
                        .HasForeignKey("HeaderControlPageId")
                        .HasConstraintName("FK_Page_Tab_Page1");

                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("PageTabs")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Page_Tab_Module");

                    b.HasOne("CSCPA.Data.Entities.Page", "Page")
                        .WithMany("PageTabPages")
                        .HasForeignKey("PageId")
                        .HasConstraintName("FK_Page_Tab_Page")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlPage");

                    b.Navigation("HeaderControlPage");

                    b.Navigation("Module");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachment", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Attachment", "AttachmentNavigation")
                        .WithMany("ReferenceAttachments")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_Reference_Attachment_Attachment");

                    b.HasOne("CSCPA.Data.Entities.Module", "AttachmentToModule")
                        .WithMany("ReferenceAttachments")
                        .HasForeignKey("AttachmentToModuleId")
                        .HasConstraintName("FK_Reference_Attachment_AttachmentTo_ModuleID_Module");

                    b.HasOne("CSCPA.Data.Entities.AttachmentType", "AttachmentType")
                        .WithMany("ReferenceAttachments")
                        .HasForeignKey("AttachmentTypeId")
                        .HasConstraintName("FK_Reference_Attachment_AttachmentTypeID_AttachmentType");

                    b.HasOne("CSCPA.Data.Entities.Portal", "Portal")
                        .WithMany("ReferenceAttachments")
                        .HasForeignKey("PortalId")
                        .HasConstraintName("FK_Reference_Attachment_PortalID_Portal");

                    b.Navigation("AttachmentNavigation");

                    b.Navigation("AttachmentToModule");

                    b.Navigation("AttachmentType");

                    b.Navigation("Portal");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachmentUserAccount", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.ReferenceAttachment", "ReferenceAttachment")
                        .WithMany("ReferenceAttachmentUserAccounts")
                        .HasForeignKey("ReferenceAttachmentId")
                        .HasConstraintName("FK_Reference_Attachment_UserAccount_Reference_AttachmentID_Reference_Attachment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("ReferenceAttachmentUserAccounts")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_Reference_Attachment_UserAccount_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("ReferenceAttachment");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceNote", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("ReferenceNotes")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Reference_Note_ModuleID_Module");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceUserAccount", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("ReferenceUserAccounts")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Reference_UserAccount_ModuleID_Module");

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("ReferenceUserAccounts")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_Reference_UserAccount_UserAccount")
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ResourceTranslation", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Localisation", "Localisation")
                        .WithMany("ResourceTranslations")
                        .HasForeignKey("LocalisationId")
                        .HasConstraintName("FK_Resource_Translation_Localisation")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("ResourceTranslations")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Resource_Translation_Module");

                    b.HasOne("CSCPA.Data.Entities.Resource", "Resource")
                        .WithMany("ResourceTranslations")
                        .HasForeignKey("ResourceId")
                        .HasConstraintName("FK_Resource_Translation_Resource")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localisation");

                    b.Navigation("Module");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.RoleModule", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("RoleModules")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_Role_Module_Module")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Role", "Role")
                        .WithMany("RoleModules")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Role_Module_Role")
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccount", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Country", "Country")
                        .WithMany("UserAccounts")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_UserAccount_Country");

                    b.HasOne("CSCPA.Data.Entities.CountryState", "CountryState")
                        .WithMany("UserAccounts")
                        .HasForeignKey("CountryStateId")
                        .HasConstraintName("FK_UserAccount_Country_StateID_Country_State");

                    b.HasOne("CSCPA.Data.Entities.Role", "InitialRole")
                        .WithMany("UserAccounts")
                        .HasForeignKey("InitialRoleId")
                        .HasConstraintName("FK_UserAccount_Initial_RoleID_Role");

                    b.HasOne("CSCPA.Data.Entities.Localisation", "Localisation")
                        .WithMany("UserAccounts")
                        .HasForeignKey("LocalisationId")
                        .HasConstraintName("FK_UserAccount_Localisation")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.Menu", "StartupMenu")
                        .WithMany("UserAccounts")
                        .HasForeignKey("StartupMenuId")
                        .HasConstraintName("FK_UserAccount_Startup_MenuID_Menu");

                    b.Navigation("Country");

                    b.Navigation("CountryState");

                    b.Navigation("InitialRole");

                    b.Navigation("Localisation");

                    b.Navigation("StartupMenu");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgcompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgcompany", "Bdgcompany")
                        .WithMany("UserAccountBdgcompanies")
                        .HasForeignKey("BdgcompanyId")
                        .HasConstraintName("FK_UserAccount_BDGCompany_BDGCompanyID_BDGCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountBdgcompanies")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_BDGCompany_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("Bdgcompany");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgdepartment", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgdepartment", "Bdgdepartment")
                        .WithMany("UserAccountBdgdepartments")
                        .HasForeignKey("BdgdepartmentId")
                        .HasConstraintName("FK_UserAccount_BDGDepartment_BDGDepartmentID_BDGDepartment")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountBdgdepartments")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_BDGDepartment_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("Bdgdepartment");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBdgreport", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Bdgreport", "Bdgreport")
                        .WithMany("UserAccountBdgreports")
                        .HasForeignKey("BdgreportId")
                        .HasConstraintName("FK_UserAccount_BDGReport_BDGReportID_BDGReport")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountBdgreports")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_BDGReport_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("Bdgreport");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountBookmark", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountBookmarks")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_Bookmark_UserAccount")
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeccompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Feccompany", "Feccompany")
                        .WithMany("UserAccountFeccompanies")
                        .HasForeignKey("FeccompanyId")
                        .HasConstraintName("FK_UserAccount_FECCompany_FECCompanyID_FECCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountFeccompanies")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_FECCompany_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("Feccompany");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountFeclocalUnion", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.FeclocalUnion", "FeclocalUnion")
                        .WithMany("UserAccountFeclocalUnions")
                        .HasForeignKey("FeclocalUnionId")
                        .HasConstraintName("FK_UserAccount_FECLocalUnion_FECLocalUnionID_FECLocalUnion")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountFeclocalUnions")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_FECLocalUnion_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("FeclocalUnion");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountGrid", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountGrids")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_Grid_UserAccount")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountLrpcompany", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Lrpcompany", "Lrpcompany")
                        .WithMany("UserAccountLrpcompanies")
                        .HasForeignKey("LrpcompanyId")
                        .HasConstraintName("FK_UserAccount_LRPCompany_LRPCompanyID_LRPCompany")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountLrpcompanies")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_LRPCompany_UserAccountID_UserAccount")
                        .IsRequired();

                    b.Navigation("Lrpcompany");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountModule", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Module", "Module")
                        .WithMany("UserAccountModules")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK_UserAccount_Module_Module")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountModules")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_Module_UserAccount")
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountNotificationType", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.NotificationType", "NotificationType")
                        .WithMany("UserAccountNotificationTypes")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK_UserAccount_NotificationType_NotificationType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountNotificationTypes")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_NotificationType_UserAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountPasswordList", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountPasswordLists")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_PasswordList_UserAccount")
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccountRole", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.Role", "Role")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_UserAccount_Role_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.UserAccount", "UserAccount")
                        .WithMany("UserAccountRoles")
                        .HasForeignKey("UserAccountId")
                        .HasConstraintName("FK_UserAccount_Role_UserAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetup", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgbudgetCopyOption", "BdgbudgetCopyOption")
                        .WithMany("YearSetups")
                        .HasForeignKey("BdgbudgetCopyOptionId")
                        .HasConstraintName("FK_YearSetup_BDGBudgetCopyOptionID_BDGBudgetCopyOption");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "CopyYearSetup")
                        .WithMany("InverseCopyYearSetup")
                        .HasForeignKey("CopyYearSetupId")
                        .HasConstraintName("FK_YearSetup_Copy_YearSetupID_YearSetup");

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "PreviousYearSetup")
                        .WithMany("InversePreviousYearSetup")
                        .HasForeignKey("PreviousYearSetupId")
                        .HasConstraintName("FK_YearSetup_YearSetup");

                    b.HasOne("CSCPA.Data.Entities.YearStatus", "YearStatus")
                        .WithMany("YearSetups")
                        .HasForeignKey("YearStatusId")
                        .HasConstraintName("FK_YearSetup_YearStatus")
                        .IsRequired();

                    b.Navigation("BdgbudgetCopyOption");

                    b.Navigation("CopyYearSetup");

                    b.Navigation("PreviousYearSetup");

                    b.Navigation("YearStatus");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetupBdgaccountGroupFactor", b =>
                {
                    b.HasOne("CSCPA.Data.Entities.BdgaccountGroup", "BdgaccountGroup")
                        .WithMany("YearSetupBdgaccountGroupFactors")
                        .HasForeignKey("BdgaccountGroupId")
                        .HasConstraintName("FK_YearSetup_BDGAccountGroupFactor_BDGAccountGroupID_BDGAccountGroup")
                        .IsRequired();

                    b.HasOne("CSCPA.Data.Entities.YearSetup", "YearSetup")
                        .WithMany("YearSetupBdgaccountGroupFactors")
                        .HasForeignKey("YearSetupId")
                        .HasConstraintName("FK_YearSetup_BDGAccountGroupFactor_YearSetupID_YearSetup")
                        .IsRequired();

                    b.Navigation("BdgaccountGroup");

                    b.Navigation("YearSetup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Attachment", b =>
                {
                    b.Navigation("ReferenceAttachments");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.AttachmentType", b =>
                {
                    b.Navigation("ReferenceAttachments");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroup", b =>
                {
                    b.Navigation("BdgaccountGroupSubGroups");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgbudgetInfos");

                    b.Navigation("BdgdepartmentBdgaccountGroups");

                    b.Navigation("BdgdepartmentHistoricData");

                    b.Navigation("BdgglaccountMappings");

                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("FecdistributionDetails");

                    b.Navigation("Fecdistributions");

                    b.Navigation("InverseParentBdgaccountGroup");

                    b.Navigation("YearSetupBdgaccountGroupFactors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroup", b =>
                {
                    b.Navigation("BdgaccountGroupSubGroupSubGroups");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgglaccountMappings");

                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("FecdistributionDetails");

                    b.Navigation("InverseParentBdgaccountGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroup", b =>
                {
                    b.Navigation("BdgaccountGroupSubGroupSubGroupSubGroups");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("FecdistributionDetails");

                    b.Navigation("InverseParentBdgaccountGroupSubGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupSubGroupSubGroupSubGroup", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("FecdistributionDetails");

                    b.Navigation("InverseParentBdgaccountGroupSubGroupSubGroupSubGroup");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgaccountGroupType", b =>
                {
                    b.Navigation("BdgaccountGroups");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetCopyOption", b =>
                {
                    b.Navigation("YearSetups");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetGroupType", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgdepartmentHistoricData");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfo", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailBdgbudgetInfos");

                    b.Navigation("BdgbudgetInfoDetailOldBdgbudgetInfos");

                    b.Navigation("InversePreviousBdgbudgetInfo");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetail", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetails");

                    b.Navigation("InverseFringeBdgbudgetInfoDetail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetail", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetail", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgbudgetInfoDetailDetailDetailDetail", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgcommitteeType", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgcompany", b =>
                {
                    b.Navigation("BdgaccountGroups");

                    b.Navigation("BdgaccountGroupTypes");

                    b.Navigation("BdgbudgetGroupTypes");

                    b.Navigation("BdgbudgetInfos");

                    b.Navigation("BdgcommitteeTypes");

                    b.Navigation("BdgdepartmentGroups");

                    b.Navigation("Bdgdepartments");

                    b.Navigation("BdgemployeeCategories");

                    b.Navigation("BdgemployeeEmployeeHistories");

                    b.Navigation("BdgemployeePositions");

                    b.Navigation("Bdgemployees");

                    b.Navigation("BdgemployeeStatuses");

                    b.Navigation("BdgemployeeTypes");

                    b.Navigation("BdgemployeeUnits");

                    b.Navigation("BdgglaccountMappings");

                    b.Navigation("Bdggltransactions");

                    b.Navigation("BdgmeetingStatuses");

                    b.Navigation("BdgpositionTypes");

                    b.Navigation("BdgprojectTypes");

                    b.Navigation("BdgreportGroups");

                    b.Navigation("BdgreportGroupTypes");

                    b.Navigation("Bdgreports");

                    b.Navigation("BdgreportTypes");

                    b.Navigation("InverseParentBdgcompany");

                    b.Navigation("UserAccountBdgcompanies");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgdepartment", b =>
                {
                    b.Navigation("BdgbudgetInfos");

                    b.Navigation("BdgdepartmentBdgaccountGroups");

                    b.Navigation("BdgdepartmentHistoricData");

                    b.Navigation("BdgemployeeEmployeeHistories");

                    b.Navigation("Bdgemployees");

                    b.Navigation("BdgglaccountMappings");

                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("FecdistributionDetails");

                    b.Navigation("Fecdistributions");

                    b.Navigation("UserAccountBdgdepartments");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgdepartmentGroup", b =>
                {
                    b.Navigation("Bdgdepartments");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgemployee", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeEmployeeHistories");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeCategory", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeePosition", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeEmployeeHistories");

                    b.Navigation("Bdgemployees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeStatus", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeEmployeeHistories");

                    b.Navigation("Bdgemployees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeType", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnit", b =>
                {
                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetailDetailDetails");

                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeEmployeeHistories");

                    b.Navigation("Bdgemployees");

                    b.Navigation("BdgemployeeUnitPositions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPosition", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeUnitPositionSteps");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgemployeeUnitPositionStep", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdggltransaction", b =>
                {
                    b.Navigation("FecdistributionDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgmeetingStatus", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgpositionType", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeUnitPositionSteps");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgprojectType", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Bdgreport", b =>
                {
                    b.Navigation("BdgreportGroupBdgreports");

                    b.Navigation("BdgreportParameters");

                    b.Navigation("UserAccountBdgreports");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroup", b =>
                {
                    b.Navigation("BdgreportGroupBdgglaccountMappings");

                    b.Navigation("BdgreportGroupBdgreports");

                    b.Navigation("BdgreportGroupDuplicateMaskings");

                    b.Navigation("BdgreportGroupMissingMaskings");

                    b.Navigation("Feccompanies");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportGroupType", b =>
                {
                    b.Navigation("BdgdepartmentBdgaccountGroups");

                    b.Navigation("BdgdepartmentHistoricData");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportParameterType", b =>
                {
                    b.Navigation("BdgreportParameters");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.BdgreportType", b =>
                {
                    b.Navigation("BdgbudgetInfos");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Country", b =>
                {
                    b.Navigation("Bdgcompanies");

                    b.Navigation("CountryStates");

                    b.Navigation("Feccompanies");

                    b.Navigation("Fecvendors");

                    b.Navigation("Lrpcompanies");

                    b.Navigation("Lrpvendors");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.CountryState", b =>
                {
                    b.Navigation("Bdgcompanies");

                    b.Navigation("FeccandidateCountryStates");

                    b.Navigation("FeccandidateElectionCountryStates");

                    b.Navigation("Feccommittees");

                    b.Navigation("Feccompanies");

                    b.Navigation("FeccontributionDetails");

                    b.Navigation("FecdistributionCandidateOrCommitteeCountryStates");

                    b.Navigation("FecdistributionElectionCountryStates");

                    b.Navigation("FecdistributionMailingCountryStates");

                    b.Navigation("FecdistributionVendorCountryStates");

                    b.Navigation("FeclocalUnions");

                    b.Navigation("Fecmembers");

                    b.Navigation("Fecvendors");

                    b.Navigation("Lrpcompanies");

                    b.Navigation("Lrpvendors");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicCode", b =>
                {
                    b.Navigation("EventTriggers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicField", b =>
                {
                    b.Navigation("DynamicFieldValues");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.DynamicFieldType", b =>
                {
                    b.Navigation("DynamicFields");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecbatchStatus", b =>
                {
                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccandidate", b =>
                {
                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateStatus", b =>
                {
                    b.Navigation("Feccandidates");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccandidateType", b =>
                {
                    b.Navigation("Feccandidates");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccashAccount", b =>
                {
                    b.Navigation("Feccontributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccommittee", b =>
                {
                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccommitteeType", b =>
                {
                    b.Navigation("Feccommittees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccompany", b =>
                {
                    b.Navigation("Feccandidates");

                    b.Navigation("FeccashAccounts");

                    b.Navigation("Feccommittees");

                    b.Navigation("FeccompanyFecsegments");

                    b.Navigation("FeccompanyFecsegmentValues");

                    b.Navigation("Feccontributions");

                    b.Navigation("FeccontributionSources");

                    b.Navigation("FecdisbursementTypes");

                    b.Navigation("Fecdistributions");

                    b.Navigation("FecexpenseCategories");

                    b.Navigation("FecfilingFrequencies");

                    b.Navigation("FecinterestGroupCategories");

                    b.Navigation("FeclocalUnions");

                    b.Navigation("Fecmembers");

                    b.Navigation("Fecreports");

                    b.Navigation("Fecvendors");

                    b.Navigation("InverseParentFeccompany");

                    b.Navigation("UserAccountFeccompanies");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegment", b =>
                {
                    b.Navigation("FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategoryFecsegmentValues");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccompanyFecsegmentValue", b =>
                {
                    b.Navigation("FecdisbursementTypeSegment10FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment1FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment2FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment3FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment4FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment5FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment6FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment7FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment8FeccompanyFecsegmentValues");

                    b.Navigation("FecdisbursementTypeSegment9FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment10FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment1FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment2FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment3FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment4FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment5FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment6FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment7FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment8FeccompanyFecsegmentValues");

                    b.Navigation("FecdistributionDetailSegment9FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategoryFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment10FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment1FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment2FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment3FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment4FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment5FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment6FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment7FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment8FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategorySegment9FeccompanyFecsegmentValues");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Feccontribution", b =>
                {
                    b.Navigation("FeccontributionDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionDetail", b =>
                {
                    b.Navigation("InverseAdjustmentFeccontributionDetail");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionSource", b =>
                {
                    b.Navigation("Feccontributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionStatus", b =>
                {
                    b.Navigation("Feccontributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributionType", b =>
                {
                    b.Navigation("FeccashAccounts");

                    b.Navigation("Feccompanies");

                    b.Navigation("Feccontributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeccontributorCategory", b =>
                {
                    b.Navigation("FeccontributionLimits");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdisbursementType", b =>
                {
                    b.Navigation("FecdisbursementTypeFecdistributionTypes");

                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecdistribution", b =>
                {
                    b.Navigation("FecdistributionDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionLimitType", b =>
                {
                    b.Navigation("FecdistributionLimits");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionStatus", b =>
                {
                    b.Navigation("Fecdistributions");

                    b.Navigation("FecdistributionStatusStatusAllowedFecdistributionStatuses");

                    b.Navigation("FecdistributionStatusStatusFecdistributionStatuses");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecdistributionType", b =>
                {
                    b.Navigation("FecdisbursementTypeFecdistributionTypes");

                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionOffice", b =>
                {
                    b.Navigation("Feccandidates");

                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecelectionType", b =>
                {
                    b.Navigation("FecdistributionDetails");

                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecexpenseCategory", b =>
                {
                    b.Navigation("FecdistributionDetails");

                    b.Navigation("Fecdistributions");

                    b.Navigation("FecexpenseCategoryFecsegmentValues");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecfilingFrequency", b =>
                {
                    b.Navigation("Feccommittees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecinterestGroupCategory", b =>
                {
                    b.Navigation("Feccommittees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FeclocalUnion", b =>
                {
                    b.Navigation("FeccontributionDetails");

                    b.Navigation("Feccontributions");

                    b.Navigation("Fecmembers");

                    b.Navigation("UserAccountFeclocalUnions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecmember", b =>
                {
                    b.Navigation("FeccontributionDetails");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecpaymentFrequency", b =>
                {
                    b.Navigation("FeccontributionDetails");

                    b.Navigation("Fecmembers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecsegment", b =>
                {
                    b.Navigation("FeccompanyFecsegments");

                    b.Navigation("FeccompanyFecsegmentValues");

                    b.Navigation("FecexpenseCategoryFecsegmentValues");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Fecvendor", b =>
                {
                    b.Navigation("Fecdistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.FecvendorSource", b =>
                {
                    b.Navigation("Fecvendors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.HelpCard", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Pages");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Localisation", b =>
                {
                    b.Navigation("ResourceTranslations");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpcode", b =>
                {
                    b.Navigation("FecdistributionDetails");

                    b.Navigation("LrpcodeLrpreports");

                    b.Navigation("LrpglyearCodes");

                    b.Navigation("LrplineSummaries");

                    b.Navigation("LrptimeEntries");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpcompany", b =>
                {
                    b.Navigation("InverseParentLrpcompany");

                    b.Navigation("Lrpgltransactions");

                    b.Navigation("Lrpvendors");

                    b.Navigation("UserAccountLrpcompanies");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpcostCenter", b =>
                {
                    b.Navigation("Lrpemployees");

                    b.Navigation("LrpfinancialStatementGroups");

                    b.Navigation("Lrpprojects");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpdepartment", b =>
                {
                    b.Navigation("Lrpemployees");

                    b.Navigation("Lrpvendors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpdocumentType", b =>
                {
                    b.Navigation("LrpvendorVoucherApplicabilities");

                    b.Navigation("LrpvendorVouchers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpemployee", b =>
                {
                    b.Navigation("LrptimeEntries");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeStatus", b =>
                {
                    b.Navigation("Lrpemployees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpemployeeType", b =>
                {
                    b.Navigation("Lrpemployees");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrplm2disbursementCode", b =>
                {
                    b.Navigation("LrpcostCenters");

                    b.Navigation("Lrpprojects");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrplm2receiptCode", b =>
                {
                    b.Navigation("LrpcostCenters");

                    b.Navigation("Lrpprojects");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpprojectType", b =>
                {
                    b.Navigation("Lrpprojects");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpreport", b =>
                {
                    b.Navigation("LrpcodeLrpreports");

                    b.Navigation("LrpglyearCodes");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99BoxNo", b =>
                {
                    b.Navigation("Fecdistributions");

                    b.Navigation("Fecvendors");

                    b.Navigation("LrpvendorVoucherChangeLogs");

                    b.Navigation("LrpvendorVouchers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpten99TaxType", b =>
                {
                    b.Navigation("Fecdistributions");

                    b.Navigation("Fecvendors");

                    b.Navigation("Lrpten99BoxNos");

                    b.Navigation("LrpvendorVoucherChangeLogs");

                    b.Navigation("LrpvendorVouchers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Lrpvendor", b =>
                {
                    b.Navigation("LrpvendorVouchers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorClass", b =>
                {
                    b.Navigation("Lrpvendors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorMaster", b =>
                {
                    b.Navigation("Lrpvendors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvendorVoucher", b =>
                {
                    b.Navigation("LrpvendorVoucherApplicabilities");

                    b.Navigation("LrpvendorVoucherChangeLogs");

                    b.Navigation("LrpvendorVoucherDistributions");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.LrpvoucherStatus", b =>
                {
                    b.Navigation("LrpvendorVouchers");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Menu", b =>
                {
                    b.Navigation("InverseParentMenu");

                    b.Navigation("MenuParameterTypes");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Module", b =>
                {
                    b.Navigation("ApplicationLogs");

                    b.Navigation("DynamicFields");

                    b.Navigation("Menus");

                    b.Navigation("Pages");

                    b.Navigation("PageTabs");

                    b.Navigation("ReferenceAttachments");

                    b.Navigation("ReferenceNotes");

                    b.Navigation("ReferenceUserAccounts");

                    b.Navigation("ResourceTranslations");

                    b.Navigation("RoleModules");

                    b.Navigation("UserAccountModules");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Month", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("BdgemployeeUnits");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.NotificationType", b =>
                {
                    b.Navigation("EmailTemplates");

                    b.Navigation("UserAccountNotificationTypes");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Page", b =>
                {
                    b.Navigation("PageGrids");

                    b.Navigation("PageQuickAdds");

                    b.Navigation("PageTabControlPages");

                    b.Navigation("PageTabHeaderControlPages");

                    b.Navigation("PageTabPages");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.PageGrid", b =>
                {
                    b.Navigation("PageGridEditFields");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ParameterType", b =>
                {
                    b.Navigation("MenuParameterTypes");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Portal", b =>
                {
                    b.Navigation("Bdgreports");

                    b.Navigation("Menus");

                    b.Navigation("ReferenceAttachments");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.ReferenceAttachment", b =>
                {
                    b.Navigation("ReferenceAttachmentUserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Resource", b =>
                {
                    b.Navigation("ResourceTranslations");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.Role", b =>
                {
                    b.Navigation("RoleModules");

                    b.Navigation("UserAccountRoles");

                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.UserAccount", b =>
                {
                    b.Navigation("ApplicationLogs");

                    b.Navigation("Fecdistributions");

                    b.Navigation("ReferenceAttachmentUserAccounts");

                    b.Navigation("ReferenceUserAccounts");

                    b.Navigation("UserAccountBdgcompanies");

                    b.Navigation("UserAccountBdgdepartments");

                    b.Navigation("UserAccountBdgreports");

                    b.Navigation("UserAccountBookmarks");

                    b.Navigation("UserAccountFeccompanies");

                    b.Navigation("UserAccountFeclocalUnions");

                    b.Navigation("UserAccountGrids");

                    b.Navigation("UserAccountLrpcompanies");

                    b.Navigation("UserAccountModules");

                    b.Navigation("UserAccountNotificationTypes");

                    b.Navigation("UserAccountPasswordLists");

                    b.Navigation("UserAccountRoles");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearSetup", b =>
                {
                    b.Navigation("BdgbudgetInfos");

                    b.Navigation("BdgdepartmentHistoricData");

                    b.Navigation("BudgetAmountTemps");

                    b.Navigation("GltransactionLines");

                    b.Navigation("InverseCopyYearSetup");

                    b.Navigation("InversePreviousYearSetup");

                    b.Navigation("LrpglyearCodes");

                    b.Navigation("YearSetupBdgaccountGroupFactors");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YearStatus", b =>
                {
                    b.Navigation("YearSetups");
                });

            modelBuilder.Entity("CSCPA.Data.Entities.YesNo", b =>
                {
                    b.Navigation("BdgbudgetInfoDetails");

                    b.Navigation("Lrpgltransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
