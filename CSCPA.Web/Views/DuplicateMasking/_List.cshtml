@using CSCPA.Model
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <div class="col-md-6">
                    <h3 class="box-title">Duplicate Masking</h3>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="headerRightSideDiv">
                            <div style="float:left">
                                @(Html.DevExtreme().Button()
                                .ID("AddState")
                                .Icon("plus").Hint("Add Layout")
                                .OnClick("function(e) { common.addLayout('Layouts','DuplicateMaskingList','duplicateMaskingList') }")
                                )
                                @(Html.DevExtreme().Button()
                                .ID("DeleteState")
                                .Icon("trash").Hint("Delete Layout")
                                .OnClick("function(e) { common.deleteLayout('Layouts','duplicateMaskingList') }")
                                )
                            </div>
                            <div class="templateDorpdownDiv">
                                @(
                                Html.DevExtreme()
                                .SelectBox()
                                .ID("Layouts")
                                .DataSource(d => d.Mvc().Controller("GridLayout").LoadAction("Lookup").LoadParams(new { filter= "['Gridid', '=', 'duplicateMaskingList']" }).Key("Value"))
                                .DisplayExpr("Layoutname")
                                .ValueExpr("Id")
                                .OnValueChanged("function(e) { common.loadTemplate(e,'DuplicateMaskingList') }")
                                    )
                            </div>
                            <div style="float:left">
                                @(Html.DevExtreme().Button()
                            .ID("SaveState")
                            .Icon("save").Hint("Update Layout")
                            .OnClick("function(e) { common.updateLayout('Layouts','DuplicateMaskingList','duplicateMaskingList') }")
                            )
                                @*        @(Html.DevExtreme().Button()
                                    .ID("printExcel")
                                    .Icon("print")
                                    .OnClick("function(e) { location.href = '" + Url.Action("GetExcel", "DuplicateMasking") +"'}"))*@
                            </div>
                        </div>
                    </div>
                </div>

                <div class="box-body table-responsive">
                    @(Html.DevExtreme().DataGrid<DuplicateMaskingListModel>()
                        .ID("DuplicateMaskingList")
                        .ShowBorders(true)
                        .AllowColumnReordering(true)
                        .Selection(selection => selection.Mode(SelectionMode.Multiple))
                        .OnSelectionChanged("duplicateMaskingList.onSectionChange")
                        .StateStoring(s => s
                        .Enabled(true)
                        .Type(StateStoringType.Custom)
                        .CustomLoad("duplicateMaskingList.loadTemplate")
                        .StorageKey("storage")
                        )
                        .DataSource(d => d.Mvc()
                        .Controller("DuplicateMasking")
                        .LoadAction("List")
                        .UpdateAction("Put")
                        .Key("ObjectUID")
                        .DeleteAction("Delete"))
                        .Editing(editing =>
                        {
                            editing.Mode(GridEditMode.Batch);
                            editing.AllowDeleting(true);
                            editing.AllowUpdating(true);
                            editing.UseIcons(true);
                        })
                        .OnEditorPreparing("duplicateMaskingList.onEditorPreparing")
                        .ColumnChooser(c => c
                        .Enabled(true)
                        .Mode(GridColumnChooserMode.Select))
                    .Columns(columns =>
                    {
                        columns.AddFor(m => m.AccountNo);

                        columns.AddFor(m => m.Description);





                        columns.Add().Type(GridCommandColumnType.Buttons)
                        .Buttons(b =>
                        {
                            b.Add().Icon("edit").OnClick("function(e) { duplicateMaskingAddEdit.showModel(e, duplicateMaskingList.refreshList); }");
                            b.Add().Icon("trash").OnClick("function(e) { duplicateMaskingList.onRowRemoving(e); }");
                        }).Caption("Action").Fixed(true).FixedPosition(0).AllowHiding(false);
                    })
                    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    .OnExporting("common.exporting")
                    .Scrolling(scrolling => scrolling.RowRenderingMode(GridRowRenderingMode.Virtual))
                    .Paging(paging => paging.PageSize(10))
                    .FilterRow(f => f.Visible(true))
                    .HeaderFilter(f => f.Visible(true))
                    .GroupPanel(p => p.Visible(true))
                    .Grouping(g => g.AutoExpandAll(false))
                    .RemoteOperations(true).OnToolbarPreparing("duplicateMaskingList.toolbar_preparing")
                    )
                </div>
            </div>
        </div>
    </div>
